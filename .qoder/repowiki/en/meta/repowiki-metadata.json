{"knowledge_relations":[{"id":1,"source_id":"d40a3658-5bc6-4fe2-8ec9-3963bff3e184","target_id":"41d299f4-982e-4c99-a126-2a735769fb3a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d40a3658-5bc6-4fe2-8ec9-3963bff3e184 -\u003e 41d299f4-982e-4c99-a126-2a735769fb3a","gmt_create":"2025-10-03T22:43:49.6289186+02:00","gmt_modified":"2025-10-03T22:43:49.6289186+02:00"},{"id":2,"source_id":"d40a3658-5bc6-4fe2-8ec9-3963bff3e184","target_id":"d23c65a6-bc7c-4776-9e89-e8f41a1a8b22","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d40a3658-5bc6-4fe2-8ec9-3963bff3e184 -\u003e d23c65a6-bc7c-4776-9e89-e8f41a1a8b22","gmt_create":"2025-10-03T22:43:49.6320002+02:00","gmt_modified":"2025-10-03T22:43:49.6320002+02:00"},{"id":3,"source_id":"d40a3658-5bc6-4fe2-8ec9-3963bff3e184","target_id":"7ac06806-7587-4603-aaa9-ba91be0a2aeb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d40a3658-5bc6-4fe2-8ec9-3963bff3e184 -\u003e 7ac06806-7587-4603-aaa9-ba91be0a2aeb","gmt_create":"2025-10-03T22:43:49.6350941+02:00","gmt_modified":"2025-10-03T22:43:49.6350941+02:00"},{"id":4,"source_id":"d40a3658-5bc6-4fe2-8ec9-3963bff3e184","target_id":"54082136-12f0-410f-9342-009de6934793","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d40a3658-5bc6-4fe2-8ec9-3963bff3e184 -\u003e 54082136-12f0-410f-9342-009de6934793","gmt_create":"2025-10-03T22:43:49.6376253+02:00","gmt_modified":"2025-10-03T22:43:49.6376253+02:00"},{"id":5,"source_id":"d40a3658-5bc6-4fe2-8ec9-3963bff3e184","target_id":"8a664e6b-d292-4417-bcec-28fd9b8f791a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d40a3658-5bc6-4fe2-8ec9-3963bff3e184 -\u003e 8a664e6b-d292-4417-bcec-28fd9b8f791a","gmt_create":"2025-10-03T22:43:49.640418+02:00","gmt_modified":"2025-10-03T22:43:49.640418+02:00"},{"id":6,"source_id":"9184d7c3-d68b-4aba-8078-a229c6203c42","target_id":"04c216f8-be79-4879-90be-c708ebf959c7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9184d7c3-d68b-4aba-8078-a229c6203c42 -\u003e 04c216f8-be79-4879-90be-c708ebf959c7","gmt_create":"2025-10-03T22:43:49.6430192+02:00","gmt_modified":"2025-10-03T22:43:49.6430192+02:00"},{"id":7,"source_id":"9184d7c3-d68b-4aba-8078-a229c6203c42","target_id":"832f34f1-774c-4a5c-bd18-4978366f1a2c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9184d7c3-d68b-4aba-8078-a229c6203c42 -\u003e 832f34f1-774c-4a5c-bd18-4978366f1a2c","gmt_create":"2025-10-03T22:43:49.6461276+02:00","gmt_modified":"2025-10-03T22:43:49.6461276+02:00"},{"id":8,"source_id":"9184d7c3-d68b-4aba-8078-a229c6203c42","target_id":"98b6e891-06fb-4cbc-a218-a32daecbb8a2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9184d7c3-d68b-4aba-8078-a229c6203c42 -\u003e 98b6e891-06fb-4cbc-a218-a32daecbb8a2","gmt_create":"2025-10-03T22:43:49.6499783+02:00","gmt_modified":"2025-10-03T22:43:49.6499783+02:00"},{"id":9,"source_id":"9184d7c3-d68b-4aba-8078-a229c6203c42","target_id":"b98f44db-de73-44d8-b639-a4daeb8f0521","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9184d7c3-d68b-4aba-8078-a229c6203c42 -\u003e b98f44db-de73-44d8-b639-a4daeb8f0521","gmt_create":"2025-10-03T22:43:49.6526234+02:00","gmt_modified":"2025-10-03T22:43:49.6526234+02:00"},{"id":10,"source_id":"f2c9d8ee-e1cf-47ad-b78f-f33d71207500","target_id":"cdfa8d34-b329-4a22-939e-9a39190ff174","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f2c9d8ee-e1cf-47ad-b78f-f33d71207500 -\u003e cdfa8d34-b329-4a22-939e-9a39190ff174","gmt_create":"2025-10-03T22:43:49.6555702+02:00","gmt_modified":"2025-10-03T22:43:49.6555702+02:00"},{"id":11,"source_id":"f2c9d8ee-e1cf-47ad-b78f-f33d71207500","target_id":"b3f363d2-2c8b-4084-bbc2-b245c6edc487","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f2c9d8ee-e1cf-47ad-b78f-f33d71207500 -\u003e b3f363d2-2c8b-4084-bbc2-b245c6edc487","gmt_create":"2025-10-03T22:43:49.6590853+02:00","gmt_modified":"2025-10-03T22:43:49.6590853+02:00"},{"id":12,"source_id":"f2c9d8ee-e1cf-47ad-b78f-f33d71207500","target_id":"d05b66f0-38a1-46ca-8aee-5de480b8e9ef","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f2c9d8ee-e1cf-47ad-b78f-f33d71207500 -\u003e d05b66f0-38a1-46ca-8aee-5de480b8e9ef","gmt_create":"2025-10-03T22:43:49.6616013+02:00","gmt_modified":"2025-10-03T22:43:49.6616013+02:00"},{"id":13,"source_id":"f2c9d8ee-e1cf-47ad-b78f-f33d71207500","target_id":"676fb1d8-8e5f-48b8-b90a-d00580d53bdc","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f2c9d8ee-e1cf-47ad-b78f-f33d71207500 -\u003e 676fb1d8-8e5f-48b8-b90a-d00580d53bdc","gmt_create":"2025-10-03T22:43:49.6659887+02:00","gmt_modified":"2025-10-03T22:43:49.6659887+02:00"},{"id":14,"source_id":"dcfc393e-ddaf-4422-bb46-37c119272738","target_id":"7264b7c7-9d19-46be-9ef4-ff1cbccbc7a0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dcfc393e-ddaf-4422-bb46-37c119272738 -\u003e 7264b7c7-9d19-46be-9ef4-ff1cbccbc7a0","gmt_create":"2025-10-03T22:43:49.6695574+02:00","gmt_modified":"2025-10-03T22:43:49.6695574+02:00"},{"id":15,"source_id":"dcfc393e-ddaf-4422-bb46-37c119272738","target_id":"03cd6b2d-4d5a-4826-b8d1-b0269fe8a936","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dcfc393e-ddaf-4422-bb46-37c119272738 -\u003e 03cd6b2d-4d5a-4826-b8d1-b0269fe8a936","gmt_create":"2025-10-03T22:43:49.6721115+02:00","gmt_modified":"2025-10-03T22:43:49.6721115+02:00"},{"id":16,"source_id":"dcfc393e-ddaf-4422-bb46-37c119272738","target_id":"09c4a730-144f-49ee-a816-0a3c26f9b61a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dcfc393e-ddaf-4422-bb46-37c119272738 -\u003e 09c4a730-144f-49ee-a816-0a3c26f9b61a","gmt_create":"2025-10-03T22:43:49.6751984+02:00","gmt_modified":"2025-10-03T22:43:49.6751984+02:00"},{"id":17,"source_id":"f7bfca94-3657-4a74-8214-a6d7e6c54125","target_id":"2cea136e-1270-49d4-9b78-3cab16c1fdf5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f7bfca94-3657-4a74-8214-a6d7e6c54125 -\u003e 2cea136e-1270-49d4-9b78-3cab16c1fdf5","gmt_create":"2025-10-03T22:43:49.6787839+02:00","gmt_modified":"2025-10-03T22:43:49.6787839+02:00"},{"id":18,"source_id":"f7bfca94-3657-4a74-8214-a6d7e6c54125","target_id":"936e0b53-6022-4ffb-be0a-8a76b0385868","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f7bfca94-3657-4a74-8214-a6d7e6c54125 -\u003e 936e0b53-6022-4ffb-be0a-8a76b0385868","gmt_create":"2025-10-03T22:43:49.6823768+02:00","gmt_modified":"2025-10-03T22:43:49.6823768+02:00"},{"id":19,"source_id":"df29b954-d017-4e2c-9528-3632385b5526","target_id":"9e74d125-a684-4682-a19a-a672ca298256","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: df29b954-d017-4e2c-9528-3632385b5526 -\u003e 9e74d125-a684-4682-a19a-a672ca298256","gmt_create":"2025-10-03T22:43:49.6859817+02:00","gmt_modified":"2025-10-03T22:43:49.6859817+02:00"},{"id":20,"source_id":"df29b954-d017-4e2c-9528-3632385b5526","target_id":"17209690-54b9-4cb9-8851-603ab343e803","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: df29b954-d017-4e2c-9528-3632385b5526 -\u003e 17209690-54b9-4cb9-8851-603ab343e803","gmt_create":"2025-10-03T22:43:49.6885437+02:00","gmt_modified":"2025-10-03T22:43:49.6885437+02:00"},{"id":21,"source_id":"df29b954-d017-4e2c-9528-3632385b5526","target_id":"07c45071-c051-4c6e-8e82-61ff7828096a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: df29b954-d017-4e2c-9528-3632385b5526 -\u003e 07c45071-c051-4c6e-8e82-61ff7828096a","gmt_create":"2025-10-03T22:43:49.6916749+02:00","gmt_modified":"2025-10-03T22:43:49.6916749+02:00"},{"id":22,"source_id":"3548cec8-3320-4bf1-be0c-17712fbac556","target_id":"77e00b46-c029-4b07-b863-97e1d8f7d163","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3548cec8-3320-4bf1-be0c-17712fbac556 -\u003e 77e00b46-c029-4b07-b863-97e1d8f7d163","gmt_create":"2025-10-03T22:43:49.6948004+02:00","gmt_modified":"2025-10-03T22:43:49.6948004+02:00"},{"id":23,"source_id":"3548cec8-3320-4bf1-be0c-17712fbac556","target_id":"7333f24c-d4fe-4292-b04a-e01c4252837f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3548cec8-3320-4bf1-be0c-17712fbac556 -\u003e 7333f24c-d4fe-4292-b04a-e01c4252837f","gmt_create":"2025-10-03T22:43:49.6989062+02:00","gmt_modified":"2025-10-03T22:43:49.6989062+02:00"},{"id":24,"source_id":"3548cec8-3320-4bf1-be0c-17712fbac556","target_id":"66ab362a-2eee-4a25-9ab2-cff29e68e39c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3548cec8-3320-4bf1-be0c-17712fbac556 -\u003e 66ab362a-2eee-4a25-9ab2-cff29e68e39c","gmt_create":"2025-10-03T22:43:49.7025085+02:00","gmt_modified":"2025-10-03T22:43:49.7025085+02:00"},{"id":25,"source_id":"77e00b46-c029-4b07-b863-97e1d8f7d163","target_id":"7b609a6d-07fd-41fd-91ba-4e7fab78d7c9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77e00b46-c029-4b07-b863-97e1d8f7d163 -\u003e 7b609a6d-07fd-41fd-91ba-4e7fab78d7c9","gmt_create":"2025-10-03T22:43:49.7066208+02:00","gmt_modified":"2025-10-03T22:43:49.7066208+02:00"},{"id":26,"source_id":"77e00b46-c029-4b07-b863-97e1d8f7d163","target_id":"fcd6a43d-4b78-4f0b-bc4f-3b6fea29e87f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77e00b46-c029-4b07-b863-97e1d8f7d163 -\u003e fcd6a43d-4b78-4f0b-bc4f-3b6fea29e87f","gmt_create":"2025-10-03T22:43:49.710216+02:00","gmt_modified":"2025-10-03T22:43:49.710216+02:00"},{"id":27,"source_id":"77e00b46-c029-4b07-b863-97e1d8f7d163","target_id":"f0abc051-fafa-49f2-b805-be390c823186","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77e00b46-c029-4b07-b863-97e1d8f7d163 -\u003e f0abc051-fafa-49f2-b805-be390c823186","gmt_create":"2025-10-03T22:43:49.7134885+02:00","gmt_modified":"2025-10-03T22:43:49.7134885+02:00"},{"id":28,"source_id":"77e00b46-c029-4b07-b863-97e1d8f7d163","target_id":"0ca74f1f-6ea3-4c43-ab14-0f8128636638","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77e00b46-c029-4b07-b863-97e1d8f7d163 -\u003e 0ca74f1f-6ea3-4c43-ab14-0f8128636638","gmt_create":"2025-10-03T22:43:49.7169756+02:00","gmt_modified":"2025-10-03T22:43:49.7169756+02:00"},{"id":29,"source_id":"77e00b46-c029-4b07-b863-97e1d8f7d163","target_id":"187c956e-2de6-466b-ab33-af9e191bce02","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77e00b46-c029-4b07-b863-97e1d8f7d163 -\u003e 187c956e-2de6-466b-ab33-af9e191bce02","gmt_create":"2025-10-03T22:43:49.7200899+02:00","gmt_modified":"2025-10-03T22:43:49.7200899+02:00"},{"id":30,"source_id":"77e00b46-c029-4b07-b863-97e1d8f7d163","target_id":"3c6dbe52-21db-41f0-a3c5-509bfef06ae4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77e00b46-c029-4b07-b863-97e1d8f7d163 -\u003e 3c6dbe52-21db-41f0-a3c5-509bfef06ae4","gmt_create":"2025-10-03T22:43:49.7231747+02:00","gmt_modified":"2025-10-03T22:43:49.7231747+02:00"},{"id":31,"source_id":"936e0b53-6022-4ffb-be0a-8a76b0385868","target_id":"239f81a0-854c-412b-91b6-7c698a6e0b4e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 936e0b53-6022-4ffb-be0a-8a76b0385868 -\u003e 239f81a0-854c-412b-91b6-7c698a6e0b4e","gmt_create":"2025-10-03T22:43:49.7262505+02:00","gmt_modified":"2025-10-03T22:43:49.7262505+02:00"},{"id":32,"source_id":"936e0b53-6022-4ffb-be0a-8a76b0385868","target_id":"d66886a7-beb2-4ed3-83a0-c348f8dc8f51","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 936e0b53-6022-4ffb-be0a-8a76b0385868 -\u003e d66886a7-beb2-4ed3-83a0-c348f8dc8f51","gmt_create":"2025-10-03T22:43:49.7293344+02:00","gmt_modified":"2025-10-03T22:43:49.7293344+02:00"},{"id":33,"source_id":"936e0b53-6022-4ffb-be0a-8a76b0385868","target_id":"55ddf84d-8dd8-4e1f-8f99-be503a8a39ee","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 936e0b53-6022-4ffb-be0a-8a76b0385868 -\u003e 55ddf84d-8dd8-4e1f-8f99-be503a8a39ee","gmt_create":"2025-10-03T22:43:49.7326751+02:00","gmt_modified":"2025-10-03T22:43:49.7326751+02:00"},{"id":34,"source_id":"936e0b53-6022-4ffb-be0a-8a76b0385868","target_id":"3462dea4-e0a5-4f41-94b1-b68ba7b1c5f7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 936e0b53-6022-4ffb-be0a-8a76b0385868 -\u003e 3462dea4-e0a5-4f41-94b1-b68ba7b1c5f7","gmt_create":"2025-10-03T22:43:49.7352581+02:00","gmt_modified":"2025-10-03T22:43:49.7352581+02:00"},{"id":35,"source_id":"936e0b53-6022-4ffb-be0a-8a76b0385868","target_id":"449ef855-f521-4215-8ed4-40784fedfc4d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 936e0b53-6022-4ffb-be0a-8a76b0385868 -\u003e 449ef855-f521-4215-8ed4-40784fedfc4d","gmt_create":"2025-10-03T22:43:49.7380121+02:00","gmt_modified":"2025-10-03T22:43:49.7380121+02:00"},{"id":36,"source_id":"7333f24c-d4fe-4292-b04a-e01c4252837f","target_id":"92b13bd0-b8e1-4e74-9d9c-c74239a0a949","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7333f24c-d4fe-4292-b04a-e01c4252837f -\u003e 92b13bd0-b8e1-4e74-9d9c-c74239a0a949","gmt_create":"2025-10-03T22:43:49.7411869+02:00","gmt_modified":"2025-10-03T22:43:49.7411869+02:00"},{"id":37,"source_id":"7333f24c-d4fe-4292-b04a-e01c4252837f","target_id":"12cd291b-babe-4f85-ba55-4c915412bae7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7333f24c-d4fe-4292-b04a-e01c4252837f -\u003e 12cd291b-babe-4f85-ba55-4c915412bae7","gmt_create":"2025-10-03T22:43:49.7443484+02:00","gmt_modified":"2025-10-03T22:43:49.7443484+02:00"},{"id":38,"source_id":"7333f24c-d4fe-4292-b04a-e01c4252837f","target_id":"980f60f1-5785-4969-aadc-4e4c63fd7582","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7333f24c-d4fe-4292-b04a-e01c4252837f -\u003e 980f60f1-5785-4969-aadc-4e4c63fd7582","gmt_create":"2025-10-03T22:43:49.7473347+02:00","gmt_modified":"2025-10-03T22:43:49.7473347+02:00"},{"id":39,"source_id":"7333f24c-d4fe-4292-b04a-e01c4252837f","target_id":"118f608f-3fa9-4930-902f-f78c1a3f7be6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7333f24c-d4fe-4292-b04a-e01c4252837f -\u003e 118f608f-3fa9-4930-902f-f78c1a3f7be6","gmt_create":"2025-10-03T22:43:49.7503671+02:00","gmt_modified":"2025-10-03T22:43:49.7503671+02:00"},{"id":40,"source_id":"98b6e891-06fb-4cbc-a218-a32daecbb8a2","target_id":"e5a25236-7c62-40bf-8ead-7b7b54996b57","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98b6e891-06fb-4cbc-a218-a32daecbb8a2 -\u003e e5a25236-7c62-40bf-8ead-7b7b54996b57","gmt_create":"2025-10-03T22:43:49.7534587+02:00","gmt_modified":"2025-10-03T22:43:49.7534587+02:00"},{"id":41,"source_id":"98b6e891-06fb-4cbc-a218-a32daecbb8a2","target_id":"dfc220f6-3ce6-4519-9ef4-d9251b940d5d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98b6e891-06fb-4cbc-a218-a32daecbb8a2 -\u003e dfc220f6-3ce6-4519-9ef4-d9251b940d5d","gmt_create":"2025-10-03T22:43:49.7568082+02:00","gmt_modified":"2025-10-03T22:43:49.7568082+02:00"},{"id":42,"source_id":"98b6e891-06fb-4cbc-a218-a32daecbb8a2","target_id":"7b8f3459-dca3-477d-84fc-f64cf96f0c9c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98b6e891-06fb-4cbc-a218-a32daecbb8a2 -\u003e 7b8f3459-dca3-477d-84fc-f64cf96f0c9c","gmt_create":"2025-10-03T22:43:49.7601198+02:00","gmt_modified":"2025-10-03T22:43:49.7601198+02:00"},{"id":43,"source_id":"98b6e891-06fb-4cbc-a218-a32daecbb8a2","target_id":"fa9579bb-34d8-4755-aa1d-18f0551b2c01","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98b6e891-06fb-4cbc-a218-a32daecbb8a2 -\u003e fa9579bb-34d8-4755-aa1d-18f0551b2c01","gmt_create":"2025-10-03T22:43:49.7634397+02:00","gmt_modified":"2025-10-03T22:43:49.7634397+02:00"},{"id":44,"source_id":"66ab362a-2eee-4a25-9ab2-cff29e68e39c","target_id":"18a9fa57-3c29-43c0-b18c-176a83734a76","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 66ab362a-2eee-4a25-9ab2-cff29e68e39c -\u003e 18a9fa57-3c29-43c0-b18c-176a83734a76","gmt_create":"2025-10-03T22:43:49.7671061+02:00","gmt_modified":"2025-10-03T22:43:49.7671061+02:00"},{"id":45,"source_id":"66ab362a-2eee-4a25-9ab2-cff29e68e39c","target_id":"e438d169-d5a2-4ccc-b7ef-0cf7f2b277e2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 66ab362a-2eee-4a25-9ab2-cff29e68e39c -\u003e e438d169-d5a2-4ccc-b7ef-0cf7f2b277e2","gmt_create":"2025-10-03T22:43:49.7702368+02:00","gmt_modified":"2025-10-03T22:43:49.7702368+02:00"},{"id":46,"source_id":"66ab362a-2eee-4a25-9ab2-cff29e68e39c","target_id":"b5abdb0a-131f-4e3f-a899-25607bc6dcb8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 66ab362a-2eee-4a25-9ab2-cff29e68e39c -\u003e b5abdb0a-131f-4e3f-a899-25607bc6dcb8","gmt_create":"2025-10-03T22:43:49.7732906+02:00","gmt_modified":"2025-10-03T22:43:49.7732906+02:00"},{"id":47,"source_id":"66ab362a-2eee-4a25-9ab2-cff29e68e39c","target_id":"8869432f-2874-488d-8384-5f3ff2bd6f89","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 66ab362a-2eee-4a25-9ab2-cff29e68e39c -\u003e 8869432f-2874-488d-8384-5f3ff2bd6f89","gmt_create":"2025-10-03T22:43:49.7763904+02:00","gmt_modified":"2025-10-03T22:43:49.7763904+02:00"}],"wiki_catalogs":[{"id":"f1770889-5a8f-4023-94a9-dc28dd55d95e","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Introduction","description":"introduction","prompt":"Create comprehensive content for the Introduction section focused on the pyama project. Explain its purpose as a Qt-based desktop application for microscopy data analysis, designed to streamline processing, analysis, and visualization of complex biological imaging datasets. Describe the modular architecture consisting of pyama-core (processing engine), pyama-qt (full-featured GUI), and pyama-qt-slim (lightweight GUI). Highlight key use cases in life sciences research, including batch processing of ND2/CZI files, cell segmentation, tracking, and curve fitting for maturation dynamics. Provide a high-level overview of the technology stack (PySide6, bioio, numpy, scipy) and architectural patterns (MVC, service-oriented workflow). Include diagrams illustrating the system context and component relationships. Introduce core concepts such as Fields of View (FOVs), phase contrast/fluorescence channels, and processing pipelines. Make this section accessible to new users while providing enough technical context for developers. Link to installation, user guide, and API reference sections.","progress_status":"completed","dependent_files":"README.md,CLAUDE.md","gmt_create":"2025-10-03T22:07:56.1127368+02:00","gmt_modified":"2025-10-03T22:11:24.9844408+02:00","raw_data":"WikiEncrypted:/ubibW/Mu2o4rgWDcef1HnVbjqFY8Dckjr7qHWP0N8x/vIOA8r1FsRjMzuNbmzOun6a084XCEUzDsjN38qEGRA0QcPXlEdqYWJwnQuvMgFoL3pkhkmAzg3YvI4CP4i0QWO3sKiG6JnwsJQGqGY6Qre6zKmkAbYMlV0sXzELvJ3SujXxt5THRgmtb4BAr/r21n8RZ1J0XIzbCWrRA+UrCOdKavDCEgepv1R+ciOhO81piB3B0ViCYlbWqvCOZd43jNEyWsFycIZ+BowNOqfmtdbbIZmziLtBHSiJqZ30pdzjUn0AgAucu9+ZE8bkYzl8RDdxkzFGUyNCnj1K91eapdvruluUGicjXc1Jc1abgmUOjDIjv3cQPYFC5vPFIbh4glxVC6VZNSTn3xW+nEnD+MA49owzPGgSm9ib4GHH7Ky6y4aV2W3VT6j/PXRMLxHPGMWkUIT9taUviRK4wjqIvJukFoFMVzsZ1UvGRGf0WQDNm3xIL5N08LTWo83oPN6+sR74qJe6I9rTr80aEzquI12x2R/A5Vd6VV1kIfPHi8qzqQ1veL0PPMzFdn3xOaQbnBwcMLKEkBsDd6begufr9e07jJizDU9q9f0gu84a5rxgHxyWj4EDQUf8+P/tou/PGzAr2AB0ku99HIE8OBIJoIJQCp24AyFNcnbFUAVgmtZJwfG+r2Ax0BYlUlrXxBzCMQis/Ci+P+rvG10QmRerluCufXigbLbqmEVSvq2hm7ajdRrXsXsRbYMpefjo2Ewq0XNtR1kjDqVjnvfTjnuOuHOOs7/2DANPZdYtWAf0Rqz5WkJdKiPLls447+1t1jSzAOr9zQWSgolqlZwM8fHV7MPuJPigjXWt6L5R/9zEfVQ4b35Upxeenk+NzA4hvv4yXSX6NeI2D320zvn+w+U5Hu+hdxkx3aQEFNTTdjzT8zO9JlJUTRZQUH5JqDz/cWYx41wY8dMg64GdgEWooOXelHcJCxjUORA6vreOqeddjzOO5gwf9XQZzHjijD725C7Xk+5lr8iXV3KmD15NUvL6bDwbpDS1wdyoQOZPW5BLsXUlFMpYnaJ9cnFx5FnklrSYd2bBlX2FkWx61ZwNtSvXOOXTBLt1gHHVm8GxOzx+dSm/TmLcLaTk09nwyp+07v+B1joaVV8GF4VyxoOK+JstF8wohwWE5DKbX4m65+85FZO84htYMliexUrORQzbIqANkvUyfdP1/ZJtiPtGWCH1gL0XbG8h8KWJBCzvkSKYI+EoPKHCyKLX2FFnxH/nOmOvncTCrIDPQHGXrHVFkwDI82Q5KAQOpS2yS1m9oNvx9jLJklnn2DaqoOjHy4hZcje6BwjFVFveVnVjFnm/vWwcjRQX/vIqxvIXmWeeDe6mbgzUSdMWxv9hO/Kr845/+HOXIJLNi+W4PKI2VNTkET7Ee95tC8wLcLyKxhxCxDuUNkRmnqEoowTR/+GdLAHb/0Sjs3EjG/7aoPJKHF59TAJgWnWHwvjIackDCDhpUE2Ke2G+W9FweOzj9KOkj8sXNjKzWRMXeC4eC12JgLMl7Pvs6jAsMwx5yB7Q6C8skF1wgor2UAgjIEw1aWX3rfyUh2MIxyE4yA8uvdaZ0C3Iu7VMRjUY0io+M7jon70mPc1dEfTalwEqIEns7yXUe4zquo7EqsaPljoT3Zz+xUmxEwDIYPwX2vlVp9dfaPYeyh2e7vOKRKmhZT4ETo+ilNli6p5NVUMEBDemA1r4M+aBrQdZnWIG9lLPhmxnbX35Hs3yZ39w="},{"id":"124d3a1a-3657-4cf5-8491-4c9e541429e2","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Data Loading","description":"data-loading","prompt":"Develop detailed content for the Data Loading sub-feature focused on ingesting microscopy data from ND2, CZI, and other bioimaging formats. Explain how the bioio library integrates with the processing pipeline to extract metadata and pixel data. Document the role of MicroscopyMetadata and Channels in configuring data input. Describe the user interface flow for selecting files and validating their structure. Include code examples showing how raw data is loaded and preprocessed before pipeline execution. Address common issues such as unsupported file formats, corrupted files, and memory limitations when loading large datasets. Provide performance tips for optimizing data access speed and memory usage during loading.","parent_id":"e51c01ad-283a-4d22-b505-d0a31233178b","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/io/microscopy.py,pyama-core/src/pyama_core/io/nikon.py,pyama-qt/src/pyama_qt/processing/page.py,pyama-qt/src/pyama_qt/processing/controller.py","gmt_create":"2025-10-03T22:08:57.1173961+02:00","gmt_modified":"2025-10-03T22:18:59.9697266+02:00","raw_data":"WikiEncrypted:WUqMXEcJKIYjwvMXzVIDok2kI2eeN0d86tYpz06kwOuN2vwDRNUv8AbCn5baKKbAEFSY+I0GfrutQX3NvnPsxNk7iac4ia6rBqk/8J8owL77TK1xQzM7zdZj7Rch8lRbMD+eVxg/IWWXo0KipZGbGxNkc8l7ZZHt3n52C1sJ0s6ubEQjTO0x8SNZpYn7vvpDZvWlnymwTmPLtVdi5u9tH68voBAi25PER52NA0rPHCoQ+4imAdIztXockP8aoL0XfeMoV/RQmeqz06I9zTdxdbQTgqdpxWo+BXjaXOD2LTpI6yrJ9EJTsEKKP0zyKOsVEnpByQWhCRAEbAmldtt285phad8tBpT69erH+qYYmqidGFVBz7b8vn6ZGvdC2wPzDRsuVdpTas53gt1fyDdA3ba7cd/23DUjYc0i0hDkdBkZtAktiJTA/PWrs0OhPiHkZsWYkyS9V208WQ5TpC9UNZpEcAnYyvixGYousRQ1aYScLP5gJU0FaBk1eIPRu2qAxxdF7JHfKTsIpuoJlYPalCGZHHKirnMMgz2j3m0WJM4d5dXx2UR5m4QSneEU7X9Lef4yKAA8xKDpF0O+Z5qUolmCG7j8NgyWW88K1rDRgUwgEkWcQExif/n1Lki3eP/z2mGRlXVdfd/+VfxonYqx7sOO8twDyx4FHFd5fsKjont8EL1hPjJ0WHgk4uuBNR7U/t5Hx9+itU8yK7KDfOoQKeP2+Ti4nfh7+t6VAEbUc/TXU+QwRDS9VuLexu7KH6fJgLXyg09R1ZIRLthlUt/klUA22stUfF7kzHRQnrSnv93lGjmPxepZX1CUSSzTTj/BjZgleWvq/nMOBWbaNlV4bmFtYpQkBp9hPuluK6drWWlA37BGIgFnPCb14/lVQ8s2MKaPADoQf62r2sGaJid+APKOmgi26XAjj5HFq1N6AYzYPenzYI1q/IKI7DC5ouQr0aGdjjygzFSa48crPfpfunboo0LBmhpjnANsSsCDif43rLAph94R9PAZaSJrPbamYeDs430O1mVL+AvFDFkzE1VdQORVQujIGpQrI8HnPPeKacqi6Z8x7LmWQFWYuU8KqnU0xIKNbXOJt5JgTvNkHPSEO2d1xRzlNDDWs7LEpZs7Sv5N/25BjqOoMRiydOphUnKSx0hkfxzzr7q0lHQBGDpF2nA3zZF45GprCTJmELQPs1u5/m3Tw5XRVb1aN+BjsJYDKkl23GiK2jYg8VFHxD5QvTH+W6M4rpnF0NK1NUG6scXTZNhIPMrXERWvIoqMIhC21whBinAsU3TJw1wmvtD8FUn+9N/zpeE8inz8DU8s7wTeZNwpzlabZnTI5YDxm4ItPFqMwamLGtXN5BJELM0SgXQSJBgVro5WYlFqkRkwaomtXXCEyGMSSCTwJC7JH9U5lfepvtNC+nBM4bFnTECMVn9tdywlBEbG9WxnrpKX6EsBlMUlydxJQ2u5QVE7LB2NMoFy1L4CLVrLJZapYyxbRfOoGJU07Y/s8qmOasA=","layer_level":1},{"id":"6d143b2b-4f5d-402a-86dc-131073e11363","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Project Navigation","description":"project-navigation","prompt":"Develop detailed content for the Project Navigation sub-feature focused on browsing and selecting microscopy projects and fields of view (FOVs). Explain how the project panel loads and displays directory structures containing processed results. Document the model-view architecture used to represent project hierarchies and selection states. Describe the integration with the central VisualizationController for propagating selection changes. Include examples of loading existing analysis projects, navigating between multiple FOVs, and restoring session state. Address common issues such as missing result files or directory permission errors. Provide guidance on organizing project directories for optimal navigation performance. Make this section accessible to new users while offering advanced tips for managing large datasets.","parent_id":"88a939bf-eb4a-4be8-9c88-a3d1ca9f0754","progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/visualization/panels/project_panel.py,pyama-qt/src/pyama_qt/visualization/models.py,pyama-qt/src/pyama_qt/visualization/controller.py","gmt_create":"2025-10-03T22:08:57.3202016+02:00","gmt_modified":"2025-10-03T22:20:24.4365035+02:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn2u/aXuRrSaBpSNt0taKl7qj8svQUoTB3VOPveB5c651V+2dbVxl0ZbVdjXfo+7tl+BOynGRj6T6vJWvLMF1kk/5zK4LnFoXnOrujOV3kH0BTsP2HtMDCFbkBCNai5dv3pmwEZSojhSbsut/qV+Ox3yHvovh4pvxwAv3sg4zL5XecrhZuzJbFoFkptpPNEwFTZwQSxb6M4Ie92G1AO5RLyHbBeLKCNTPMvO81LMXNKfKcjvPXMQ38ksJuOKQHA/X114J7h9klQ3jbWfXSgu99EQIgvj8qAcc5m3/FD0X3BNCRVwnU0dWMY8+2dIpwWwXHts6pij7Mb2oNuM1MgAbo3uGXlnI+wunpj93EJQxm0iHTGG7AiFLw5L+7Pcd+QtSdA3CGBQsxv79q4N3M2SyA6aWFmW3/u1BEuKCx0s1EVINqKZC5BamkXr9UYuoOoqDTfDXwfJz4WdfjlsNgBIxwt9ylWLpLt5G4OQitY+1w8WeKtC4jcYwPguNOgESoogot/hBYPj1WzeGnkIsAM2lZEjFJxwvV0nkOFRd1rEMj7GgrwOLVpjZS3LTfq+p+CXODNMRZG+eOw/yR7Sx5oHzzWTSxeAetc3fxbR8ICFImKTNTkcdOBW29GQYNsKaIqR3H0CzqYasULUINapQixmAWjNHPHMX9Q53eAqhfTKc1IxgHNQUddSAVYK7rVOeG/2ygIHZdG7roYxyU5Vp9mmHzpvT2L60Unh64mk6uesQomhyJiPcnYIyQ9JSW99uxhIID2ag/xw1xSg0ctcXWG3RSBBQYoOqB3B3rCr/JXrINu304kQxZyEFYYNvtG3451duPJgNAVwLupGt43DhRY1lMR5P7gsSzqfXcPHrJK3qp9NZnvNtYz/Gxxww7VOEaPQlESpEPH/Eg9fa7m4MS/x/CBARFKcdEoYdqXM6FfC6eJxvx3KKXtIuc3/L+LHa18st4N8ZPp02cqVPSOXFO46gJZCNILx5YH0i1wd+MUzvRu1Pq2Rl0zLLOUKcUloo8lTUHkYs+DaZVA6UgFfIsK7t9oJHZNnVXeoXEducoDOebY7ZmnZC92v8l98gyxYzFpDyBYI3Am3LR6PpA8R1VACJH+TwWq1fDKsah0fevHwAjBxdH9C3EEDQT+bB2iSkW/xJRH3Zol58EDRGGN7LrMhohV6l7nX7SopKttzuH0LQGw2xogDGwAnnyaMaLZqbGTtPYCwmWUTmdEEby/JM1MWsMngTaTAQIb9LxC9hyh7SMFDh2vaZW2d/n5zgkd5tup31OTDJVvRwoparGrm0hQVeEnMvpWIAtYB8HEML1ynSvdB10/Yb/P9Gh8ajmoT5JKF0sau6cUBIn94G199lGpgs1PcPHvB2aJTwmWmIuJHJWr09D68xTNnwTgJ9SFeWvKADHUKz/xpsNXtzR0rn/fAbd+jgM6D6URnQPBgGJGZ7JBjIC87qHRA9qEYKmA1YRyXfH5klGagNlRkPpf1PQfp/yY6YSmquSG/7C1M5OiOiFFUcPO0NyxQx0t0G2X/Clu8uaOObgmICkFYNvn0C0Pc/TroQWFrFWUhn+pO2XiZ0nKvVlYsVW+U+KdAsHtAjt2rJFGg3NB+xF5JRSUFLP5XKwiU=","layer_level":1},{"id":"c45d74a6-adf0-466d-b366-098d9225fd0e","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Data Import and Export","description":"analysis-data-import-export","prompt":"Develop detailed content for the data import and export sub-feature of the Analysis Module. Thoroughly explain how CSV files are used to load and save analysis results, including the schema structure for input/output data. Document the integration between the UI's data panel and the core I/O functionality, focusing on file selection, validation, and error handling. Include concrete examples from the codebase showing how metadata and fitting parameters are serialized and deserialized. Explain the relationship between analysis CSV format and processed results stored in YAML. Address common issues such as malformed CSV files, missing columns, and data type mismatches. Provide guidance on preparing external data for import and exporting results for downstream analysis. Make content accessible to beginners while providing sufficient technical depth for experienced developers.","parent_id":"971318b3-b951-4b95-914e-55ee91bb0a8b","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/io/analysis_csv.py,pyama-core/src/pyama_core/io/results_yaml.py,pyama-qt/src/pyama_qt/analysis/panels/data_panel.py","gmt_create":"2025-10-03T22:09:01.8092449+02:00","gmt_modified":"2025-10-03T22:20:24.8770991+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQDd8+F4KrgMpMAbZffyAz1ePsZlgMLFlP0VIibe1AF8g8L08T0oQxrnU/cnXrSLuCwZkujNZ0H+wBOXuwIkZuozXIii0zENWdUCIXwiLKXq4VmpD/rF+kY2KX1+lc+S6uWjGR5N64/cEVFpjq3fyuXnMnOR90lDIXQ9tJCETzwzZ0jWP2t/Pm+2O1f6zg279iFVvqRbbWz/Wzg6fGnz1ZMPn8DK6sl0yxUVzmH5uQZGnn80G90naiPcISVaIP9Th8OVs7iqeIlSKV6SrMjOcCTpJYnpfJsLENYYVWCv9Z6raTzvP9vtyPicX03V6WeN5o1G8xzX/3oWt19AE54tjdpvebNiOMyhBX7S33z4rHJi1qcdsxYh9sXnAcDpTou/XukwWaB60q0rvqgqK2UMksOxWLMsWe0CuvMM6pER72gqP0l6ViLzMEga2kTbaL+UxGXQPpFwHZKyF9Dn+GNlbPbCEOa9JDEAjVPoRt3nSQIefhnNU67+QsFxvi9RnDpX+9vhFcRn5JC8QDtbbbZncunVeIyQloV8tKAys0uI1RNqXOBDhvnkVHdurX3PgG0h2nQbS/7KZL6ylkmWvyN+FmHFFgsQX5+oUcPi/iDWnykSQjkJlX+CkOcDHEF/F/+Dc+AcmBj+xJScwYCbt9l7BamNRIRg6zO4y/QONQPkjEmk3bVwh9ObQK4NhWC+72wp0vMHKQrsxOxENKhNXdqIhglKeREkeeLQR4nQ6t0loizHprnCNXzpY3Nx0IrB/UfyT8xQniQUJ8tRBJCVm02aYwjlcyw4j38g6OmAxFgCnUvxfPLtbr55FAkMEuSG8lgYi1JZ36SSg1H3nwvlE0owe9V/OAHYYZzP8fSabhjkS2CnIr2BcwAI/hdvTuxxjxkda3HUZwKp2vpLtsRoqpizbaV5ZQF7Jkb5GFT1U1Lf1YUKMQJZW3p8qUWSioIvtG9xIm3L/oT9kr94iZAuLPyWY42XbdiJOhgLVYhU63v0nj3HiX6HYkcJHi5uuwNuQYKr1blYvQTNv+eLy1M/PcSbimMeXU29jiFayObH009vQKphDxK+l/RLJ3HyUMJCZ1ooZ09OheoF3UrKiu05xMuK6oFvCFUYQdDtFA5lxE/lgKBCy61EfXZJbUleqeatmb/vf9N0lUpYeHRcNyaB33X6O0lMDfHrtNOefLXAN2kTPVpjSf810o1hkDs0CoQTKbVlFhewHPnKVkBBeJ46CdpUatHuj8u+LsOF5YmGx+0nBAdeS2IyW6mnaVYcxmLcB/YLajuledr1iA1ZtcUiNAAPSvqCHmDMvoMIjflK5vNtzWG78eVXF55WL8cYExTXH4TZYpUGtH2a8FFhjUQhKvs5JmHI4ijT9frIVJ2Rhpvq6qbSnEeJ29ch9o79wd8bkWBuB6CJSeLLTdGOWHQCUEiWNIfTbKTIK6mziXBYgTae7ghMzF85TAfwK5Pi6HooNWnKRGcGaim6dvb4vVuZ/7Y4R4cjVXOQKJp1StBN09l0goMM1t2shxcokV4isp70S+nZnchkhQY9c1WFtKivokqkxToR4PO0Pt6WWHbgoXXBYyIQL4yq7nqN4779PAIr+nUQ22HQWWcRdMJ6xvPTqP8kOTYPDuFhT3uuIJ8EojHdV68C3jRfy8PwpQQMYv7+d9uoCIDXfKh7Ki5JyUHivZiQcC0M=","layer_level":1},{"id":"b69c42a4-8454-415f-b1f9-c03dfd8a8c58","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Pipeline Orchestration","description":"pipeline-orchestration","prompt":"Develop detailed content for the pipeline orchestration mechanism in pyama-core. Explain how the run_complete_workflow function coordinates the execution of individual processing steps in a defined sequence. Document the role of the ProcessingContext object in maintaining state and passing data between stages. Describe the error handling and recovery logic that ensures robust execution across long-running workflows. Illustrate with code examples how the pipeline integrates with background workers and handles batch processing for improved throughput. Explain the logging and progress reporting mechanisms that provide visibility into workflow execution. Address performance considerations for large microscopy datasets and strategies for optimizing memory usage during pipeline execution.","parent_id":"d84c9a8e-53c1-4dbd-abc0-9fd2f8d4e5e5","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/pipeline.py","gmt_create":"2025-10-03T22:09:09.3104293+02:00","gmt_modified":"2025-10-03T22:20:52.0962749+02:00","raw_data":"WikiEncrypted:oxtugALaf4ZaLWbA38Iyv6vu6GlfrABMydR/QcO44mirMUUfyY462aTV8xQqjX86SzJlE5Z1ggD0dyfW4vKL6d9hF4xfUNgz6MxEr58jq12onTMfv+grckgnyTqcytd/9/vz34SjH+82cYuVyCvJkIdiTfdapmTNl5XSCVt3bxnwfC3o+ZDI/muWMmdO3iS3yd9Nr2QIw1IepY9gb0uJT8GKLmCrfmS1bPEgMg0VzaqGQ6FYi+6tt+FLWlcULBfOuL+HohoK4gEJLBFhi48T0HGgYPCwI2R50UKeZbMQYohXJyV/96MDByD0rXSALvxeKC9gOgPbKoBEez2lc5/jdSHdow0KpnF5DS3Ek9b6dLQxAHZPFTB+xNe6olXBKt7wPbj1pP5hkTbK8TH9OXMhUPZqKwxlmMNd1rqVnh1csTH7yemhyBckB38HL3oGANohqmuQZ7z4Tk6qSVxt5YA3H9ptxzoNpqC5vBOpIquG7y7IRKguTjzZ1tKP0GXachcpmXUcpd1GD4EECPOE0gDdKiw+oHHkf9ntypLt4iqJ+HxuY1s9N4wZF9PUgxVJKEMq7KzT3kK9e2geWcI87Z533CIr819Huu4KKAAFdLep6ZPLPjp9lhSzpWOOyyKOvirwi5UpO5/aJbwRrwoQK5aXEASrohwOsHRcGW8bAT3Uh7a6PLFtEaQx4aVhzV5Cd3e1zn+f9NKXSkfF4gMCRJublzf20eJKlxtPU0VGxhad4pDaTrc+Rh78nCRHa9SNOVLLlDDY5AvK2CqJDH0AS1/CJIVXnXqo0nwvu3L0/AJNLWs8Tm9RMR2XGfkuIdlo1qverLh26qf++hF4KyZXcXDD8IGoAjwVg6dzaghXkYxiiSogkEoDnrc2gI5JlI0vUsCMq+3aWX5u8ZlBfvOsB+L8se551zCvxnAYveJvuOHTdMyPIxsjNUKYEn8KAFOyvZZfHFw4bLm22zEARk/PY7R+sgsMf5TqsWF1GpimpENLgViefu0Y/KmnYFbUimLsyPm3ngZeVG97Qa91szU7lrSTw4C2qjyJ0igwa1cgVH7YE+U5F7Zntp6DzJ8qSxavSsgF7veubiTM6LjJ5HwuFqlcJGMKQbKoZaRuQjm0dm+COUHhi36qHGdm3ftHp/CBSkmSOQdNj5x3+RatiU03bSj5JbK8zQKYOG4wKeCHeIkfEJvX5+C4LzXusD36umRyFlrpG+fbXie7UwGv1BLNRpnyL3RH4yLeCykQVYx5s1qXq8NZMtynNiB3gu0Iw8sb8NHip8uOjDdHowKqxxtGeNhaqpvM9WX8Nuts2uzhJ6ZWhrn1KEiyCE5NjFxTgRySXaibnkrg5F2CKpI5VQeR7OMnCKoUZgOUiAjkSORr8OZVCEynnF0wR1O7o490JyAKeoBekbSyxX/TYq6sqR566Av3GKVtFVe7YSJKtpvbltbZp/FIPeS2fqwwTgU7b4y7tie+","layer_level":1},{"id":"9c6916bc-e8bb-4528-8d69-2d95eaeda25b","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Trivial Model","description":"trivial-model","prompt":"Develop detailed content for the Trivial Model, a baseline mathematical model used for curve fitting in biological data analysis. Explain its purpose as a constant or linear reference model for comparison with more complex growth dynamics. Document the mathematical formulation, which likely represents no change or simple linear behavior over time. Describe the implementation details including parameter initialization, fitting constraints, and optimization approach using scipy or similar libraries. Provide concrete examples from the codebase showing how the model is registered and used within the fitting pipeline. Explain its role in model selection workflows and statistical comparison (e.g., AIC/BIC) against more complex models. Address common use cases such as control conditions or non-responsive samples. Include guidance on interpreting fitted parameters and assessing goodness-of-fit. Discuss limitations and when this model should not be used. Link to the base model interface in __init__.py to show inheritance and plugin architecture.","parent_id":"4ccba304-272c-40d3-a267-299f6b637bde","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/trivial.py","gmt_create":"2025-10-03T22:09:17.8554409+02:00","gmt_modified":"2025-10-03T22:21:52.7188738+02:00","raw_data":"WikiEncrypted:lxOQPu1k1pnQ6IqrUStFeQ6aZiKY9D8Pnsu0T7BuOuchDIlXODFDC0cMbD3p1NXhac4H/N4KVIVXIHzoLImgwRGc5/6f91UhOf9nS1yaw+oBOKFSrsPnG545PUwRZiuibsCrQTDelDrLTkfSIz/yiZ2H4e20s2m0nCpUA+DaaByFEE1gsnMa+J/y5anFbMKPol6yroXbWPckM7ATOYx9OH24nK02MAMF61EroHganu8XUULQfu4f58CeYCQh1zY2EWtqYHMzcrMGR8Td9sVyc0WivDQw44ocPtk6QWfl+0grIh12iVSC0D5DsECrjD37SLWROzB/G8DZNHmJ8X3WenwvsJGr0FEnko7v95ThnKfnlE6S80dDzpQbSczUyuXGUiOfs2hpLDRaKKDXP6Rsq5FWK5GWs0EtxHDHfh88npWSCnqIDMjAJQrJggQ/Y7cwYwo7iHmNPqysp86VuTWVxqqjrH+ZrNTXFO2XKmuuuqXVIUzVQ+oDy3ofiZ45Oq1HBByuif5KNTqcT7gTGfzRLl06+iYMBbCt/D0eVJOxdehThX55zSJrC6F6W2Qb5Na9Vo6ZEDkaA1BIh7NzPFJT9p4Ls7ErD3vTuWlbBx09diMMUNOs5gc982AaWAsAgE6pyfre//welgmOwR+VMVWObMj6XBr0Kmayhc1KJQQIfcvv16vWKKXISsjvOGW5E0pLtYYnuqCBLm1OfQb+JBtvMOuaBpxt3mGFzrzj51mun912PfFSF2Bh6IdAWBOXacvWjbVFucfSjCS+Xem1gIUWQec6vDDBGqy9Q5fQP9N8HMrLpOS6a1L5PI7L6EbYRL8qX6uUVU1L0JXIniSeLHT092r44I/iC5Y6EKxO/TCDs0jZUxbaiKIQHmvFIbmJKx1LL3uMyEDulfzpS/PHafFodNXVPRBqxO9CQ+VT7ZVzksSIkt7GPPtUahn9Klhrec0zOze1JW/1E7h2I0GVsFvtSooSpuubO2eH+828B4Aa0cyHbQqChHZfhJOMMe4Hl8BrpQTkjpR3UMFZt8nRcsWU9TSSpc+pAaX5ZKWtRFSaJ9aJkwre4DhVYhDYxjURRs+tvjTSwgcIQE2mgDLVXjUkkXAsMAja8MhEibO97a1bSd4p2JAer/EUJzCRbjw/s9V07hVOwuVm21e591sJuQBRyXKg1BWTsO+FxEh4Evqo6V5rYhsR8WuELhBpPlZqrxQ7ZFIrc0jYa94o7Bmc+rvGdSwa5f+CEjuIqu0qyZR0nu6RFqpASW2kT2pNBGNiIVILLEvP7nY7+ghyUWFrJYex9r/RI6xHE1Zm1/0geI+UZJRECwDqcuYB+unBF0pXYpeuZjX2ZibWt7OCkeGUFbPSi3yxqLaWLUvO37OS5aTph3cisuUDTNMLmKVuyeHR8re0xzjl1xAxUIsmZEqPIt9gvkTOR8GYx2/1S8CdIdkCTwo9sPT67miGejCrc+Aa2o/kLB7IhSvsUjeV0YjSjSDoMYRuA/4qiuYHUJ9muRiLpRRD3lpuLBWyqMKPstrvDN8bXhVYZlW39lGM1CnWLu9Y/A9qGT3XKiqvkj15caWW8Pg27FmkkH5dYee2N0tRRgsEG3aLuGyouqt7C7SeOJgD7qYFrikWwDrf3/qFwM67d2JnBOKskwEdJ0DyE7GV1dIAx3QR2XP2mhGGDUdklZkLFVY2y1dpbd1URBKq/pLbg7i/tpp88FanlTgGtR1iaGDutJAB6giRd5AO1dMlmfaMhhj8IHQUSIMDndgmgciu9IxPNQZkAtgWaiEa2WGLPOQk","layer_level":1},{"id":"43245262-889f-4f7f-a2ec-c7da0c7eed83","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Parallel Processing","description":"parallel-processing","prompt":"Develop detailed content for the parallel processing sub-feature. Thoroughly explain the implementation of the worker thread pattern using QThread and worker objects to prevent UI freezing during intensive computations. Document how the thread pool is configured and managed via the ThreadingService, including worker lifecycle, task queuing, and signal-slot communication for progress updates and result handling. Include concrete examples from threading.py showing how long-running operations like segmentation and tracking are offloaded. Explain the integration between the Qt event loop and background tasks, and describe how exceptions are propagated safely to the main thread. Address common issues such as race conditions, thread affinity errors, and memory leaks, with solutions implemented in the codebase. Provide performance considerations for tuning the number of workers based on CPU cores and dataset size, and include best practices for monitoring and debugging threaded operations.","parent_id":"0dd33875-1369-42e6-8e74-9b4136d237e8","progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/services/threading.py,pyama-core/src/pyama_core/processing/workflow/pipeline.py","gmt_create":"2025-10-03T22:09:21.2744547+02:00","gmt_modified":"2025-10-03T22:21:54.285342+02:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOHyS+flGydsslmRxAbjul8yE0HU5zb6GT0WfXVUP7AGNo7WnqsT3qz2TPRiB9vMKxXHW4BCmvfLaxXpExyPNDnFJ5AjxrdEL+pVMakwRakfWHBE1Pv0BapnwPPD7kiY1aldr5TyYADRRk+DmTaGW+i6i0jLEzN5teNXSaDhyHz2q+m2AiNG3hrU7M46tKOktqsK+JRRaCAWma4dx5rQ7MXSkI9LRYM6zI8FRQQlnnB/psQHWROfgMGv6cka+ATR8WhvQK6jljC8RybVqqB8n5H6sMZFui3dfLJfzYIDtL+D/7bPfADp00DktiM3Ghy891fJsG6prlVqURzxTAGKBUADBC378cV+sfCrSaoJQz9Cwe51tQF9HXXFPriFVPH1nDAVhE6vkG6KXV5/9ci4SjA7eUoPeS9BkV5xZeK9p0LKAzhWm4edvfWGtyg8hC5r9vjBP9GglRbD1eDHOTNCLKJVMCboMJW9GYSqDCtbZgRzPU7tbkoOY3idzwa68fIlgfsVSS9mc2B3pQuhhikgfjst4BsSy+MJsyp/mnPIm54QRgfdDai4iW0y/RgVj6/gcSMwzwYEYXzk72V/qtl5ugSdhfzgB9Ts8u4+WJ4yXRLDOA7Cqce5EZTgeDMf/D/Y+TPkXZepuB7PhVLAj2nyMVAvlnfli/yNRleVp0M012x4upDkyoyMIDmNG1bbgVj2GmoeE0PhZMul/g7C4l+fy2iy7ISEH5Hca3bxq1eXVt9HRgRV97G2cCnr5Trc412DB3wH8wiYA4Oq2E1XuG81QxQLks0c3y2+Ws3CHneBA9KhcEMIshgG2eTVLf2xNF4GN852vShMFAqWgH69PmryuAFBOfmA6SjD93UNAoP8fJPquvcxJC22FeBhtJm6n+So562s+2qwtTvJ4A8l4KqmAImxSPFLAoSTBEwWrVEfBfVrKW/Nu/03VaWeQdWoYhc/ZkLoPXpcnnIRz8gfCHZN9vKfDpXMkKzp2mplC7KONAidxOdIjCEU+33cifS6q52She1YDuFUR0x4dBLdPn0vfGNWlYqapxNSUBh2A7wKINqe5qokykrwVeeOIQX/48sjt2OCQMLegV931eQBfeqvwYiLM6C0LzfFgqtY1I6ce9KYJ/KngkH45n+sf1w4mGeV3gwEUv0xPSom37RzQzYTyo7/jG1mGbCRuVep1RIvl5QbKgIfeCbYX4xGUn3EgJdYV7R+sDm54Wmn6vG6fIwmBNYfP6bdd4mkCIjp8XwTy59LrisHDuah849Gkx+t/tzMgjHHplk++0XNH/7pEB8ugbFDN30milyAVS2itTX8tGyVONQ40Q/q2E3ZPBNt5bwQSVlkWGX+ullU8HSxeqW2E09z5tNpru6pUbiCV2XCDwq1QPbleXB1Gx2Cmx884yTYdqKtKt82ZMzE10F/fvWtKIBRDOEJvtxGalZwghPFyy/JqivnkVFdgIuwwIwLfVNIMbH+OK75h5C8ZaE+0VzFHH0Ld8pI85iQq/1e7UGSSK4EdKWlpddW4I/cj6bgu5RorC4rxFK0N9iURzVXxz4g4VTdS2IvM/Wi9Zsb/TAwHduT1zfTzpqTcOzguKJfaojZIsPvscQWtHvWOx4CFAZziDq+g8hfMDtrjYBzpnnhKulvfR2Q3A5umKsFLZPWQaLwnFjiaZo6CIyFfX48MHyGZ0kFUI1ACg66Zwbqg/UT+wRsuWXkdBuNFRdobiMQD/rZLnx2uummJpFvMzU6ybaSDJhE5lvfTn4vMJgcUDzw0fiF/L","layer_level":1},{"id":"63147ce0-0997-492a-97cf-4a038ad7300d","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Processing API","description":"api-reference-processing","prompt":"Create API documentation for the processing module in pyama-core. Document the run_complete_workflow function and Pipeline class with parameters, return types, and execution flow. Detail each processing service (SegmentationService, TrackingService, ExtractionService, CorrectionService) including their configuration options, input/output contracts, and error conditions. Document data models such as ProcessingContext, ResultsPathsPerFOV, and Channels. Include usage examples showing how to configure and execute workflows programmatically. Explain the service base class and extension points for custom processing steps. Provide code snippets demonstrating parameter customization and integration with external systems. Address thread safety, resource management, and performance implications of different configuration options.","parent_id":"854b94a1-116c-4589-aef1-8ab73760437e","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/pipeline.py,pyama-core/src/pyama_core/processing/workflow/services/__init__.py,pyama-core/src/pyama_core/processing/workflow/services/types.py,pyama-core/src/pyama_core/processing/background/tile_interp.py,pyama-core/src/pyama_core/processing/segmentation/log_std.py,pyama-core/src/pyama_core/processing/tracking/iou.py,pyama-core/src/pyama_core/processing/extraction/feature.py,pyama-core/src/pyama_core/processing/extraction/trace.py","gmt_create":"2025-10-03T22:09:29.796149+02:00","gmt_modified":"2025-10-03T22:22:49.3199543+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0FX6PpUJ/WvHCUWZC/NaYOi+zhss0sa5a2U7yQKwrFjy6rwG3V5EjIWO0SzBb16OeFqqqwcCWngeNylNe8+9oqLQ6RwA5f2EG4wtjASTE6UasB/mfXznr4kiUvjWR2XGE/DX9dX4s8+oOjgihSmIyofGy54ClfO3/qIwaeth47ImysdWHTaLLBHUvePyqF0PyfW+qDn1FjJOEaRIHrt6LKqprnIuThJQXwGw9wB1MGzfHfB5nOm0/nKr+yh3qiMTODz5B+bJakNXfaOCM0/MkRbjAiJKqsZkCF56nyJKpfLosG5rjF88p9oiN2SWZXTe4T2XL5cuGWLrJC5LqxCml25cePo58SuHbZDS03dl08g/5P7e1VjSClRFXoHvrf5Y3x+A4vQNGQrR/l1P3md/vBQfp/REIxjZvMCew9TID+VWz81VqTlZmSN+Nsd8xQwVbiMigd4reob+20IVgyW7488iyl2JckBpNjrE6UnB8mVamnXJBg7gGuF+uc8GArADRlZO/W1QKwTISwYRl2JqZBeIE+9EfGLcBvj+dG+W9fQ/J6UTIwpds6Czdebg5rnSxqADpana2LcauI0kRPXT31saVnAsnXNqgPyaHbhyJnQsSr+QeHiXETgl/nZJ83gQu0KZd7Z9FWZn5Rw24eBDzlLqegLLwN5nwYC90wW7SM3OMk1IW/gBoRoukxnQobxjiDxMSGS/83vePoF8iRZnPzrV/H8/EwveMp90lcy+qdmvfZ+PVnlQEgkrLqsXGi2fKsNiTF20OzUN6LYurfgDovD6mpQr41PX8emSUEgMtz2hO1gtSfeIn7hdNWWY7Y4TCxBnc4+r0h0ReneIm6zetxT1Yoj3eFn4/dAZckt3xcJ1AYRdUzGMhMuxzT/JqaQ9GXKJFpLWNHsw41O4/9jCdIyK/aPHx6tHjfg1u5AxK/KyCUtClMh21MwXOfzsj2s/jHUoxiWwnTgfoPa9xDWj41g5w74l1H3ajqm3RllJE7opQxAi+uNOz33CZR6Vpg/hxsC9jY1GaFd6b0oFrAPIULbyMwY+1YmuyL0nlwrz9ZCn7tl5sBDyIBIx7O7J976O64Rja8c3FUI2ZCoaLW9oIwSj6XRWasiaDzxnzEJiitGzqQdfVH4xo6U6RaWtjkYyb/4n5p/xSNh9Qqg2/fK3V8MRo4p6QW0M+FxVD9KfRc5rlknoSuVtwvN/6pRuKesyMCqb2CghDzItpvm9QClAfVI8e3H0gJQpr8FvQtnlQQPCKUDNODLlH5msOgqfdZb53FONz1aXXE97+UbV5dg3+U5ANBkISHphZBGD7+1lk96Mvr9k3Qxr/pQ1D7zNckaGdiVNbTMhPkkDsZ5ZjjUMDjmgq0eVNVUMTHMCuRoronpZa+FoB+4JUPqHkmyXD2CpaH5mhyjXdyXYmRQlUg9i9x51Gih/cxdDeW1c8tpdPK1oFASxf+pMn5I/jAbtklDk6vmbP3s96nZE1qRZHth6B6AkUxQrfux6lHa/PL9tsSuV7LJ8naqt/1dmDF0kaJ2Dt1GRKMyOJMrKCkKIzohD2ZTCwv/Gzo810mR78W9LDsDjg2pS+O3WcocLJ9rjg0b3rFOtOWFNtgT+IQtqGmH/mNVXW5bhIvcmSkJvu/2UL2qWfICFEoDVf0nEU9jJz+M0P3mdcJyQt1zonBt1Ulmt6C1oCPRSDzEJQ5N2BdzQiEdhnNfhY56VEri/4saTerhNwsehnPuLRZASDwGzQOXvnXhcVTXNvrdY9cn+9/wOF/bgzrfnSGTkG0G8e9MYF8br+tG0C9NOsfcC+MeNV93tEWg6E8LKsgzY2YdJGlwLGBX5/b8QozXTZmja12S6JcpCWfR0lYlE7yVdFM1o2KtCTBxckl9rN1S4vJdmUGmJHfSof+7rQmsfzX0/Bx5MfSkfaGlqipmCdsi8fiuTTJRLgWTai3mCn1M4P4VLZsKK+b14ukIhAb4qIcmcj/9PdgNo8pepZju7T0Jizn0gMkPTR9JiRRVFn1Ezfe+CJXp14YgA7eIFahIsJfQ1AGxskV04ynbAbAvOQRoiGFrnW/QLDUPy4r8OAe6i26LAE+6eiWgKEgj07r3Az67cSpJpj1Fh8CHFl0+Z0uol9fbKDT/Xj0x3rfJTt2YMhIn9jSMvWDzkcUW8yfvO2F3sBIBhF35Tg==","layer_level":1},{"id":"69a0015a-1bfd-4e24-b90d-0d8ef44097bd","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Background Correction","description":"background-correction","prompt":"Develop detailed content for the Background Correction sub-feature focused on removing illumination artifacts from microscopy images. Explain the tile-based interpolation algorithm used for background estimation and subtraction. Document the parameters controlling tile size, interpolation method, and correction mode. Include examples of how the correction service integrates with the main processing pipeline and handles different image formats. Address performance considerations such as memory usage during tile processing and optimization for large images. Provide troubleshooting guidance for common issues like over-correction, edge artifacts, and handling of non-uniform illumination patterns.","parent_id":"5d24c078-02c9-446b-a192-57339f8294d1","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/correction.py,pyama-core/src/pyama_core/processing/background/tile_interp.py","gmt_create":"2025-10-03T22:09:38.1076507+02:00","gmt_modified":"2025-10-03T22:31:51.7964465+02:00","raw_data":"WikiEncrypted:CIb9yfDztTOrbHx7PG4Sc/i7wE+B+Uq5qckNGgVKc9GcrCGk0G1kJKiX9ChZXeuNoVVs9kBYgNID0XtKtfRXhdAOZ2HXpiR8Dbl0wgWRlvLph950F9weNNeH8i5q7XUCzz090OlpZzw+Vwf63Sy+bz87EQf2ET3Jn4r3LmB6/AC5hMbadC0wmaQMYGD/B+Awk5Pf3wp5fAr3u3j0ZWaZGD3yED7nHBDe+x0eNhku/hHvTIL7WlYx15uYjKAkw7IFcvGBbT2zPPdJbOWWjqIw15fHITh9vZzH3BMRUBrCiNdBR7f6V3O8AY70XowP7MUdHIc+v01QYcf0dJ+X6Tp1VVvb4cLiIshyaY6fugIO40SS3+lPFDXRkbx2Iv3vC4spksJa5Iy7Qc+AW7FhT4ob54JEOmE5qDadtRBSX/5EwguVsOLq1Y5ElunROuciDKVHCUFDz6KERfiTkj3OuuN75pBf9KHExqJSoGIdVZWYxZmyIMMHUBE0VWxV3oHucmyffKNhl9a2WP971P4xylcpMZXs14rizQEqU4l2G/pgGkvmuvMLJGa66bRq5aFFeEo6xaarRRKnQJzZJiIIY5LoC1Vn8s0p/w2g/HENnxbPhJ95R8smmUkedZCgo0UUrMD6pED/COZQwlEVSftO/1pdcjdujr0C03stO0sKFN5E9XXSq/1lHHgGOijUAqjcPxiVM6tz8zpQ0UFmc/raME1r8WmPDlMbSxfEvzFWw2kkovoK13Qh3hwbUFssrZxcNQc3QIOmYY13gHMZYu5PG3qYZcE8MCF2dqzxw1I0TkCCW4vqVljaDZEe6Vd2meyA8eM3kpN0zGFEQwvtgj5jhjGvXtqtxzJzIRw2quuDv5v40sqvhHzGjISvT7xd25/AhwX1lc8FG7kJIKQNFCWOxFJF7gXm3BU/mD8lomATfsogv+6fo7f8wmqzaL12xFLjjiB0/4z5nyY/DE62V1avxUTNoYMzYegG5Q3y88hWdpfmkyjRdqyEvoGfgPeSGG4lq21hmQzc+z72bmpqP6q7SJ8+fkEdZa4YthH+Yya3pUGfMR2vUpWt59U9IZzGE7Y7PXWOA1On9oukjAYwDZqogHin4cPR1bI7IV3jXmZoKvDiAPL0vY23VKzv6cJGnOI6YAE9apm2URlwwcczAuA2uWrmERJxRNHyRgVVI4jt5i17BNdP4HnfhWnpd4/X8RDuz5j0cDprcJYEq9R66Pw6D1a0pybQaYJy+4q8Ao8UvzKB/cCgdZr8YhpsI1zW1BuR3thBYqaIcrUqzFSX58z+8HtrDqQd2Hrm+c+k+zeEcu8WI/VQ1gpN9lNz+zM/nOju7Lpp6v7cMsR2gB3U1XTvmPqgaEj9MypFo8WD308P0132xxhcvVjfU7PK5xVYR9OZs2/jUr7wKgT0yZFmKlAwaeuE/2avxdtW7bSOQc+l6LU3He4=","layer_level":2},{"id":"6e34e6de-e4f7-41d8-83eb-57cbdd38e33b","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Correction Service","description":"correction-service","prompt":"Develop detailed content for the Correction Service implementation. Explain how it performs background correction on microscopy images as part of the preprocessing pipeline. Document the execute method's image processing logic using tile-based interpolation from tile_interp.py. Describe how it integrates with the ProcessingContext to access input data paths and write corrected outputs. Include examples of configuration parameters such as tile size and interpolation method. Explain its invocation relationship within the pipeline and how it depends on prior data loading steps. Address common issues like memory usage with large images and provide optimization tips for performance tuning. Make content accessible to beginners while providing sufficient technical depth for experienced developers.","parent_id":"19f04139-24a5-4bdb-bd10-42130b293f6c","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/steps/correction.py,pyama-core/src/pyama_core/processing/workflow/services/base.py","gmt_create":"2025-10-03T22:09:44.0041671+02:00","gmt_modified":"2025-10-03T22:32:02.0950678+02:00","raw_data":"WikiEncrypted:0sFQQu7jcsrXCSn/fZ279gKtVrrKhMeP53Zd4cR2Gu8WIqjSIuy61AG2sqCPDdJSZmA/OVRdKJMeZwxRN6d0IW5+zGMaAg/7pupMQrc2Cs5Zc6m/+JlG5ON/tgOwcTKMasv/jyFp9pxzyaL21MUr5KTZoRb89ltpowV0vQINC5HCO6d8CGKZnjZojdkL9Idpcq7AeBYDDpcY/jxLOzdvlAfv2xSoL3tU3o2ODk+K5qxn6oReiTEvv1nu6i5rcmUJ4L3tf8brjcqRv0AltqLqguCaQdDNl6KM/zJIYR65phnYXIot6wWCK73XGVHHKkOfUGqv4cYNWepam7skxsr5JGsFQRvJfofa1es4/gkKouGsWh56xzs3ZQB+w/oYyXQMn6qh8rw1TwgbvtBtYw6iQswV27j2yEEYRLfKjeeiFO6xM1qqyd/g8icRxc6bQNby8fLOjSEW6/ctXtC3/ceORz0fhq/mI66BvKO2Y3E7f5PVR3KvO8SLgNvC2i4zOFwNuNE1kW+9ZWaj0BW9d5gi0RKq8MJB898xshCydSrKVXEyIDS/G4ZCmLW/E2OitGDTk8/+W5IWzPVdxoO8oa1HkgaGWxERtMFnnM94saExK6TGvbELS4dHo+4nhX6zJy1IkJHR5HIFMzRYp0/T6YivdNZ/QPv06VVlzjesCcDdy/CmS911G3U/n4VNj8FzPRgGxZvCDXUrr0AuuLfB+If4ZdxRfDo7CbD1rD3yVmb2TpULF8GBdFcCapXkQSb9+PrWwFPHIwLmTRwE3u5IBGI1O+b8woC2NhWIR0/EAL5czK1cbY2A6ZcsiTxmk2ym5/BMvQQPfzCfQwEDD6ezihM1HtCAgJ6LWM23dWir9Mrl34/C6jON/Rk5+jcx1Pv28rgGPh7UgSKAjfx2MaezuVM2vVBmI6eC8dzH0VlxntcEa5uOFSLM8PClWkwufEkrZcIHd0M/iovYwrPQp6obM4jJLxLYanjb46ZBlk/Y3kchmoZElZQlheyoviZBraVby4jaRGtGcPg67g9JkUSeRvgBC1YhBg/D5SggttbicGAnq/u8HnJfNHJyGX6hwT6B1ZmU/9P0MxVqiW91Buvd81Ng7f16MFYjrLhPpizytcth6Ufhzhh//Q7qwbRVxTnddYYxPLUoLeiao4R6Pd/hU4MfTkuGJ+/jDp/PtNCtSS6ZMj9UfuYxyMLJ+4BvQMfib8ZIqI6sZu6fQrblPorHVTaLavT9/TBsIy4l/7elS+x8OEYRpSbezy6K3WSnRTdfjLrGHeybnR8zHv8KPuHJQEufSRNgAwV35efzUEAiuZd6F+PVojArloVAfuNlXVtMTu90sUxBmAHUdXTzTWJKRHcqBbmCStdvMUC3j6cXDiwbGfJIwClvPe+43ru/EJN8raTnsJgFGMLCtAYUM0PJVygOFza9Sy6QlfNYaSx2H8x5c+3W53ww1C/crVP9AXx+Izxx/NXmH+8hV6IsYUmK61J8/JdESJpjp9TdhDDi14+3ftLcp0xyEZXGzMLvGxquHzWWLdvR720+KZwCWs373o/WrC/YS0kfIU+O8QTX+t4Y0To=","layer_level":2},{"id":"f9234b44-c58a-4d8a-95a6-32aee0a4e67a","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Trivial Model API","description":"analysis-api-trivial-model","prompt":"Create API documentation for the TrivialModel in pyama-core. Detail the mathematical formulation of the trivial model as a constant baseline fit, its parameters (none or optional offset), and its use case for control datasets with no dynamic behavior. Document the class interface, including initialization, fit method signature, and return structure (fitted parameters, residuals, goodness-of-fit metrics). Provide a code example showing instantiation and fitting of the model to sample data. Explain integration with the model factory system and how results are serialized to YAML/CSV. Address performance characteristics and when this model should be preferred over more complex alternatives.","parent_id":"1176009e-a603-409a-8ed0-f6b6a262e450","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/trivial.py","gmt_create":"2025-10-03T22:09:59.8403349+02:00","gmt_modified":"2025-10-03T22:32:18.0746038+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQPFT9VrFpZFPYRvASOt14F9gbnL8EVYLwAx7dHp85YT+lJ8Ikh9qBE8D9pmyYha3lAKOPoP/rUTmvHVZ3Di/Iqc96g4kyV3VSQo8hpld7y+6qnDryqVfKBIfZknwDEnNu/3sFoSy7+givYFux87vRGMj0CNw4BcQkzcqKxl6p9CuLDxpT0g+VvgsnEkFjXoJwgdSheAZrh0YP6eTSsLMOirpHD5NmWTG5hkbhJ/q8yJG72tvvW/rNo53Asu7x0BwiJjFlo9AHoTGmj+XL3TyJCvqKJw+fY7TJf7t/D/SY5FEKoqT0jx8GCNgBEm3Anh5bLrWvJjrT7O/Che3f2sH18mEXdSf9GpsruTvdGHWLhK9gjX0fVxXoqU0tLtqDXe7SXTkxHvCpokWb0OfuZt8S3CrPQuW0TdnMuzAg6kJnOsVPLGlvl6/dlbgkncrmMNfAWnME9Fp1T40p1WsmhET2LfC8DioNUSzBMn7dkEG9Rc731Ly2r/Bm/WrsBipfdPGFw1FYUEUY8NIiuZ2dIUiraxq0nT2CC+iirTWeG1beSnukzQebOY0+3vkcX7APSu1BILCcWXuZJXqarVxQCC7C/k2IOw7p12eLUP+JkJHvu00zleJSGM9s8jtKCmZRqFpra54v2iwcmJSjpBcUuEQH+dWwnCqmeQy3lxSozmd8UN6KwimaE/BtBZoGBta6pMr38j/757ir9fX2ImdFv0nWUVJdAcoWafLkBxif9ml+QvosgcQoGqWbv52Yf8JOWBBjYPWtT58bFGP3djdpLsJlIl5yBXYPHqD0fIxeYgS6S3FpgQu6O2QxYWLN5XiPjO4jEixUlj5+RHtpj+wgaeuzM6UDQ++w01z1/ynZalgFOkHJA7cKpInO6lXssstdOOki+E1w0UAErz27N3eJm7igAHUS8L+G0gpEfOIeTzA8m0m3r2+sCE2mXcBd3EBAICDlTdvR++bXfA3HhuydUWPXIIcwlirLOAf6Qq5ldqmZv5k+ArOgvoQVi6vTpAQQ9k6S07ighFkX7pM6motOuyqZEs5qyZkPG7KqoVdtdUEbSoIjPXXIMDv3rOBUyp0cnJ99YYhhAOrGXEeV6canicPlNdRgOJPaxu/IdTgLXDANNjaseART8ILjhSneU5fNRogkZrlDf5sKbhL9GiHrSnCvCWihRdOEbQ+//Oo29507V9fY5O6wp66RQ/y3tGwuXeCIWMTKHUCi7BxfkMbiA2CdRQNXny6mtGr62ghdr59J95/F3S4RAQr4sLwG/PdxKVtQrVMz50YM16PtQd7KPyMOk4=","layer_level":2},{"id":"9b96ff5a-acda-4222-bff8-90d6044c8d7f","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Workflow Orchestration","description":"api-reference-processing-workflow","prompt":"Create API documentation for the core workflow orchestration system in pyama-core. Detail the Pipeline class interface, including its initialization, configuration via ProcessingContext, and execution through run_complete_workflow. Document the end-to-end data flow from raw input to processed outputs, including intermediate file handling and error propagation. Explain the role of ResultsPathsPerFOV in managing per-FOV artifacts. Provide code examples showing how to instantiate and configure the pipeline programmatically, handle success and failure states, and integrate with external monitoring systems. Address concurrency models, resource cleanup, and performance implications of batch size and worker count settings.","parent_id":"63147ce0-0997-492a-97cf-4a038ad7300d","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/pipeline.py,pyama-core/src/pyama_core/processing/workflow/services/__init__.py,pyama-core/src/pyama_core/processing/workflow/services/types.py","gmt_create":"2025-10-03T22:10:00.3756155+02:00","gmt_modified":"2025-10-03T22:33:25.3291649+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0FX6PpUJ/WvHCUWZC/NaYNc1RO1QnsxznOXpG7ERNk9gFdMfC/HlfzeJ0sn1xcIRGy2yXHfFkGipVMmtxNgvcP8ozpT5QMtp0ZgsnoDgpHvB1zhDjGlTfThKNtF3WI/iFSBgYmyVaEv9wJirdSCBNECiA6Of+5Epuz+5rCcuUh+TDOaR1vutcoLAST06k0EFp8jr76xRMOIPDxc/r9163gz5QbmdGeOPagJkhJGj5DzSq4JsYzUYRT5hbq791xbIKftob/yjOygRvl8FjyRAub5nb9UuhlZ5LeINdasnoPT3kBEX3bRSETzXC1e6NiiLKF5FZKPnAqCqq7AlVirz/Ek94T4XF6eO6V4c2TUZH9MAEufik4qKntycy6OHd5837W+AoViKi4xXUKnEGNoOO5yjmogVQK+ZKFQLmTmVhx8xYSu2GH+s0mo7D3xcFl4BXnPZjLvVkKNsK063HzKwQh+Cb+qvZJ+94k/PRIgTUNCSOKDpn74hjoWUK5dXWtaBJ1kOBoeh8TZh4mt0J1TtXzG4H8rPMdZVx2SN+SfNBprf73Z9oCu8lZM8yIdTM+k3N0hgJDHY7P8VZ+6cUh11d+9gK6FZWhVGf7Qu36cgr7oS+tHhvs15XQfUaRHK4Ffis5XWxgTpYVhjEVDZTOq+A/+z0on7XciatEPB+X80/e8EjrzHOH+caQE4dERcFWZI/k6NVQWCh+os7qlDTGx6XROc9lXJMdnwFP0UmsVmP45ZDHZdTeIbjO0IQ0G05hxlxabiPW4bEKSqcONGw/Ibty5RUjLSMwORrR9VyalmKhp5GyUW4paHygIxMFkaUoVZPOxA6wYYg9yv/hCUBTbqqHMQT3c+Wj+Jb14CZhrqKkL1G+V3h3oob7odx+xgUWu8oSiKNVh1PUSlFPvoLo12UIvVcWJXqdhQxHUbRu0BdJesUU6j5xs+beatEcpidzRhuJNmLB0B4u4izFdVDFRDo44fI7XOXfQPD+9MqgY+HjiTvYtE0sa7hUedszJXURlUI7b92yDm7R1Qcm8eguzXuIvUVHLL4ny6c9+U7/v7UYrLRQvleWMXXnDK1WmJItqvGqAfeMQuxa6gwWzhZkd4mwLNlp7joq58Ett4gUD+mE8CJgPz9raKhREmzaCJJFxfjqXbn23sGcLoftHCJfMxI3jBF7ILKacBsca5W0CboK9Q3PBeFjPrHkJSiQ87y+SWaUBNbQ5ENu3vM81IKs8oLZukiOqFc8e0ZT99PIKvbJwn/0+1K/cru7pLxTT1WEPMXJlAYiWkd69tEL0u/hsAfEfU0mXl0q6njuKBJIXJn9F3vt1MP41oPBSsxZ1QX8gU/Djnv0ldHP3hBLCelkjhjrZiYPmNdR6K7lSyKkvoEryMoUgVomyzv0ZaH+SZi5FwKorc+L18mRdRamPivdIjWXKski8/FlbxrOqNy1hRZ54mfJ83YMlIXAj1S8XxRYbB+si/i8cSAWSfMBgVo+TVBl1tCFcLBVEMD/zhoWWivkJfPFD3/Pe4pBuef0fpc8B798arw/ESPWj2U/jSoYIHE8=","layer_level":2},{"id":"01710c97-6a97-4fda-9e40-76be2969c7b2","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Microscopy Data I/O","description":"io-microscopy-data","prompt":"Create API documentation for the microscopy data input system in pyama-core. Detail the MicroscopyReader class interface and its implementation for ND2 (Nikon) and other bioimaging formats via the bioio library. Document the metadata extraction process, including stage positions, channel configurations, time series information, and objective settings. Explain the channel detection logic for phase contrast and fluorescence channels based on channel names and acquisition parameters. Include usage examples showing how to load multi-dimensional microscopy datasets, access specific fields of view (FOVs), and extract per-frame metadata. Address memory efficiency strategies such as lazy loading and chunked reading for large datasets. Provide code snippets demonstrating integration with external image processing pipelines and custom format extensions through the existing abstraction layer.","parent_id":"dfbca4d9-cc99-44b1-aa90-0d441840161a","progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/io/microscopy.py,pyama-core/src/pyama_core/io/nikon.py","gmt_create":"2025-10-03T22:10:03.1918191+02:00","gmt_modified":"2025-10-03T22:33:29.6368342+02:00","raw_data":"WikiEncrypted:Q3UttygYTgCMkcF7STD3LT9C8HWYbpurUwPPnnAUXBQ1dpcd+md58kkAtqoZo1QOvb6Kny3RBab/v3oqFMXVogB45NX7X6X2k6QOzL1wTnIr5B5RYNJUCjdA4JEsHC8QPJgnQxrLwGQbkl7yCK/bPFzae2iQqH4jbaaA5suyi0u2UuqcB8LUSSUdQ0RatCqTPctdaRWSLZd3gedrXLT4Z5+Lmc6NnqQB6z1chIh3Hq+JL/M2JONcYwYUV5QNo1gSnqOcwgPnSxvYDAPYei9Skqq/qWwopYOmgYk7htJrIZuubv0m7AccYRwgrmYLVKLQz8h3G+KJG0FjfGTJsdJcazpim+A7PU4Xg0C+cGb3mSsaVVaQhAFlMv3K6c8ql49Xj4s+MaXIgI/IsqeMXEXH6AWhxEUNcbldc69kIH61VXPePEB57fQWpdLAttIQiBu5dPlQsgXKKY9EXGzIl+ZTnGEerXuzur48kwxLJrw3iIM0+AzyPtEDFxydN4ssjL9A8oE2qILD1VZfYE4qAHtswGDg2JPocS2o/j+teV057EVSUxgUBhW38a7uyHA4lq/Cghc15oSwBI8Y6eK18V2AAJIwrQMY+aH3w/EBlmbFC96qhuSXJBUlOFdqbPw+kNOU0nOHZvfS9zCSa7aMWwGBKwi68Ea8kr7pW4dJqRjxE1d6eT9sQnMm4L49QnpCFuSSKYSxsKSskeO6sOh36zzOiEwPAQ1QYGFknFstObDj4UeSnSKix2vELbA+8JikIKaOI/RMSA+dy8l3q46Ek4VkS0AMzXaMpk7RXR+Jzh/bAt1QwifgGPKX9ZsVe3ZLu3MD8NnAUZHkQ0klgW6qNxisfeLWJJ78/ux3ozzenive/blRG0DBg0p8CDGc9OcYLgIyg0Di2Rb+B00p/5m1MD30XTptidFi2+zlKwO8lN/5mr69gUmqUls2ihCfSjezS3anRjz/oXXosZ1fv7KbXrGKVdWWf1eL+Pc1VZX1+5uyLhECPQYK7nkXvyc6KYhX7kW00gGrNYSDxwyF0cL+/5pJA89V7AXR5Pq1XK0Qugu7jLrlG8BtlkFugNGw6Mb7TlLm/EPa4uVsWywCUjRscWVu1xmp8GZpV9E0fvjZGxtQZnfiHWsnTEOMJ4K7+eG0HUJMi6J0xhjxx9kVXhoHd5QPpZxxZvV4R5y1mauCQlPwgjcS5gvlcuOot6xgdnN+QNsmGEgovEBJMYdAl60fvkjp2wjX0srg2nBW3q5i0EBxi8wS7K0W3DZ+qW176P9UHOEII2vzo8jIPQZ8v2F3OtEaO+1N4I+M//mS9AqK1q9QoBC0a4E8UCZ+Vi4b7YT+QQ7qghjHV4xEWx4ijgX4nAPBy1D0A6KIO9C6khrCfBdsWFwTQmPTTLVazga6lMhrSTP3Ui8TMgSvekFP3S7eikNOzmey26IeBSPYrS6R6gA7NuqsDXi/sgXGxNrqxD7z/8NxkxZzexCZIZD3yzXjllKEMyD9y16wVA+AnvSlpE6eYMwmzmKn7Si8xAMPHT4ONUyF6t7zAMCUkMgk5KS5gQfDoMo9a1FnZHkqQD09rsFVRdBiOQ7ShDS5Q0tjY3dCzUd0teWUK6qFFQGfnAHFYC90r1584EWgS+D+8OcMNiIXPXI=","layer_level":2},{"id":"20c9e0de-be63-4ea7-969a-774669aa760c","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Installation and Setup","description":"installation-setup","prompt":"Develop detailed content for the Installation and Setup section. Provide step-by-step instructions for installing pyama using pip or poetry, covering all three components: pyama-core, pyama-qt, and pyama-qt-slim. Include platform-specific considerations for Windows, macOS, and Linux. Document Python version requirements (3.9+) and critical dependencies (PySide6, bioio, numpy, scipy). Explain workspace setup including environment variables and directory structure. Provide troubleshooting guidance for common installation issues such as missing DLLs, Qt backend conflicts, and bioio plugin errors. Include examples of virtual environment creation and dependency resolution. Document the differences between full and slim Qt application installations. Address configuration file initialization and default paths. Make content accessible to beginners while providing advanced options for experienced users.","order":1,"progress_status":"completed","dependent_files":"pyama-core/pyproject.toml,pyama-qt/pyproject.toml,pyama-qt-slim/pyproject.toml","gmt_create":"2025-10-03T22:07:56.1163238+02:00","gmt_modified":"2025-10-03T22:11:09.4538684+02:00","raw_data":"WikiEncrypted:6nDTd1wU0hYJuRoAJhne4b5ashHc1omfgy81/++xSBe2w9rUrWuXSbrEHiZ6Cy0q5An6XvzHHLEqEmHIyn2epq5KEULOgH2CqfXy5wyGH0EaGBHq+kArcgKgWzuJNO3RnObHuah6CFmwcte9DlWYKKwKaueguMIY+ZrubK9sArWNkQi1pD3OE+du9zdkgsbTuw9mO0rEcQnPK4OLe12BOwXqaIPmxOLnKFiytzo6HREuMk/E8ytOyx2AV4z2tD2Yx+e6KBL503MzYfo2Ea1eEFQhIGfI4o3LRQGwfQXnBiuMlqUs9PZCzyurzwCiVxUmjXzN2LfCuiCERIDqGZ8xmybpaDRl8cI78BYOSfaZOiGDhAOEB3Os0mory/N4Eu1uYlIwSkDUt2MIIpfI92M5OwnMN7pMfiE9vzWphbc9msz2nuz0Dy8MED31XfZ4ciPiMaiEh2pnC3e7qDlyGBr+C6th+Wsw19H0nhjvbTHzrRVsOhJyz0e9sj6S3c9zKaDp0GqWCZaAtl4laH3RojvcivjDeSKniN7kqJMJsVnkp4dM8RgoWcb++iTTusDH+e5kYJzQd+i7NZl/ftRFkqY/ewfhwy8l5ugQLgCmpj5XWPkmDygToJqrY2ebgu+qHWoJJPVmrHvQRmU8PSwB315NtooJjx/MaMJ3ZpL3yAs0LZUYIkPFbCCdVC+TjUA52tN/Woz2+F6JXMlqaePVBxtyKoN0n32GvXuLkdZtvL6UX1RAv4azRq8yDsFx1Q9aLuOJIDXjSuHYOu8BhQzKELF/r20xI97FI37htgZ0MvuYmo54FtKLjlZh3rqGpG27/Yk9PK8yEWrDjkjCxgR+tPHdlbAJ65Z+GDNNytJKvqrI9eeisV4Z8pby8H5XFXTmg1sBqIh27sGJY8S7q4df4QTGV506ZKzu3F7oeCc8wZfc4LSD9Mm2uIHNDvyR/KL1Xw38KknFHepiG1PkhoRSAj14sN8HH5/cstOb5gWr48bsO5ZOwsZyGMSux8/zjjKe6ewJxNKqXbGSktRS8aMCeQ3Mn6pa0oGeuk7YIhOIRHZf+YVtoi2stLUUadIukJea80ztA0AgBsA54F9V2S0pnbqMUvG/ZOUfRlXZzit//zx9fsF9mVZ4Ri9z8toZKeqrOwakA88sA6zUS3Qx7jnzl5+5Tld806zUArUrHvP/Y4/XX8HGxkBs2YPjYEvnM2eod170Sy8/l9W2GEWgYqYsrNzTLcXxt90SDQ0wB2Aha2LYfTq8B/gihM6vdkBnCm5N9lzFQ6TUNyhftbcKqcyOPQDIa8PdbPQ2H2/ysMLlkxQFpEP3F1B25s7ey/xtcGov7TpZwy3JXRKuapWw9c9MzFf225jvGBvwwS2WeL6Drkyv9CfN9exappoBiqh2UgpsosaMRJdFhzEgUmnI70zEheLEHaO37qdgd6Cyza3+9ccHUxAuPQ4xEYSpREC9S8IhgnV8Sn9tW9rO/YUf6kD7J+nZyhFL1vc0QPzHDsv05mi8PicFRlZyR1LCpBT8/Wehfj6FMJbfmMcp7ZgOHbXjfiUmGnI+VcLxeOMgh4nwkMYsnR2av897tc1PMj0N8obepJeWNRn7Kw71VyaApTQucG3IpLN2ZDJ80N3/Udt0u2E3TCxXvThMMEwEM5tbIoiRwvDRWGw7U0+EDwe2SrR3EptpPg=="},{"id":"b9f6face-df3b-43b8-a135-f9cfc287f9f9","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Workflow Configuration","description":"workflow-configuration","prompt":"Develop detailed content for the Workflow Configuration sub-feature focused on setting up processing parameters before execution. Explain the configuration of Fields of View (FOV) ranges, channel mapping (phase contrast vs. fluorescence), batch size, and worker count. Document the ProcessingContext model that holds all configuration state. Describe how users interact with the UI to tune parameters and validate settings. Include examples of typical configurations for different experimental setups. Address validation logic and error handling for invalid parameter combinations. Provide guidance on selecting optimal values for performance and accuracy based on dataset size and hardware capabilities.","parent_id":"e51c01ad-283a-4d22-b505-d0a31233178b","order":1,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/processing/page.py,pyama-qt/src/pyama_qt/processing/controller.py,pyama-core/src/pyama_core/processing/workflow/services/types.py","gmt_create":"2025-10-03T22:08:57.120969+02:00","gmt_modified":"2025-10-03T22:23:16.2866314+02:00","raw_data":"WikiEncrypted:5TfoOZUXi2pU1NStYas3S2kji1kapmT/yYz1BWSLycb4V2fCCtHet0zprk5jJyU30OoIJ4TiYwv7aBMawcEeDkIakL+Hy1Y5zferUr0/+GQjFthQgAS+Ht/eH54QrGRNwexwuHwOhilnRw8LUrchxlYo9Wp44BMl4k32DKvOWLf5qwv0prbMgjZMosoz93VF0YVu3kC0iXfrNj3DK3rqS/LbQwyZCHMw9y3J5ysLXJnNICRsvpl+rNf3Y9oO48OS6Tyu5so+cuCDvWZ7O53eEoz/xTd3oHsTo3lcxsCEUwXeYR1uO+vYUiBZU+OA5ScCltVhzJOPMAnwJ9j2sjuAVW6QqWi5Q21fD8CtLFS5bquGaTcuyio4xjOoajkro26EjNW3sje3d9k8D9AuZi8MjEJEynkK9+GPL2ZHRY0t1GJm7POw7niVfNKRk46SdiMxQ7moUfHmjGsNCyEMiJJm8Ibe7/MWoKuOh2rAggzVF7X9NmrXtnqDENDgFIe3soEr5UN9A34PjAYQKeXWNGDFPLUqWgKsJ2lixrs7hxm2rSFCM+yLsA+r9BkVaWW+7Ml4CXA5iKwr7f23s1ywT/th0U9rOHHBXQvbXD121JqEkHn37IBl5dnsM/SeHHZoMMc79SWU8XwiwaTMeiDEGRgpD+zbfUEPc9cHrit4iyu1Ul5GGu8f/Ngftq31p0hCY1IA1i17SCnJb8KppGzHBwRQFdEUJfn/sKfJRvu2DNh41EOd5TF1DRyUALjaI+/3O2v/SxIBltctB9UnwoC8clngSwvo1wxouCumtg7r2717znX4UkVYQPfYtoiWhlbGjNqeBdpdoM6CsCHva7ieJxfk38V4IGCI7aV+w334TwE2uq8TqXyw7p5dVgDs+FRxMLlVDuOrUeNXlLfUTHTPkenajsIQvGShKaqIxBw7gY0ORC0neWhBZLUB3UxNnegWWTa+C5Hu0rEauW+HDB/YN/aaCyxPt5NQqlLj06pcIYpVdZyuBIUXRupvzjqHTe4feJ8KbNNklq96+3IZ1DJzemwZRh5mi0YmVyHwAUPJc5p4L/4OJ5o7kCJ2LMfwp5mNmVT55uYz5C2Kv78hxuz+SQtTWDRwSvkpEPeCLzCDrgL93YuyyX4Um0AR5eyuY+cB/zIRl2fm13fHSYpvZE9D4fbp5Sn1AVHe4dkWqRQkyinaFZCG8zP+vPwHD15SWbnqWaS53MPJdyEhokL8IWc0oDYx429Jta6+FvBs+RGpOywrnq6s2vcjR7ud7eB3IId8UtLFs3j31AXcxGKd70dz9SXPeI3luyZZqk/CgNulZgivwB9fdjzuYjflMQlwxvnkaugRNjV0KlKOcLli41F0PJGGNst+EGaVEnSTcHEMyTxlESG2GE9fSkvzcDlbg7Wnvg6+74P7Bs0egKn8L+cMbJwqf1Bw08alHtOYUmqHS/OvcWokQeMYOULcvZptEEZHVuuSA1e1P6eEC26Iq34pRxXLyQ==","layer_level":1},{"id":"97160f14-68b3-4a00-bd6f-ff852ef69834","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Image Viewing","description":"image-viewing","prompt":"Develop detailed content for the Image Viewing sub-feature focused on interactive display of multi-channel, time-series microscopy images. Explain how the image panel renders raw data alongside segmentation masks and tracking overlays using matplotlib integration via mpl_canvas. Document the time-series playback controls, channel visibility toggles, and contrast adjustment tools. Describe the zoom, pan, and navigation gestures supported in the viewer. Cover the synchronization between frame index and trace visualization. Include examples of comparing phase contrast and fluorescence channels across time points. Address performance considerations for large Z-stack or high-frame-rate datasets, including downsampling strategies and memory caching. Explain how users can export annotated images for presentations or publications.","parent_id":"88a939bf-eb4a-4be8-9c88-a3d1ca9f0754","order":1,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/visualization/panels/image_panel.py,pyama-qt/src/pyama_qt/components/mpl_canvas.py,pyama-qt/src/pyama_qt/visualization/models.py","gmt_create":"2025-10-03T22:08:57.3232768+02:00","gmt_modified":"2025-10-03T22:23:32.478523+02:00","raw_data":"WikiEncrypted:vw8SwXDMWAcq3MVrbhINPHMkt6GzatrnmHwjb0kS0RU3G28znM3Yn6/H/RmT7K2hggL39i/AdU21WgOJyKTL3vYMYmwOoQ+kEI+Vu8nbSQwn98OEr7Gn3muJ2Y+GYsHyVSfwa6qYFE9G8egV3q5al9hjUgTD7ClGIyxEREIGCr/7WWWD1dgd3BmeTJxc+GUFI3SU06qjeqA/86YpYACCOBpJ9JJJQb+xuT+iUkiz7z//BxlhGc52Vaiqzh0gb+S+gIlG3VsfclL69yqb4jQXi+Gfu7rAZ5pOi8UNrRQzxT3JIh4vJ1WSjBFlEORpjZ8yYd0xPvKRXybzTPkRJ5yNhgaQjKwfYqV9Je8WOE7GA86Q+NcwtsgVGZE5sO2Cpyr+Ox6ZeNDmNDrmYikiM/fFLNiarfeSv1H7w/kAE9t/iTTbcAk6PRsoVxK27Q8QOR/szreaFwjU6qmOAxyDNORvGv3N52LlQqX12ZmeZ2FQXma3OZYuwMD4J1gNieVfFlRxO1vgENtjXixoG6yol0gSST7MFOXaNKZ6mRdPNAnFxMEMjfdIdoA0b24U1EvpPMmBvKWUVRAtRCKXGKtfF/To3zWmiPvtTyHBQZcbzlm+xayaJJdh9tosyysj0XMluCJYf7/bIewftW19Fh568GKBgU7UY+F8CM5zRuGiR4+GliBllFlw2GFx/+fiEME+wrmU0uSal7B9yGidMaodvg6UnGIoxzd0fkh0EketQY2Mk3WA2SpzLosd51knac0musoSFsP9HQmyGN7CW9oXu/jXSJ9ZGLXb+4BuXPJ4pbgVJw8MCdOGIBBXCfshPHQe/zEAwsl4sOzsBRvqdT4VZVLU1Bt9NkbUDSHdtNwnBVoOBWp0tIZ81gTm3TUVVBFeSmgMiDeAeeGrNtw55K1APHx2dVoPxIj0AJoZaA7rLbRL/6JnpzgwQNyWwZt5BLXo+TizFOXelLgAiA2IufiAFV8rTzFgMP8AoUbNo4eyMoE8FQKvxEtCEhCkAS4WEcV0Mwm9eCUdaJRrBWb0Gqhz4vqyl6V8VnjHpVBUfwHK/Mwm4Ws9kilNjlRNPd1H71SdM0bZ89moxNGqrQVmklgTx27sediDXOO34iAlWknsTk112hSmGEjH8rmWPwSMsGWmBplxMNITG0qTwFa09eOCNnzMJ/lB+ldauetkuBvBIMAAsXwlHinxlo1VyKOZV4ne5Q4tcfaURBl9wjWQKXTc5Brzvhf+rClMl8zqo9YSL1SiiHHmtESud0nCuwccwYdswa8bFQj2GH7wni/ggepzK5Qyq7La2qHwRlhyxPoNXNHrAx9Kl3Rub4DUuu+nH8m3gAXYBN4vEL1PogNuCnIuZh/0qhQxTxgAx5NE1VHP/5rNnK8baaWCW+iuxwDHb/9YtThqu3b7u2zheB+yzizUJul796LJ3LnI3+JEIlQwXXYALvUhwNXjyDKXsttEmVILfX4gG6xj8pWc+O7p6o3HBOBYcj5q2CB/LCpYkteP7SzuC1BqZzavexr/qBxdCs0s9UlIFZqtBucM3yPrCyuClYGRVrvL7ZSstkgGynHNf8i2u8gXvVz3gXoh6VJLoIzkSF8m2M+K8DlvnxGeyuxmdaNnJA==","layer_level":1},{"id":"ccdad9e2-7e33-4520-ad6a-bdc40fd027f5","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Model Selection","description":"analysis-model-selection","prompt":"Develop detailed content for the model selection sub-feature of the Analysis Module. Thoroughly explain how users can choose between different biological models (Trivial, Maturation, Maturation-Blocked) through the UI and how this selection is propagated to the core fitting engine. Document the plugin-like architecture of the models module and how new models can be added. Include concrete examples from the codebase showing model registration and instantiation patterns. Explain the domain logic behind each model and their biological relevance. Address common issues such as model misconfiguration and invalid parameter ranges. Provide guidance on selecting the appropriate model based on experimental conditions. Make content accessible to beginners while providing sufficient technical depth for experienced developers.","parent_id":"971318b3-b951-4b95-914e-55ee91bb0a8b","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/__init__.py,pyama-qt/src/pyama_qt/analysis/panels/fitting_panel.py,pyama-qt/src/pyama_qt/analysis/models.py","gmt_create":"2025-10-03T22:09:01.8128292+02:00","gmt_modified":"2025-10-03T22:24:28.7344209+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQLtxR35UzK8TS9M4rLd+5d2LbC2LXfKgcITzs6lyiK4xWKO8IvycpD3VXsHr390Dh2wl2zfxQJ/T9rmPJw1VTFwTTVlk2LFeICaXHyXd17G+zbVvBtLPqUhNEoZw7fSOmpJuWg/8ZEPUz4nONOxQQ3RRO8oM7hgkmFp7/n4AJlKgJX0rmxKpJflYFhF+Xbzv1Ln5KQ2RS8FLJoeLlRUKzYqiRhIhT2auXJxiMPC+fG15XPXk8rZay3brgP47On88n8zaY5hfC4MMbXNVZQkrzgkc/oPnZ1Yu+iSXjEXmgMa4WEZ9/N7h3c6SJOJnUHBciw4bDj6rd4ypeTX20zi1qmkaNJZdU0ooWVyD6azcV4A324he+n1uAuq0bPLu3CTYy+iADnrWLWxGOWDeci43g0jy4NJ4NFSWK4YjPO3axgzhsAjhJdW/Mklz3rKUrMepAGvs1ebjdaH//kgINn6BQwm16fVG9l56KWNNBGHCY1jxdJsd0uQk+/d1pjAiDcmx77rcUKkZC0wi5/yI6fbnRvM8KCZH5DMi61ZpT8Kcmjzy8M2ekH35AWwUuPao6lK2tZKsmi5J3U+LoIAIxvtpsYGASUTtJH/U0A2FCTxVdH1A1qSyPTvPTRD3mkk3LNkeVJ99iMtgGmPNmr9BHIjqAUGQ0mhOKbH76r8ym9vruVnxciUiu7VJrnQyxMwUTP0UorcoOIo7TPRREJwqPObzNgzwSUT8JOMuSMIe4qRqU8VrsPldF9JW0q459jJRo/aC/tmDK/OgHCNe104qSDMw7ZBWckpvkaMBe/I67QULspcGABKSy93JGOkQxocB7wmPTDSY6VCvUSlicArZ2iZNgnG0eerL2q+ILMcV4zLW43czSXf4OPqad4YYiE2dWTq/yz5Ge6D0qiK/iOEuWwzOr0QnBzMxQlA8afqsiGPzucBsAnZ0MlxensiozXKcs6hpZw4pCJAV9i+bEzMaY3rrZ9+/4raLHvfrpUjSLF7eZqAdDd2IAZCpqBq3q1wWFkujooZUZimQwXSY2uEsGvdpMIdYzPIois2RMM+YC5hCNvjKah1qfjJiT+jbo+AeefYWm5CKjpWaWPOgqKwZfOT8EPpHuUxen9NW+eAwIDHpspJpEBfUnPb1CL3/bBLV4Hj6sRIoQJFjj9OIEX5fLtEAa80gzxDENl7n79hqS65CSMA7Fr1oZYwhKrUK83PlF5bj763BZFKJJpYQK9o5oMnDk/Ts9UUR2S2xusexoxIcT+5SbAOYugLv7zFQGZ4eujvviXV39Ovmt94jQcZ/zYZWAn0/lwTxYmtx+D8HLKR0hhCaKECk0XPKek40aVTD691Fw6YjXrvO/4A/QDnD5KXlWZLmxnsPiH5qsXPtf78q8lEDMQ+MONQToQmgTyWzo2o1tf4x+MqZAODa40wESJjLwkvq2ee/kqW9LvIpcSLlik1WlDcMJ0AsSrBCB3e0xS+ALfHxArp8I8czlu/243TY8h7STdSwRPgoSbwH0bntaMFzozsUmbeKiICfv8MI7kmjbmZuaOj8FWoGSA4zywO3jzECrWU17oxF5DzW37Zq6eqwK+GsM5ccRja1NkNzNTIPPXpeEfigghEorRWUf/6/7JQ=","layer_level":1},{"id":"19f04139-24a5-4bdb-bd10-42130b293f6c","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Processing Services","description":"processing-services","prompt":"Create architectural documentation for the processing services framework. Describe the base Service class and its role in defining a consistent interface for all processing steps. Detail the types module that defines shared data models like ProcessingContext and ResultsPathsPerFOV. Explain how services are instantiated and configured through dependency injection. Document the lifecycle methods (setup, execute, teardown) and their responsibilities. Illustrate with examples how services maintain loose coupling while sharing context through the ProcessingContext object. Address the extensibility model that allows new services to be added without modifying the core pipeline. Include guidance on implementing custom services and integrating them with the existing workflow.","parent_id":"d84c9a8e-53c1-4dbd-abc0-9fd2f8d4e5e5","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/base.py,pyama-core/src/pyama_core/processing/workflow/services/types.py","gmt_create":"2025-10-03T22:09:09.3146138+02:00","gmt_modified":"2025-10-03T22:24:41.3074425+02:00","raw_data":"WikiEncrypted:6B00hcaq6PQt9xxRHliSTjohdQQpF0g7ApvSp6Sca0bjJLs/4O0AA+AXyxn6qyykdQvXpiZHbepvlCOxFh+VAHyDcRn2ULVtWMjq8lrU57R2bgPp1jcnFflhUUMBc5cvgWx/3QCr5KYYnTQthLEClLO7ebegwfiLDO4G65G6vRc7dlzHMYAsX0nOpzjOA99XQL95SpV5zvRsEdRIu627T+Cc6t6Q8R54GDgVl/vz1SyjQR4SL6Ov08H3nyo/irbmW1drKuKQ2Sk/wTjcCez5SG5ne4tq7jzOfMas8qmZVb8iZZBBwhPLeCSKhRMBefLG9gxE/SiDV8tFS8d/vP36/pOJyO4MdDzwAl7h4ZLC1jGv0aOITN5dtPEiX+6hLxHDqjtVgdXuVwHRnyZkh2A7rxqpQMLsS+qbYI3srnYVv2CWtv9NhgnKv6v7QM08fwY6aY6Y3EQGt6LWfLX9syCqHkwSyVCKE6uoaETtW4qAq1xjeHtk3QQVgnDuo0kGeOG03Xf6u5aiEkj6K8MCWCvd5VeAwgWyO1QKUfR4kjQqOj6hmGZO/IajizVc7L0ylUkZaRrMTKwjrsBYYmTdcQYEOMSMkrOG8s07SH1WvbMso9sUzrfdGWqEVaP1264tBD6Jfd0Kykqk/eBnwcYfM2m5N0ipEboRBQ7AC9oIW3tbOt+EJ2vc0+eUOreHMVJywZ0PpFlMHuqnnAuDf1eD9/K5q6r+jXkV1q1aPWXvfehFQTIKMW9JHWDMv9mr7P2EpZoCjaJ912xo+imZ7nruwJ/PPIN6AJSIG91XHvJFWa/mdpZ4JdagUlL9C629dIXDMnyD02lRztbHWptxilhmCyTI4og5nxEPHg0fabSJRFznu9hJbXgFZZIURvmJUQ7pdb7ghd+PE8oWslVWwZ8NvgtbUZGB0g71HWIITUP2YvQx2/0lTt/QhqkFxwjvJoRzxx26K/N+vnBM/c5fCruYeFr+2paUg10BvtGBuNNtgV7oIzsF3ww6GoBuronlVNMTHqpSCsfgJHaeKhxM+eTUbpSdneXTIRjQvHyni1vQAUu7C5gxf/Htdipk0LJNfeyFqaUFsY2C3ui9ioE5y+zijXUs31+wgHTILTntDUD0gZWTnY39Sro5MldwDy70WZ3Ux8cNmGkqwc5AaM432Ii/i9tSjRNZeoOogzTt/7MSm1jL7cNd9MyekmZSaYE82koHeSQ6u/A3dp0km/4frIao7rh7d/JMgUu2ZBGWO780lkByoDx43GbxU9X67FThhyUWmRUS0LpYusQ5HKtpBpAl0hU1B3OAXwYNmPsEfVGp37DDrWArwonGGaI/zyuFjnEmPZAwIe1RSYnXFF38EQEba6Yk5zkjf0ksVBM1O4iHr74ZRCJJPpZVBLAViSrVB7en9yzHFBev5AjDll8n3d2oz4KmEPb+Ug/+5Xc1T/cphC17LXhIgQ1PdG+qEM/cU0CXPX6b4dUpIWxyTZljecprhmWTbQ6ODuWCaMM99DOB4CVwkoPQECH1NQud5vZj/8IBl2OYXSbuVoAj3X3eqvVI18IinrvN+8J6pCkpbTngYt3H6/1Y2RY25oo8H/O2gNg3tWHoOrxiw45YuZhO5mxMxPRUoWdLjAtkZPSjIdA1ryjL5K9UMkYJCbA79tAQ441bv2/UpMU6If2JLafDkTjep7eb3LasuRMG+Yy3uNkxGsxgllBtjQnq6YO65wb5a3zRG01q","layer_level":1},{"id":"423095d9-64aa-4ef0-a6de-4192c54fac95","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Maturation Model","description":"maturation-model","prompt":"Develop detailed content for the Maturation Model, a sigmoidal growth model representing biological maturation processes. Explain its biological context in cellular development or protein expression where entities transition from immature to mature states over time. Document the mathematical formulation, likely a logistic or Hill-type equation, detailing parameters such as maximum response, half-maturation time, and slope factor, along with their biological interpretations. Describe implementation specifics including parameter bounds, initial guess strategies, and optimization routines used during fitting. Provide code examples showing how the model integrates with the core fitting engine and how it's exposed through the analysis UI. Illustrate typical fitting results and how to interpret parameter values in experimental contexts. Address common issues like convergence failure due to sparse data or poor initialization, and provide troubleshooting recommendations. Discuss performance considerations when fitting large datasets and link to parallel processing capabilities in the pipeline.","parent_id":"4ccba304-272c-40d3-a267-299f6b637bde","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/maturation.py","gmt_create":"2025-10-03T22:09:17.8600687+02:00","gmt_modified":"2025-10-03T22:25:05.1927712+02:00","raw_data":"WikiEncrypted:Mdw8Dmv1QMuXAIucCHIkX5yA5Li3QLeFH+vvhxfBP7djgxC0BeD1nDesN6qvc1mKAggoyNiD3r9uEqalui1siiOvHFdsWNjgpOQhEuQDFLkYtZYAP80Xv5XaMzuQFjV5v1sOPfOmZXOcdd3DQZbfcFCVW0trE7tmek8OnIJjCRM4LqSh6GkXmk9xiW+7QoBLlm5uj/3O/M1yhaEtuCkabVqOoOt6JmzJ5D0sZrQZ9554iv6waGo2QaY/lVJRfdN5Nc6wS3/u9wQHCvUWh8/mTilz76QV3H/8l7HeXTY/Z04UGX9MZDGZkjhPA0cSD0Uukn7AEy7+gdzxIlC9ho5RUtRbjGtEOndbfVmdti0+QELMw7uuVeF2+TNdAiprSJnLongqgC7vJur80/FLlfS/tFdE53Okxd2vKtzV2zxLrGwc8z3gUOW8d0FUz8Ibw3SICDl9VEnXsEg2i4YTARE6+sAyHwrohjWVFnE516FDhXJPEW8uobw53cs9lDDuo1rnJ2moRqFEEi6Jqk8dCE1pHGDb0WLjsc1rgm/YvHQe45pEa2snW0jUulSxuOX2l3wszWV3TkphIs1PCwLSB/l1IgD7SDRqPmQGc0TNUByvu4k7eOqlHPswlPW8e+LmMWR7iyJzfIbQ3+kjy+XcvrKNHowKrvKaGWeX2KRBe+rzzHH79PH+O1ydcu5vFQXkN966A+cLsdRoc1kYfTLM0dofNWTguOeq9GhGJQmptwXVaTcWB3z5Jou+xGtDYNqMKIe8AmCoazaNsxirt1SLxwVW3snIVCmGm5FhLxSSA/UpYxOGJKWgHm9EF+5+vAsd3buYi9BEjL1NIJXO398PGrv4KeqHLHNzNc+NyB9gWhMXcUJswhMzXg5kfY7/+F4+tHT01IKjs+h9xcguJjSASYas+mcvukrkEOEBSv7PHLvDAWqFsTevpgIbwOZUbYaA3OtyiTephQ29E8vo3N9Dg4JsVbCgK6oPwHkwU5iqGe6exd8NRntM3hObQZg45szj+C11stat8w2qeRO4ydPDqRARl9je2ghCedSFXWInQSeT/OxtjH+oUnNxrbursSbNHbCtSpDwkTb3ThAIg2utk/ZUBXhZPiHESoV4iptpT+mKsQZzoT6e1epuIrVj+df2dOElHSDAsx4SqTAmEbg5Gqjsvedy9g7jhEeAlX5VKxv7IleKiRNU78/GuJjsDNCdCPGueyi3KNynBAcBKoGYy21SrUosq25sDhNBkMCM5POcPoKxwTY5FVX8tRlllBmIMuyVD4JRQfOBUa2JuTqqjOZ03A8dmfeJ3q4xbLv0HMyqzHBjFhfym9Uzc9BR+bWgqlCeqA9rbnmb+lYjtmFBaeXhPprA7U9O0IA7f8y6lxSLYh4yIbeovo8BeFDGHsSSYCCPhnDYYE/2codbHhwJgEgNN5yBoyje+CZYS7rvbz0VAY2AJcpzF5zADdLUgO342Xttg7O4Nj1gi/v5wCZFFkaGLjaUyZVEUiZxgpLlr+zpU3HrqZ9mhb18TnRKgg1OK+MQUQds+2Vi0cFeLAO34sHHQFCYEm48r+lzVZ4CWJcyWyzqezoMyq/ucBBr/1jFpKAKNBf8v3JM37+n/RTKoPR1AkQ3QkykeZMF1mSpzEdCuAnPK7Fc0VZFoQmxA1jQgmCleBVK1i0AofIPdEh56+A5d3nmvM+Lt7Ip+eGuz0JcWvlVQL3d2tc5HnZ77vi9TVNZjXtR7LeyuiJuj1EeswO3YLsaROQhyoIWCRb0BY1NrSzcIPeiY0CrMH/EbBhilHnl2nJXHTEXj8K7wm86m7Mq0nl1heUrILCmf5jat3hNvxoGYGbEGCp/YJaM/t7DHU3P","layer_level":1},{"id":"7bdb35c7-5588-48c1-b99b-606cc1e82237","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Batch Operations","description":"batch-operations","prompt":"Develop detailed content for batch operations functionality. Explain how the run_complete_workflow function supports processing multiple fields of view (FOVs) or datasets in sequence with consistent parameters. Document the data flow from batch configuration in the UI through to iterative execution in the core pipeline. Include examples from pipeline.py showing loop structures and error handling during batch runs. Describe how results are aggregated and stored per FOV using ResultsPathsPerFOV and how failures in one batch item are isolated. Address usage patterns for high-throughput experiments, including memory management between batches and progress tracking. Provide guidance on optimizing batch size and worker allocation for different storage and memory configurations. Highlight integration points with CSV/YAML for batch parameter input and result export, enabling reproducible batch analyses.","parent_id":"0dd33875-1369-42e6-8e74-9b4136d237e8","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/pipeline.py","gmt_create":"2025-10-03T22:09:21.2775248+02:00","gmt_modified":"2025-10-03T22:26:07.8819873+02:00","raw_data":"WikiEncrypted:TIdOXnVG0Izs0oQg17x4Vl0HMvQd5Hog8al/M1/yrIptELYCGM0l+dxHkv7WvOPli8sjr2FOw6O3VOpSNSvOl5CJAcfABXSvUfEij4lOBFlQSQcUvA+9VsYL9Jc6XPh126nPEHrb/K+bcRFpwrHRdKLOxEq9/eGRKbYDQ0FILkNDEyJDJW6jwqgU5H48VoMDRaW9kEgaKs0ofztw3wtX25Jc5XMNBcxjoHgnL3bNpd6+vPhhPG658llFjWBIddWq0kbUK7cjdBweAW/kKYW8/VWHe8y00iwpEPKL3Fmjm343Lh35+9a0SXThdIqTcgs6/S+9gb2lzxzeS5XrriqrKGAfBG+83K2R48/oOxcmKgcig0saQtzgzslmus14yyxMZRWs4ZkfVegb6cpFoSn3r+/bmPHHapSMQODUVHJR7z+/rmovbIOc/cFrV/ys304fXNo/MVt508Qjusa+VhQZF1/U2V7JcU6DKc3g7MgRf4/NTf2e1gTMYAIKjylKV39RwhzcedUCx3oUHeUhAFWEFAFmbltvRQJY1NeEsStIN++8jG1JeVzFO13hnoCm1jeewUiMmaFM8TVdg1w1gozr4xnJCB8+DJI9fAhTIvfQzjjGYaxLZ+u6cDCU8/Cuj09L9L0hI8zxElU3X3E+WwZbb0iSiyplixhEX8zG0CPzmIC39wXUfyJPrB8GmsxrEAvuFgEwCrs00BfgBs2Enue0Yw06WM1d9L1iBVzNKX1W6qZndf102ARL8dkuROyKgcAl12yIHUXQtb+hpmYJBjExvB7r0robUg6oczS/3rkB4B/um8e4PhCYnPyleA/pSmx2ZBvVZH0bFA0LqLN+S25bHt2Zsvg+zIC+VUw/w96yjLA5lFpGbgaB5KyqL2Jm6HxNAPEPZjMv7R91vdyn8xjjus4XIgLudGRv+STrvWX1CyzhroUCl0mSmNxVnlvtpS0hEPSbLFhxti73QEF64YTxmk1d6uL2BhkW9BbyyOu55wQSMZjzvaIf/lN6mjgdkT89skt7w4+YHzGJc9XwY1Iw2NGsxWdmN4IUm0X/uXEdvmUsubmQWcRu6kwCu7zUj9Fe7z4Oi5ilU/8GurgCWnMztcWUYs04EnEM4DI7uqyDhjg0ULjgzSFxWeZzwXdnlSYUsYGBnphfQl8i0a3AzRgKC7oDJWg3ggidMBWPy1SpcU+7UF/d/JcS5W1eo/15ypk+lFqJw+zmm6AHvrl6z+j89QzquI9D+Kye3l5El5SzkBGLxJWAleF81sDL4TfMklXo8p3+7izpanC2lh+QogdMsR2V2Sd3XFlZe6cncfAdk7twqLoG4veFOSP6DjGgLhHnb/zrHE3ZbheMwVo7UkdaN5jNBJidmZ6PAHybJMqc++i0YIgEW+9oTX9X3i649cXMvIZAh7hpWkB3x3ajlMC9StgSMo7ZHF9JPGzqk4kO1C93VTX7sOrhREhO0xdMTP3AppssIps1s9MZbLPNVC/SarlzlaQqk5xJjM0Aun9Rx2x50MKj5deyWSyEfw91dNtDk5WqEtV0qVlqTdUVjQLTW9vanzZoqyvIFUPMVX9bBi0CIctjiAat1Rs9wJB7YyrT","layer_level":1},{"id":"1176009e-a603-409a-8ed0-f6b6a262e450","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Analysis API","description":"api-reference-analysis","prompt":"Create API documentation for the analysis module in pyama-core. Document the fitting interface and model registration system. For each analysis model (TrivialModel, MaturationModel, MaturationBlockedModel), specify the mathematical formulation, parameters, fitting algorithm, and return values. Detail the model factory pattern and how to register custom models. Include usage examples showing batch fitting operations and results interpretation. Document the data input requirements (CSV format, column specifications) and output structure. Explain error handling for failed fits and convergence issues. Provide guidance on model selection criteria and performance characteristics. Include code snippets demonstrating programmatic access to fitting results and integration with external analysis tools.","parent_id":"854b94a1-116c-4589-aef1-8ab73760437e","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/fitting.py,pyama-core/src/pyama_core/analysis/models/__init__.py,pyama-core/src/pyama_core/analysis/models/trivial.py,pyama-core/src/pyama_core/analysis/models/maturation.py,pyama-core/src/pyama_core/analysis/models/maturation_blocked.py","gmt_create":"2025-10-03T22:09:29.8002731+02:00","gmt_modified":"2025-10-03T22:26:20.445919+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgzNJxun6GnFz3I9CSIkxwFuVHFql+UdCXK77VotQN7y6BFW6+xfIazpIjCp+qAyoqtNlpz8LGlt0dbFa8heWQ0NDMivbk0n8GxeneUrx0OleSLJkEnRq0EHCnctwvD8fQKIiEBVWZS2cJcjECcWcp9tfFpAGEKOGwYmiDs1xEqgUWOST8ui/ovS18Zl6oqit2XsXzyplOI11Y/OG1NPBLLO3uOz7DVbAyApVEe/EWjjLq0799M19Y84YGZGvHXypq2KY0OjW4iMOVrjuYwrOL6BC6QEeLKEArNnhhvOpmOCQ62738W9Oo0+cqZnd+i7+N3k7DVSEUeFN6lRpEbj0VapFZliWGwPfkrtY+LN9PuTs9xIuAUiHAA2p91HyShlcawzsH+ToiPyZ/YHHa8PBxZCuXE/9YgmAOm7xX/BRO4uC2RrZUR5q0PxgXBqDhmxeW/+XTNttZ3WoKQ9OCpcqmoXCw90xr0Q5REVvUCFIv92q8N8NSlSCTllwFGWCjnXnKAqBXmEwrFN2lGrICwCO7GydSS1NfmXrI2J1cG/P6VZmhprTY43DT7Q9MW9jVvWQmrVf5PaG8LKQ6R5v/3+1cq4jKuiAjvLsDGpmbXUwNwQacYD3STURBohRbHiheE+ER+tpWd/6PQXDgSHTwXDYoAbKXCchJbVGcn/DqgprpKNVkR6Fh4YRrttwr/AYIdvN4Jw/0AJFfhn5BdLRaW/0hwD/DxehU7lOKAGFYiOZiNS3o0a8l3yxft/ju4DrsH3cG6j57nlSLMrExxPny+g2pFsF7vDfYiAGEEYUy25ngYK/8lGaPYVEII4YqG5Xdz74GldSmv4Iiuc+oGW8EnOY25rmOcyiqPFc2SnSaVuv75uCtfipG6rEWSR5n+pHsRX9glc6i46EAU7RIgL+E4k7LymVsEHurrinxZ+2EAC198OqM5O7bFnzaz9w5feSt+qYHKZbDtFRKTcjGLxh9iiEB0EmbbNfbkdJSaVwmUI8MZswr8h3JcKS0pcLGM9+F5m/FC8Nfgif+GG40vFpDNeRLCcPs+2Oo2H+SnIhBrm1tLRfYmDT/7t+M1DrU2rnvz96r8qocCJFuQElb/KYr62u1DYCYY5PM/58GWdKRoLwB2oliKSjShyaBpbQGfc5RjBUpfgcKPXTuwCVQu63cmrWnsF9j0Srxyd+pIcNq8vTZ9CLyXEwkp+M58Ia68wgBAvBh6/LaptggnVjZKmZv4aIshej17GoriI2vyRpUaznBQbGJJlZfhSf9ZT9KfKkrB6kDHyU1bKsn3fnTXiVxMYOO9u6qcG3Q6ABj0Q3e2BULI21PCqMti8prJXWI2HwIMZMaxcExEMGrqXphFygg8LeFqV2WHloDf1Xio1SOtYUAqWaYi4p2F65Q95BULlNS2dOVBfFZXHog0ti8EFo4M7hFxo1vBSE/QL5dnVOdLiFRco6GX2a8dFeQp4vR7gg2X4SQEVWQK3Vzpmq61TQOu+q2kkd+ubym3eq2yABdiUlKk3YbtxLL40PCBA5P7CPSr+3ZnWCWITYA1fEyt6et33BPYkcBNPs7uvNH9zOobvYsb5wzv/3+AkhCvT3MNXLdkUN7SonGmTyFcd1Jt7jk/Fiikc2P/1E5JQ6ckzu4YtVSf+uGRU50D2Mld1ZNbefEbwuZIiOQLn0XlTWwP7HvjgIyqSfCEnwaXssAN8jsE6c1Hu2Uvwv8YRt+3k8d1oEFL8zwz+6xsUep4SgpmntQp2o8zT2AWC089zkOgU/P6KIh1LG","layer_level":1},{"id":"4d3a3898-df8c-4852-8dff-7626e5aa0ce9","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Segmentation","description":"segmentation","prompt":"Develop detailed content for the Segmentation sub-feature focused on cell detection using the Laplacian of Gaussian with Standard Deviation (LOG-STD) method. Explain the multi-scale blob detection algorithm and its application to phase contrast microscopy images. Document the parameters controlling sigma range, threshold values, and minimum distance between detected objects. Include examples of how segmentation results are stored in the processing context and used by downstream tracking steps. Address performance considerations such as computational complexity of multi-scale analysis and memory requirements for large FOVs. Provide troubleshooting guidance for segmentation failures, including parameter tuning recommendations and handling of low-contrast images.","parent_id":"5d24c078-02c9-446b-a192-57339f8294d1","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/segmentation.py,pyama-core/src/pyama_core/processing/segmentation/log_std.py","gmt_create":"2025-10-03T22:09:38.1112511+02:00","gmt_modified":"2025-10-03T22:33:27.4493608+02:00","raw_data":"WikiEncrypted:YJ+qgETJGTF51ZQoRvIenq1FjOgdoyIWcRc64jo+rw4/xG4josb9It6l9XsurIyK72BwYYcEFv8JYsU0uNucAevOWOAsIOwsnSmIRq2D/2qFuEmAwKLrpUZ05BXSn564eD0bxcHdNzBFb78Vg5G9Kzw8Hvc4Q3TDFwn16AXf0JCpeTsUMUZoWIAL7x7Me9VU/vUKZ/UlNK4bfO4wmT4WeAzsDynUoJ6ZbBu+h773ZdApsA57hVw+L4Z/0FgBqGTLHYo3GmGzFqkoC2BQjA8UtPlVm3RkVDzjZ/kFCK9NyVJpajAtAyGYg24deIPWCi/toXLsvkDEjVmfU/RSlr569hFosVi45mcyvF6tFY6sQTwdVhayZ7u4/1aSRIn0cEtnEwTAF458Nc8NpAIYOyOeNCmtLAOp3LxsiYLCcVhAgfo1QDrQsnUK/PYpF6dpLZu6eowy9EqyDISaNqG9d8zxhKq+ZnCTcONqmZ2soLUatuEuoHUyPEz50q19J3CFpcx/j01hKWImjNnsBPLJDexhAJXIrSl04TiIXYi7nOh6Z/pUJ34KAuyycDGSawQN9+v5bI6cTOZwhuNc102iTO4Mxsw1thATG14mqkiKCrAzCgsF3DPmJgXVSJGtz6iIwEGidcoa0GOnvBzhwgzwROzGP21RpsnQhDpMy9W8SiwQRiPgAlgFHzHUEnJAy221SyA04Doz7ok3f/jEhif8d1tCXH6VzJJeM9p40Tva47eA7dLszJKCHmmuICXVs+RYJ6dG1IC/oAwU+OK0BjI9X2ADTAnsSNUaV3MIZiqZqT14IQdzIfX86LVGTY21luSyf4zObvctXqO0F457FCtc4lusZ5L8kZ3Sc0xL2Go6KcZ/8Ex+gHv9AywofjH8vQtOVwHNVB4hAYbbcrNoWQ3g5+7SAT/Oz2huQFZJyQauGm+oe8epjgGd5UVu+E65Vrq54Fqbi70FfVPKxRwHF7j2RYraFwTneCSHhJCQEuaYAc1SUwTzyw6XTPEcZGWtR2yKTPj6TqGUmi1jf2DyNkNve9pt8ImaIaqvnhgEIzvAp7nVU77Gw80OTWGVdPiaP4/l3GyBUeV0Zvd5WibFxEzvjEOaEsLkwAsRtU56WR9UmGkdBFQfnGJfYXCVuIh7eXhdeb09GxsADv02RXSGD+S0vFw6S624pTwYePZPaiYT53juauWxnauA59BJtkSXdMnN2PqoUIW16JJB0SVBUnWU+vxTsRyo4av522HxziugAbFiQykrZiM2zmmy+Pqyy1W//8cMninFum6DHTH8tFkj5SPpc2ZxQkY+pH8cmqeZ2Q+mdbxQsKT7BNYQ/KyzRxgBoKEWvMzZTwvVfHQbrZamYyxSaQ9e4CgLK/79t4QgpOovViyqUuXWSpVFC/h3cwihqohhVRp/HvzwSQqkgBamd9s0fBN/Oq5eT3wghxfaYMGjaedEQxeUaegoO6UVflxXM8JLgo8h1pkfxgQdE6HaLftJTd04jmHIvyN2lyaYpjCSBOM=","layer_level":2},{"id":"b9aaf1aa-3c8b-44c4-9306-eefbd8d69d04","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Segmentation Service","description":"segmentation-service","prompt":"Develop detailed content for the Segmentation Service implementation. Thoroughly explain the LOG-STD (Laplacian of Gaussian with Standard Deviation) algorithm used for cell detection in phase contrast images. Document how the service orchestrates the segmentation workflow by invoking the log_std.py module. Detail the input requirements, expected image characteristics, and output mask generation. Include configuration parameters such as sigma values, thresholding options, and minimum object size. Explain its position in the processing pipeline after background correction and before tracking. Provide concrete examples from the codebase showing how segmentation results are stored and accessed by downstream services. Address common segmentation challenges like overlapping cells and parameter tuning strategies.","parent_id":"19f04139-24a5-4bdb-bd10-42130b293f6c","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/steps/segmentation.py,pyama-core/src/pyama_core/processing/segmentation/log_std.py","gmt_create":"2025-10-03T22:09:44.0077436+02:00","gmt_modified":"2025-10-03T22:34:49.0040263+02:00","raw_data":"WikiEncrypted:YJ+qgETJGTF51ZQoRvIeniTKhlt5DVH036BEAPigcTQxN7xl7jTaGaGf20k3/ERV+Uu81MmdxtOr0VjmqHqIWga0uXnteSyM+uZ0NZGe/DD8Oddd9OQ+MMccOhx+OTEfqWgiYl3PBGejtPDu1ZYcpYzDEvJuxb68lbFOuNLXiBRVDW7sEkZqxxG6U3f038vRHeT+HKAdIcBeTZ6FUwoZmo3bn0FUtVJxqx0q/9zPbYheerEGdyXeHxnZMZFBREgNoCpTIihnCJlmIVknRIfFzYH9oP4wbOx4IBU28ABbt70RYJZ5xhczZDVGHZk/578SNS3xxi/96r17umOZfIRB8m+lnVAcBezvsp4h8CAbIK9FS2OaIuTVDt3Dhxg9+8kUA2QlsytEVo+u264LHVWwDpZ/WTPWnGDAdfsXuFDX9/HE2LxUOv8AlBiFCZ6mKrMDlEnfUzEkwNu+z9757RZhWHjdJHIvjR8SyGzqgX+DiQIWsVcwTi9EuMC/WNESCEjng3KKrmPdgktt2HcL50irgDMSC9+/N7iGUD0Ia9r52Lj2l6VkG2qiXTE3IbGH19So1ApwFyN9VmsBT4tBONDDg4xjTN9nqC+Pq1kvqxoxxXJXOG/rbEZg3gqHSsnsUIl0n1p8eXT7Jc1EEbKsNG6dR1tdZoeAJEaiVKR02JJ9SJm1k1IPEK2SvNW+RABrL7djXLVOd1rbCSJDrqgtBjWceKw8ELko/Kax5lIwq+r7LhoZtdqNAoyqxrB6e+kB3IZeSTl5Ng1nR1NLiFVYriXMXaWwCSuX20x4Gvg6aRzy2Jd6egtLqOYzycAYupX/AmrFC8DDidjDkKKtrKSRAYZhfe49nyzclf1th/fo6PDTSO3KK7vS2pwTAS7wvt90/K92Rlv0PO1Z7j7xb315W3YFV5tcjwT0qyU/G5gV1NHc+66IYWhubFk+6iZh4T4uRhSbpM/M/wdbVkO3OWEh4XBhHin1w3EPVwvpKBpdGff8U33VgkBxd7JI0mO+pMYmDcQ6PnMIENVZYaWY4KobJ0IsGaDFcOjRFnREZs344XAHlxBjw6s5t1QrC6VcttYRF+SITwYalIZvzXnwDUdVUy8FKXFn37bCrReic/T1YLNLSQsv75oyEc8fkggq5yl38jJCz/Xxox5lmVIk43pPcPWTP+oVDQv+YmB7MloukpJK33wiB/LnJLZAMUeum0qG+sSKzm+GIatU05US6RQzLQO5xBqUM/TjzIk77iZoVzjK3xA/75yR+gZ9SG48yPIwMtoN3RdgciCuDE5zg4gsk55HUYJjtqjtksZ3RmgQmXqHaFhL5tSqMsaCYr8sVQddK1TKN28R3FPhf+1WyN3dAbut04zQJgTDQgsSOq/FEGKGq/467VnVFIZou/qJw9FJCnzxHOqKGTSObX8oeeg+DK7BgaeevWjCqB8qaIunhp31cN43noGO3a7XgasP/5IiU2LJvAlBrC7cU8+UQOXhJ3hdJpVACvX0Og4Utbq/j4yz7AK4Zw7IFHArZ7iZWg8V1kIUZvs0NHJ+8AVTlvmyymg2UeCBwp8AVS0fLG913Ql5HZQyEF3s60zRfEQM3+zF6ZyO","layer_level":2},{"id":"b3628077-df7c-43cd-8191-c219fa7becbb","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Maturation Model API","description":"analysis-api-maturation-model","prompt":"Create API documentation for the MaturationModel in pyama-core. Specify the mathematical formulation based on logistic growth or maturation kinetics, including parameters such as initial value, maximum asymptote, rate constant, and midpoint. Document the fitting algorithm (e.g., scipy.optimize.curve_fit), convergence criteria, and handling of noisy or incomplete time series. Detail the class interface, input data requirements (time and signal columns), and output structure (parameter estimates, confidence intervals, fit statistics). Include a usage example with synthetic data demonstrating successful fitting and interpretation of biological meaning. Explain error conditions such as non-convergence or parameter bounds violations and how they are handled.","parent_id":"1176009e-a603-409a-8ed0-f6b6a262e450","order":1,"progress_status":"failed","dependent_files":"pyama-core/src/pyama_core/analysis/models/maturation.py","gmt_create":"2025-10-03T22:09:59.8434405+02:00","gmt_modified":"2025-10-03T22:43:49.609785+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQLIn7QdwuF39ULXmMp5SZ9jtoVQN/RW/vlRYAYle8J3+0ynmJVdmRQgm2o2W/p5EayCqiLZnQ8nP7E7MhrN1mcX87jMbc1p0A6iH7da1wCvPbvVkE7Xd2sFoIAHO2Z7HkuwYUY7O+swKHCaGaL/wZE0eKtx0wRT8X+u1bWMFkM1kyfbHTMmI64pciwv4m1CooG2DH7qRLlnkqZapjTz3xCEleSwuoRNH9ne2KCm9ynQ7DoQ/SUPyGCUkbKvKpa7xQgP1rjcRGIGbbxkcUjJoYEo2M0GjBz464091pJKWwwdD652YkMB2/9uB0KRL5DlPVk9ePXOyZF4Et9ba/6mc95euy0amGYWSWyOrwo3ftRtbEDAXRpDFPu2JCum7doBHsHJdXyOUMjBEklZ9kDdAhi5ELl+z7XfMtTAEaWClcRCYssEJNW2dQegZ1QeUlba2YsXBhhe6WfpdWIgVEo1nZ/eGcbDCPBl2kbwVF9Ge+asRbaXmuFKzM+Wy2wJP+qIty0yeNloX533hoWVLORcxQkmfpXaBafsOVqxgNyyefyyWE2EiV1tkm6nuD82hETINBB009vS3RD1VA3gs3qYmCKc6TLAOW2UxMtG2aX0BMDZNrtUdiU6Cm4J7vf8yt4qaghaNmC6VE1gpwryvleY12Z0PGdYA/xIBiNUUqXH1zNzepvCLqmoCSxRmOvbrGWuIeqEaawRgDePkF5F3j65LNwClNk59L2RLVp6kQQ+82JWID5Oiz0qjkwv/ePeeS9WbdP9qpWvfomyVRp3PQXajaZp+Msn24dT5KpVjKMnV34iRopcs99b3R0hWJymdgq+w2tU3ol+z0IXZaWZjB/YyyqDDZsIBHck1zHJVj7Dndle8hKNPwXEJ2Igf8EU/fiyaU3MBRvr6zTqB0KKmYATJ0dG5MrP5ZcaHLJGWYAYwpna07Lq4Kp5UovvxujRx/r4BcLLW6fckEwtItIxgtE5TdYc952eFwSF1hi5jPYtYVlCq1Xnm5v+YAEUkAk6ZgutsY6v4juGOalWqP4fbDItoh2Y21JWrAead3x9Aa39btkaG+DyzEMrimIbb2jQ/iQMeupYMTrVUbsMsJyNFZh8aiptaXIsP6y7Y5m8KY9OHDtLS+93i8HYw1L8Y0C6HRljb/8cOD3Q0egqK0ZK937fQH6PY4a1hxE5fCKVvWjsuL1Gf5lYH9S8GuqxHEuFcXtelbpSXh6WeAIWXb4UoIemVd9t5k7PsLr8IwhOGE7arLjcqrTUWsH1qNhDXusw0dT1h4AT/0jV+tBg0oaswMSk6AXdl/zIKD0SKNr9aqMxDhPC9GRbuc3ZBwdF5aTxC/1WMW3gH2QOsrcd6nJjJROHA85VCud8xvH0WvauYyCZteKuQDRDG44pkxqd0MPz5QalSvQ==","layer_level":2},{"id":"1e1a8c69-cfa0-45e6-bcab-8ec89a3307bd","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Segmentation Service","description":"api-reference-processing-segmentation","prompt":"Develop detailed API documentation for the SegmentationService and its underlying LOG-STD algorithm implementation. Document the service interface, configuration parameters (such as sigma, threshold, and minimum_size), input/output contracts, and integration with the processing pipeline. Explain the LOG-STD (Laplacian of Gaussian with Standard Deviation filtering) method for cell detection in phase contrast images. Include usage examples showing parameter tuning for different cell types and imaging conditions. Detail error conditions such as empty masks or memory exhaustion. Provide guidance on performance optimization, including tile-based processing and parallelization strategies. Explain extension points for custom segmentation algorithms that conform to the service interface.","parent_id":"63147ce0-0997-492a-97cf-4a038ad7300d","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/segmentation.py,pyama-core/src/pyama_core/processing/segmentation/log_std.py","gmt_create":"2025-10-03T22:10:00.3787007+02:00","gmt_modified":"2025-10-03T22:34:57.2175973+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0FX6PpUJ/WvHCUWZC/NaYOTNvyVeXvz0QJVC7yIlwYYwNjAClVsPyvg/7XNu+1Lpflt+NgaXW5oZYyG9Ijgx+ncCtWR+6TYJvoh66mSBbhvSWX8yGmfVChot4rHB4TYtJooiscKCyavApu0vwCJ3tU060IHOwLFj8+jxMiIhLdGHo8d08P81T+6l0YekUmw1wpMP6lakF2MBlTZnDqTlRZk5J+A//82T2JrmoqdbcKzVOR4P74wjkInTwTCl0qiiUBAtd78s4EREF/F77Esz1gurnfXOnOApfw7KvQgWYrNlN8OnuxhtL5o8UULLSWhVKTZZeUgx0aLaT8yI8mabjO5P3brIuDk+PqETrk+UjmDNnwOlcavbPcXcrXDxSjXnf696WG8smThfUp+fSVShNgTS/EK3eb/Z7sJaP3nxMRXRTC9Mv2TLUYsKOWcakkX+SG+akFpR+yfBCe1kl99zGz7aWueeWaswAIjZiNvvoj+mjr8Rth/SKe/OdZihB9iJRufBCGKAyq6Ytiea+WQM2IYCFpqYqDCsDQSMdkkXHZQkgEBcCOwvj92zrGyn+RBESv0cOqPorHBQxgH+STtAlHOf9h9wvlJXMkWhV8QUE29mnOdIyu0nSaL2LmHWU2o3CfG3I1zfD+RoJxuLMlxGfksyL1G1OnB5NuuYCZ4nOt2eCO9NhQowPIf0M2DJuZdgFz5PkgxVeU8tjsRDCKNYV7myHnZMHwTpXad04qACRAitFLSynt9a1ePv85szkhhKK71BteeEn8dM3MMD4S3koS5jDRzOsExC0KLxTqdaahHYICqp+ma2tWfIvGbOn0ANQ7XoES/RnBarwmaD1pwq2MDSHP5omkPKeXTL9hV2AF2Y+bawY6aLVTvz0C86O7m5mIV/4ptdTeR8GiZYy5+RhN2kw8qRGpfAngFArdXj5Eb5k/dH2gDq9XdQ+tN5d5mUOSXWNOuKYuMaciVcebwzKYG403hpbEdj762gEg+8cJA0kD9t3lLty7uPOrsn0Eev+T2oYUROW1Nbi6mF0GIrLL2UWC73r+zvTyWd5zxX5urjIc3VjqHp3V2lYIAidFPGcQAjRdOo60l+tobN+tKNvPoqVJqiazUFk9XmnbjSqqe1aQTd6PIHizb5u0b4vgp9lYb1w18JIYp347FM6lzaTt6FIzSV7Sq/w6vkF5yiCR/G3WBNa7sbuvCGiRR4vq7+kfs8FRmtJk9VaqebZfJG+0jb+9SmabXVwv4efZZbOTGBncBqFKs1P7LYCGMPbAzl3td7knC5OoDDan2k+PamcojirHdhh0GRxNXVMI6Cz/G2BWisZHZCfN7EYTlMRLF0AIXf60XBO0+XoelKISLoFyqMSpfiTwCWS5NIwzOYx1ARh1hy+Y7BcsnPffJIPIBB4HHQ7EosSKa/y/UoMoriqpoZWt96ptuukPPzZ5pLO0gjUaQpFEayqrRzSG3gI4rLnqIZoaM3gqly7/WTb8VaydkO9Cp0zjL6J0p0wruKJu+FwEdHzV5AI5JfwUglAO3qRPKoWreXi96fUYKX0W//j8=","layer_level":2},{"id":"8aee56e2-2343-453e-af67-892aa1de4590","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Processing CSV I/O","description":"io-csv-processing","prompt":"Develop detailed API documentation for the processing CSV module. Document the functions for reading and writing CSV files generated during the image processing pipeline, including cell detection results, segmentation outputs, and tracking data. Specify the schema structure, column definitions, and data types used in these CSV files. Explain how the CSV data integrates with the core processing workflow and downstream analysis modules. Include practical examples showing how to programmatically access processing results, modify CSV outputs, and handle edge cases such as missing values or malformed entries. Address performance considerations when handling large CSV files and provide best practices for data validation and error handling during CSV operations.","parent_id":"dfbca4d9-cc99-44b1-aa90-0d441840161a","order":1,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/io/processing_csv.py","gmt_create":"2025-10-03T22:10:03.1948986+02:00","gmt_modified":"2025-10-03T22:36:12.5712852+02:00","raw_data":"WikiEncrypted:P8CuBfZUIZRDFW/Lsksc1axP7S5U8VJ1LhPKhcRDp2bT2HSrh6Gg8YHj9oBZZ2PVNtRFpNB3HGBf5PhBnBut8Id5zdkIYNQXB1PJotAw5VTl/GQoHgzY/I2N0F6Ogi9YXF7i0N5Bfcuqt6JDHPmGTEG06aQjH4F+nBm65IuobpU91Ks7q7cfuPByFd/DEmLXF4Z8PSiXVO8WJepmRgwxH3AJkYgxRy858IYZi53babiFsGT6cJq8/dMZRMyrbiNCZL7Q2FYI9WITQDJm38dfHIEIarHWuUd3GT5LrAeoeSam5K9DUImw/AjlbRLRgpDZjkwZnauYjP6LxpJbzqvSgmgeX8kdV7ToebyEj5WfI++Pz7IkJxK1qejDH6CQ0K70o4MvPZ9wPd8I71atptfO29sUAybHYDcDjPTTHwGE1OuMQg6VqqvDFlThZLDAhO/YoiE62RkI9soKWvFIr80AcV0+IJmqDw59+kF7CCHSU3K8iyAHHGahFQbsuUbvXcGhT2pAoTu4Xm4wJTpbWMqgtCYDr++A5uvkiqNSiuvRTVJFBpkz0gMgpVPVOzb1PSJ1FyMjRGgQrMZSDTyNwicmfN/AyoFDoxCMesIpgnjrWmqHtfHbLzM3PKhbA8Y0uH48aQ+iYQb8hIXUgh/GL4r8dLUHiBnRz3sf/YJJkHpPHhS9/l+ZO3e0Y30qoc3I/ljKXFhEXm1UicDYWxc9GnZkjCTYMgDsyo2BSHrw6DrTjD1nxXcCm60cp+me56OKopJactW6+Tdf8aXD2aXwVLkZ0rhqjizq2OsfGPmqKsgDMGQZRGEphBHS4ZTf8gUar3EGlBL62kOdbX+NdMmBMVZe8LVNnDB5fn0ZzckF+oikfRozXy+PeE4sTbzGtDuqo7vbYsNrUFabXhcuORvMAtoy2cTr812QCxWpUjdN9UAJi42T1EfCnOri5fAdS+17jOkI1f1++Pbmrgb2wPyf+iTETOlRKz9/6ZoBENyISmozHWP7W5GYNO0QuwvIdvwPhlGKGrpqGQgVxCiFQjKd7Al/esHSJ2Wte6upoeXZeGo1rBvsxvSdfBhDpG6nO9JRrqeDUfgzE1TLWZIiaoHKTUhF/jo29e600V3a3s5ETWs0grLBvseweeJOXZLSMqqhzfW/yj5V1hgp9nfvXIFiyef16uVvcwDdDlumsWYmazmn91wdlnsnURkZxDL0UM2yU+duxh6dP2QlVKs3jSj7uT3+5mMW/H0s1fV3ri3zByW2pcLJ+f/l/xzvD5le/aEWf+m5NK0Lm+gUtWHQNLdMCqmrnX/hBQs3/P2J2/EWgqkbV8ApnULGzF3ff+W2LgeRQQq23ryzAVFnJplrm8LEdAFuQxgfD4WD45hlU6K1KLhc4TBnSH1VDEsSTaBnXAErZfvx","layer_level":2},{"id":"4aecb941-332a-4e57-97c5-ea1dba05f437","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"User Interface Overview","description":"user-interface-overview","prompt":"Create comprehensive content for the User Interface Overview section. Describe the main application window structure with its tabbed interface (Processing, Analysis, Visualization). Explain the role of each top-level page and their navigation patterns. Document the shared components such as status bar, menu system, and configuration dialogs. Illustrate the layout principles used in both pyama-qt and pyama-qt-slim, highlighting differences in complexity and feature density. Include annotated screenshots showing key UI elements and their functions. Explain the MVC architecture implementation where controllers manage page logic, models hold state, and views render components. Describe the event flow from user interaction to background processing. Cover responsive design considerations and accessibility features. Provide guidelines for UI customization and theming. Make this section useful for both end-users learning the interface and developers extending the UI.","order":2,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/main.py,pyama-qt-slim/src/pyama_qt/layout.py","gmt_create":"2025-10-03T22:07:56.1199238+02:00","gmt_modified":"2025-10-03T22:11:52.5680742+02:00","raw_data":"WikiEncrypted:eFStdOOCJ/uTWtXKsz8g6hBkdtyNzcoKoLK6TbnwcOVD+SWRK9qTZX/thhnpum4fjX5L6BwT1BXv8EmtkXjwp/eOSqwcJIwhsdFiJW07I+k7ZtBVaPpJ1lHhycR+3Pdutaw/fFnD+mvmmkqeYgRHiwA9mqkhBWBjRGOQu0IB39nyuVbUrGjBOSrvHnE60Cu1gcUBeXf3UVw+ELLvNLhIWBfsEAprzl4/LVxg6OfItOZxOC+4QWxN2nf8iqSOZVK0ujx4JftLY66r50ctdBJX37trSOZILTlq7lUpHK5htyvKV+wpg0Y85H7B0xTQ88n0Vcn8hbn78buf0LzoJpUHR2jKlezAjDYM4+oxw4Nq8KlipcTdKs0GS91VwtffZ+h6/YJ8UlCJNPz0noLjpVcJ1itz/Kjv1SIt5p3Gc+wQDAqhXsGX3Ck4H7G2vqxspuGqFwxt9Ixix2B5YUhaHBjn2eFlAJBG1bcXQKqOdQW/DNUfsivNYrPBWRm2BzrJ2FNL1juJP1LyeoswV5UiOvlP+rp1ySzYeFTi8UNreHHjedOnoehgD7aNQQY+D5/Yy5VU4nmPr5F2NUUwloHjcPgy7HPZ6actqPgebyzxGgJ8ziN4jKEhw7540fKr2oosp8oPN1WTrihWsAvl1qFxTbN9pa6NdJV+5NEK9rBTlfuVrAKZLYubITQ5DdVwkYhmKPbkVKhFvePCpT4EdIhYr9ABeDIb386JF1na1qrBzlceKI3LAfcL2T3b/wqYzru+Vuwc9H9fO9NUQGii0CO51PoeRG7VKsIKGVJ4y8eZpSg5cATdgdFxPAYZpP6E38OglYjmJhD45krKDxAz9HqYLc2relN4x9FWqj9vMAJm7RCtf6SmWxjFusQmlHpdAG7Ii36sOumKjaCHsa9c+LyO73yG6EwAVb/4CqR9OYNzhwNMSIQl3F5FkvagvQ9/YzLFeZN4ETVqutEEe0Xy+JzMqdDpc5UFUGJNVVYTxcxlhru9sDpDaXzNXsD5bJVvIanvDqxIHPPsWtdubHk+Jn6MW8nso8tQqU8XCDcgXEIEaQ86ZhzOkyPlsJD6twgGhm02n0Lg1zahJha+c+hIYPTd84rNYZhWziGTUKFfimeBeCaYRlZlI8ZlMqH5N+A5R+IoONZne9Xpcq6LvMHX31h8cA3DTn8lAYg2EEnfkUF3jTAsEZI0nne4nq+6WbmuwcvwK2vRd48rjMugEncIPvjltvq3Pxo+txEihlKPpNy7A1AjZyT31iI2Txab9QNydMkdpKva72RBdk6kEUeA2raA7ATAdagVrXjiBcynqnifMdkPxDBVETiPbM3nsGWdAj77Befr5uHS5vZsnVG/PGxvXHM0R84L72TFRZ4fRsLklDFeTXcVHUP0pWWS1aVyrEjQRJqD/5DvbKvAuAd14sMHgMViRKiU13kjwqvFmd/YBpPfsWp8JD/yUjoAFnQsTwzD1nqpmHGZNEvdld6BsrdlhmEfZm61LiEaJBGmddEjZb9dxzhh9jWI7pywkKLTFOlvfFKZw6U2AfV36WE4uRr6jd1kpf/2OejevS1NdzpJzXJUTr8PXU9xt5LCRGX4b8UTrVWzlROgOtoeJgB2xVfAj8MP2FhwQFrhCpwKHbtyOck7BY0A1vDu9og7KZvNF4onjDqrK/JwJOARdSGZuonQdNGpX7Sz0nXGNXrxbbeJkpN09zY="},{"id":"5d24c078-02c9-446b-a192-57339f8294d1","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Pipeline Execution","description":"pipeline-execution","prompt":"Develop detailed content for the Pipeline Execution sub-feature focused on the orchestration of processing steps. Explain the run_complete_workflow function and its execution sequence: copying, correction, segmentation, tracking, and extraction. Detail how background workers and threading ensure UI responsiveness during long-running operations. Document progress tracking and real-time status updates. Include examples of how exceptions are handled and logged during execution. Address performance considerations such as parallelization strategy, memory management, and disk I/O optimization. Provide troubleshooting guidance for pipeline failures, including partial execution recovery and debugging individual steps.","parent_id":"e51c01ad-283a-4d22-b505-d0a31233178b","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/pipeline.py,pyama-qt/src/pyama_qt/processing/controller.py,pyama-qt/src/pyama_qt/services/threading.py","gmt_create":"2025-10-03T22:08:57.1240363+02:00","gmt_modified":"2025-10-03T22:26:55.8302265+02:00","raw_data":"WikiEncrypted:oxtugALaf4ZaLWbA38IyvzLcrlcMzsYUPL4pHUi9M9qjTcbHZcrerLxrdnhQfD/s6vkXdF9mJh+IWuQDi0z6EoSHsEH73GZDBMqeV6U/3wOY2KWLtGiEP1EzexEiGBAaKDYBc6bNud7YDAZctytwdcAAacHHEwRdiYMgH69l0hoAw4y6QJIzzxqvjIj0h5MRSpv2j27NJFlWszeMAsDS+/DrZW3zI9HkEn1qBZ41js4/8i2crJldzSK4Zz8UXHCLIH+vnyWvbv6S4eV+6OzHnvG6vYWMdJ13kfXOyMsjcbpOwmGxzFFoq/hBQh27f8B5VFPKtUixPslgQMkw0XyAhqx7bJtiNtp2cxiuFUHxZW42aNoYZpYJKJPJBHOeoWAtOTgCdIJnGp6w3qB8VU9SN9gdgelqaBPGDtMessIujKSuND2eju4c0dPuSaVTRON/dzgzHI0lQZeRwh0YoTCximyzThBguelcldjdEX+qw2rja4Cxf5L0/E/5k0eM3rp8YqgoOmkDWF6iZZv17/qtqRCn6dZCrXTqhVn8JFGp0yPWw9ypbLhx9qwAVHbuAW09vpXZhQN9ML/ue+VXjr+ML9aobOOxGc0IUYF3GFf9j5FIWl59L240w4ujP3llow2Mgun6mA70k7urcakZHq6/UvIpL/rk2/Wr7TD4NDDdMSe163f49rkgENo9jZOIB5XKQLn9rhgpSmf5BjeiNX6q1i50od2wnpyR8EnmZkFKJgSVtpY16DNveLGzdg2pg27ggt6bO534LqLXv+VlFgfUdwIdc3DP2Uf0G1rVX7u/Rk1JfZ/ctii4lH+ceS1M5capL+Ot7ENigEqSMAapzko6eLA6OsDGF+GuYE0CdsV4UA8eeojifFxJBknIzgh7/i0znO/GziDlvCKv3B2QagYBc6FyvXnx+fq4lyPxBvEly5cP3Xs3khxYRVsQy+096G1AsSZ84RsLB6a0/XTOZG3/VK48fu1HgI3rb7KO4ODEuuxZ3doS9iVB8qQE0iUVopglrtMUM1AjTkw3N2MFYMXX3uOMW5333v6hiP84p9LYkQIavx1uJ2cSyPCnuRM3LrCrGkrs/wWUw3M4kpYGDSud94d7iKLu98+n3DJTYYcenpr8R9bfE6Vtc/E5zQ3Q95uTUS1pJGSX2bzBFsTMYiT7vJZeNdOMNCDEvSFojke0xGZDQFKjD+qChZM7zwqH9EcQJfPbA8ergUGWevDgS+giB2O5gmHNLausd7H0lge1Ha5VMggxRz/7QCO9rpqlopP5oD/bBSarXqexLshFUYiHDjwGkmo81c4rsnhxRiFvT9Ao1xzCStN2KAxNFubkLjXXafpDnhF0hUbzc3ceV1lZIQw1la4Uv3Fd3hRJ65C0WEbeuHbUtWemNvmWl621+ww5rTYSdPLK8VsiaIhk/Lmgjw8/obMt9cGxE21rY37QcmEM3sgNuP4XTqvijTrIWCuazbKPIeyzydPfWtrYZ0XCyfevtmeLPvDegYaNa1N/iVaPi39hm0oXfqUnhTfWnZOIWGaZpDxwlBTfLyr9qgRioGaI4U5hHYXBRaN0wsUJ5mE=","layer_level":1},{"id":"462724e4-58cb-41ef-9fc2-e4e085ad453e","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Trace Analysis","description":"trace-analysis","prompt":"Develop detailed content for the Trace Analysis sub-feature focused on visualizing and interpreting intensity dynamics over time for segmented objects. Explain how the trace panel plots fluorescence or other quantitative measurements per cell across frames. Document the selection mechanism that links individual traces to specific cells in the image view. Describe the overlay of model fitting results on raw traces when available. Include examples of identifying maturation patterns, detecting outliers, and comparing traces across different experimental conditions. Address common challenges such as noisy signals, missing data points, and trace misalignment. Provide guidance on adjusting plot ranges, applying smoothing filters, and exporting trace data for external analysis.","parent_id":"88a939bf-eb4a-4be8-9c88-a3d1ca9f0754","order":2,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/visualization/panels/trace_panel.py,pyama-qt/src/pyama_qt/components/mpl_canvas.py,pyama-qt/src/pyama_qt/visualization/models.py","gmt_create":"2025-10-03T22:08:57.3268479+02:00","gmt_modified":"2025-10-03T22:27:47.5375387+02:00","raw_data":"WikiEncrypted:G9a1bUDYnoIWLO+V1WkeXDTSgAZGB28hmmobVBlUjghyC7CQK3Gk4+IvGoCILzazd18VvOXE89ZS514jTzAoQZDUs70H+I/Ex8QhnntKCk+lgA2w7j++QlYzO5qM706FFeohQhFypgSInGUNuiFBtevEUHpgMAWOr0BtmDwWV2AST51+EUapKuMVIrN2IK2UMMjDg9s5mco9QjmKtlGU0JrmctvI+j91qMhqet3j6bXXP+a4atlN2D7axjAskxXAJtZEaoU+wKzqxejH+OLduqPevlgJdloeFp+2uSu20MJ5lhVLDvFHwIudeeTJPHnHzGxwlWmtcF27PPYaliHF0wCU0mkvZRDYAhPDamRJ9hMCZ3hOhbKVSqxNkb5NBFT5Wv9fHNfifx0qMX38MJp+H+e2RXcUAPFjO/xVzglZRm/6G5of8UvGUVzqaLxUnRaG9MiH1TGSjx1mfw+zy5O0XtIT+/XOgljhzH3T4idduEMXhHrhh7ObRav6g3TXFRKfwnBrEVcss0oc5WGd0T1FQ9OlAO5EiRZ0La7KQHMs2nK2rJQiIpcb+/GiPCnsnk9He6oWa3N5ve4F2zok3Jtz73wghnmWXSxS8iqSkWwo2ph36HzuBPK5ndmxB8F5d6lM3wSMAkhr1qRczQDtPNXFxR75ZK13CwAKjEanC508sz1z4MjvSZCmBxUdoJA98nfZ7HaeUs5cGnzseZqqyihdIZbdI7VFnfITm9S3FNE04xY7YOdBaf23acImI7kBLrVpnaA7vGpPVL61hoPNJGqaXu3fN2Rh7HAyJebI9M+u+TMPKIrXKj46mbFKrJhIIlFqEeM+fK6UaejLCwI3remXDdP/u02YMI7hCAjxlgdT7nUa1UNnSu6O2TVxfeGHVcM8Zo01C9tZFnvFXl5TY/Y5sSiKuvrv+KD1VyOA9QG/BCn0sMHC+95mNdIBC0lgUEsXPJfN4eipX6qFrJAQCVA9iFSld6zwyvELp3UTeXVksZNwFS8wduNyOApn6YRwPcSJi2y4hmxQtXNfbFmuzyKn8y+nU+II7CuPEh0YLV9PlvQKCf8c+8CCt2Ev6I+2HGty+wfo4t5PRr3OqUW+rLI/Dd8FEGow0G1TqMdnBMYK7L+ism9akx7/6ku1DrZXar5e9xSTWQ4kCKAuVdCCTmNpymnEWXNxJiYb139F30Y7nFsE5zljrybILuhKPrWytCu76uhrxfGOWPOvuEmIKJHmJupnnO+sexb0on3oW/3ALm+jsHhZTL0mLK106LxawOaTRHrUR9bZqX/PfQvOye8g4qqv986DWaa2mMAIgOGnU6GLthvKoDHbepNq9OhfO5K9SySCS5qpKy7gyxoTgTd9gmSK+Ayga1rMwot/YcEvVi2P0WmpwEO4Z83yLM2CjSRlYCZd+j9pJ8cYwfjA1i2OEmuHdgFPMuiVd1JRdEBwSXeBpSJ9dCLG4qbbubuYrrAcbgy2V5HHmUWt54TBuzrFZF3a4ACan0xerxWQH9DBXuf0cA2eMNiKl8XCpa6bnu613HFCIGHw5wGXgdv8lmFUhw==","layer_level":1},{"id":"b54e78f2-eb40-4ec4-9254-2bfda2166461","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Parameter Configuration","description":"analysis-parameter-configuration","prompt":"Develop detailed content for the parameter configuration sub-feature of the Analysis Module. Thoroughly explain how users configure initial parameters, bounds, and constraints for curve fitting through the UI. Document the connection between the fitting panel controls and the underlying parameter objects. Include concrete examples from the codebase showing how parameter defaults are set and validated. Explain the relationship between UI inputs and scipy.optimize parameters. Address common issues such as poor initial guesses leading to convergence failures and overly restrictive bounds. Provide guidance on choosing appropriate parameter values based on prior knowledge of the biological system. Make content accessible to beginners while providing sufficient technical depth for experienced developers.","parent_id":"971318b3-b951-4b95-914e-55ee91bb0a8b","order":2,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/analysis/panels/fitting_panel.py,pyama-qt/src/pyama_qt/analysis/models.py,pyama-core/src/pyama_core/analysis/fitting.py","gmt_create":"2025-10-03T22:09:01.8153919+02:00","gmt_modified":"2025-10-03T22:27:54.9494968+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQFu/1LtkjX0M0p00u963YiPqyT/3AwX0fITA8yYMkyDXm3BvCzi7sYyjGrUc9fC3ExqNzdv0nGU1YrlAvtWFqZNuCoNN071qtRFdYiiyGlbMekPSDs89DsxuWTiud0JOmnad9HBRgz+WPQqRsQE3uzQbhaWEljVwX8wpB+xyAc5MiYoqw3M2eAMMba8DyRY6+FtAApBLG81rSZS+aCaDm0LaUdcHuWEBjZGA/A9Z/fF0p5n4RIhmnMkXwnlBsdA/U7795VsrqgVfVqWHZYYUJHAahEiJzJqJrL9+1CXYxg5kvu9SWKKc8C/goPeNpE3dx0Y+pevcUu1pmMFJiKW+kHXM/LbRsRERc0/CZQyRrGVn09CtOGAIgf+hCSehStXre6mQPx0pAI81V2iGPsqQz/VM2sD5kZRliS2IS5HHfjs7TDGeJTk4b2voh+M+PmFDaTSN6sgoF8piz+mqYDRLDh+xu58rLrQK2SXK1RmolYylYC2S9tjpvbY1xHClg+KpUJbKdJUGoEYpSq2cY+IfW6U8WDKbrYWgOLpI4/+SvqF4muZVjtzQbaGo7+iAF9QiR716+GoHwuQU/Bex9eLEjr5mRnQrz43Qvg1tAsBNmVMCEboBXp/WSRwk4wstgxmDXDgTD7oVlDEATAd6jK35e2vOOdI2AqlfjNpUGnjkC8Oq/dBG6EG3GgA1nkxMFI45pplWk0G6UXzxz0PJfpH1JkrJtDJb4byXdui00rKnCY9knYXZxD+C26o65+j9d/6koFuREVmWwzzSrf0SwdfGdS7kunne22L0WmeiohgyuWJ//Uytt++czHuKU9Qzp8dLGm7LCMxStg1E3uBsbC3vsBxkpcKhVFNAUQjv2OMcXdNfrZ04WTjYY7H9AQHDkCqufEQfXoSDRXyYJR0wg9qDBUqopu0wRdmNoH7CpyKsN0H/vCGoOKRbLq3XVfM04LArMz9i0vb7qsMcWG52NHVh7s14wrirjg4/PY4rey22T9Qg1SlXlJJkTJZgFoiWYJi8DkvZdkQwOWkZAaSJrzlTfZ0IanXonTVEmPP/z9pzYIPSt1OKIYZZQbf+fbrQrR3jaIH5kQe4XjKEhcLFGHlYnJeHNGN8A9Jy2dkuItVwdu2D3sZ6ghwCULrMbk4uk95WeqbHpWXsOCckP4sZcICKFLFqiG2Dkldw14t/HwLnBHy6VKAc1J0I4ej3QX0Hb+CpHYlkCSf39Qbfohagfvo9tnMwhOGcP1cx2sf9HV7vir+ZSPASsQArhZsjD3o3tJHnFvqqZGl07ZKaiD4c+FvHGVzwDRoRNq5IBiDNJJrmvjusP7YcaDrRuob8rObmQeh+HQ8bibLzgij91aEuumXv+oH7+UpjH16xDuyZ+2/9EDTaynbyHUhe/nkV6y0wQv8PXagJtTC67gNKdc3DWcZF2NZOqN1JGgmsES5EU8+QlPCPkp09AJtv0u8PemYzsWl4NBRPIIW5wLS1kvnzwIuVSe62G7tcKB+jiAWYFy0AymwOkiFlRncuh0xBZ3Y/v45Se0rgjq+0hO2/+pf27q6vycMb84ueXFMw7qV/71yC+mZG2GH/w255Neu9LTsljvPI7g==","layer_level":1},{"id":"66150031-b3c4-4cfc-90ee-cfa9c51ccca1","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Maturation-Blocked Model","description":"maturation-blocked-model","prompt":"Develop detailed content for the Maturation-Blocked Model, designed to represent inhibited or incomplete maturation processes in biological systems. Explain its application in perturbation experiments where maturation is partially or fully blocked (e.g., drug treatments, genetic knockouts). Document the mathematical structure, which may extend the Maturation Model with an additional parameter for maximum achievable maturation level or altered kinetics. Detail the implementation including parameter constraints, fitting procedure, and how it compares statistically to the standard Maturation Model. Provide examples from the codebase showing model registration, parameter handling, and integration with batch fitting workflows. Explain how users can interpret the blocking parameter in biological terms and assess significance through confidence intervals or model selection criteria. Address potential fitting challenges such as parameter correlation and suggest strategies for experimental design to improve identifiability. Link to visualization tools that help compare blocked vs. normal maturation trajectories.","parent_id":"4ccba304-272c-40d3-a267-299f6b637bde","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/maturation_blocked.py","gmt_create":"2025-10-03T22:09:17.863141+02:00","gmt_modified":"2025-10-03T22:28:16.2555617+02:00","raw_data":"WikiEncrypted:Mdw8Dmv1QMuXAIucCHIkX1eEUWPHTqNuV6cODAN3rKFibz5IlGSTIxbWPhijkClW6itd6yO9t0CKFToj/urL54n/ZLkCLZD7B7i9cJb+MsuYcflsW+j3Op7G4S0kyuReHIJ/mLnyZnqFcUpv8Zch7UerRVqYXgMPkLk2YsCeHEEUBYHdZRvG+0yjTQMRVMC8EX8ue94gwXci0Dw4nH/2y/iASBlbtLY9ePPfiQ4WrAGWaFJSIHKtCHbCjcxzoUSkEG4/uSCetV7b7ZHGmAFCBMem/n+5OXAFU3rbAt43ultEp3I84cD0pLOGY2wtAJwvcU/JU/VG/wgFzb9zSz2ari52qqvX1FVzQ2DtNKn3ps0eZ1w6dU+M4w5TG2B0IqpS4Z/F+l9kD2w4k+sBkzcmex0cbB4hLGUt+76iGeQpp7OCsQSKEGT2oWBa9iAcQDEYARLurIBGqbNpt1g+jXpfTWR30ZAcl4pbmF8VjEYq5k6dtVAo5BHpwujxjarLFUB2IQmzMqK1/Shce88KZImeiZhF3bE2jYS9GfniLEIuDKdgg5I6sDwHres4x/lpm4TU1fO4yWc7rR6BHQQ4d64LSU20cFcO+EPy7kOhjvjYeTnsQO154HokNh2+5MAcv+O7PWila+iacIHMHbN2T9CC28tfX+Zy+O0mxWUVGWBAoi7FEyzDdbIj2MBXAnOApeKpEvn7vdhfxGIDfbHtKJYiaKpF105nC3A266awdF+fW5NwO5xdnybfYu1ACZqD5zYhEsFIfzz0LZZPnzKIqsbDJQfjC4TxudRnmEATYnM/seJ4cmF6nXR7fV8zJlxrUsbpdPIxxiFjbIjJdHWaks3vcmMqRaPwVnC/DQFoQ4Qa6MBWlpssaRPUY5tzx3Pxy334FsaZgiE2yl4pnL8xCwyrWfPmDmSHJtoy7DVBbD3nEjrcH4GzuksORigzW2rv4mIJ5Ub2SosWzGv+rIjhytv4yZ49LVRAX+7+iLhubRLD4T433bPdqvfCyQ2dr0I+nF/NDeSedBtB+MWMjwLJoIEtYW+c+axeelI0YFmljyu9tb0nB771SfD8KnxseUhph4iysXLGrwgXTV6dJDz8Qof9Mc1BBKPV+FA50eOLWnG+oGBUmzU/peDdFa1AxsRP001b3PlWAF8m858Z0Eh+UJ7M4Qwe1C9TCRxWEvfPoqXba11GNxp/aE6Rdqi9lxi9JCnsXz+ETfeSfRH0fl5SbDQfe/RUMTIa5Mqm90AIJ9O4/gat+04VL3dLnnnusD+P4cVlRsTCFWTm7obHN4pxU0jW468m/WEn9mNBrjpswXPZm03M6ZO8BZcISJKPhN/ysPJkimfvAf01+Ed6omTiOxPaPvExS57SpIc89RFSmousikSRyYNCpTIc443nK2lgCK++Kuoc46/WPfFigOLbpA2yZ2Z85UQTtmhJmoknb+A2jgKV3kMlPZfK0qyB104YeQ8fet1bxA4Z54oIAai3eUtcM3dSYH0TxYEzuyBem1igYOPsGXv6FJ+XKC5OxV+jPMr0d64Vi/t+cgyQ+6a8BtIPEfbe1Ovk5pwl87HPJhh996Wy4FNXO9AkF0vwVQyaRi9GVBp1cLWmW8DyJSkAWUaIkGc197WuZgnDxJ1TRy0ynoPMKlU4NcFxNOiqq233oYyG4php5a/o3I4g+q3j4dc5F6y9K/4k3Sl8NaYLk/dkBvwkVVeYmz9TOL4qTdbFpnbEk2QgIOnYkBF46LvY0rloKFTUE0+x/VwMwf5/JLfOUhKu/WKMY8egONlGUlIE/9TyI4aDQ5APjfhB+35vRSwps2GxQ2NiJuB5R5N6VkCWHUuepPJobwSmCphfPg8aM2f9rTvcAmVlfy3d7o+t+trj6QTHyNwWVJ7X1/5NX97JPITziv1g34nk8BraHEgOd47G","layer_level":1},{"id":"2375f829-83c2-414f-9042-266cf285716c","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Custom Workflows","description":"custom-workflows","prompt":"Develop detailed content for custom workflow creation. Explain how the service-oriented architecture in the processing workflow allows flexible composition of steps such as correction, segmentation, tracking, and extraction. Document the base Service class and how individual step classes (e.g., SegmentationService) can be selectively invoked outside the standard pipeline. Provide code examples from pipeline.py showing conditional execution and step skipping. Describe how users or developers can create new processing sequences by chaining services programmatically, enabling non-standard analysis paths. Include guidance on maintaining data compatibility between custom step sequences and downstream analysis modules. Address configuration management for custom workflows and how parameters are validated and passed between services. Offer troubleshooting tips for common issues like missing intermediate files or incompatible outputs between steps.","parent_id":"0dd33875-1369-42e6-8e74-9b4136d237e8","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/pipeline.py,pyama-core/src/pyama_core/processing/workflow/services/base.py","gmt_create":"2025-10-03T22:09:21.2805867+02:00","gmt_modified":"2025-10-03T22:29:19.8405329+02:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokUhfeEwOnB4skmRgGybUcQ0JdX+xY/z0dpHRrrPRtCDDmeO9v1sUDb3K6MWOh7n9n9dhaKoTmjyHr4MptlcM79ldRGorFFttH7ncroEFAcf0hk2d80kAycktmADza/xMl0415psTluivm9l6UaLumbFHx9Ti0CsvOlm+avW3S3bbgXMdWkAG8WL3Blrq7Tc5TptPNvi0VD5U4lXm2HvQes77EMqwCc7WFQSp50bkR813ML1WiGCvLX5+RSd/fgHdceuTPf3ZyIs/fLHDqPlmcdG/z2aVmrBhsceqCB2Z6V7HklHbJuIPj79WAwv/Pe+80ry2pCb1vvTia6gIeWMW0qkQjc5UwqNdiuknkFYKlQgBncGzRUsJRUwOlknARbAYbLtne84zJHlt7xKvvA1Bj1QjIvGm8styQ0JUhOI59f3NzIyGWsSwYpD0+WUtzgxbLKB6ci6v0+SA5rI6ozwgmL3sCep356Yxv5O4PIVImIfl7dqKFI6nlckUr5BFLUQgoUf8JMKcrOB3/T2H1BuW2R4r1y10qfD4CzTXLOczAC/68HFx4NnnRJP7z5K20gKT28I460Hj4JIwBaYvqybVgOau8HK4OfZJ72rTIQTL8vA8fLy6GUebysI3CKc/GBzYN0SxFncsyNZc8Z2Nxnnom0bg2CZZOOCxmKduimuXR4RG0mxCmlp7dP5yojC8tODUtx/OKBM7rWRnmtgHtCxL3NFhSdrCVttWcjxEy3XPNZ6E2RPz8J5SnGmhSNjvPESDoCaqXyE/DINxeHBponCGXj4KYJTB/yDZ76Mtucvw3s9UM1js9mMZcY3gU3gTpgKN0HPvZ4yu57RsIURb/sYpe78tPkBV6hIIQ9P2pdiYS1A6x84EQlN0w6Fza8QwUAVZUTFlKrH3yl34DDlJzc5GuGhOF9AToVpNvUHvNIwjUDlqGjUJfW4ZDkMxXuTE6jO4XJKJVNvqVo1jVKFxatvrPK3avt6AXB9RGg26u9nanhiI51d3WW2XhRG/Wwqcr6qVCthuOYuu4dsXlDQArIzP33x+CL/0NvRLlbQU17WVJCW19qDLv2nH1tKK2a2f5uxd+uoGxH+l0hQuyDYiO14As6ObQfiRRTlOZ7d5Qs6X+L4m6HTHd4B4hAvoWMiTNRCpkox2MZxHwr5oyVeKjPrBayZ4oEfwAzrXYrZUgR5ibZBIvKs7NW7GDJukX+R8T5txwx8rohMxevbYXbiTTTk7kFe5go0xJkuaOr1s/RL4Wmsoa38T6i5jZNiiJ0BpRMcAKTEzMge/KgmCjmiSLb2Pv8w6qJOUCg8EpXcKRgWc/s3lrqy3cCrm+tZEfM35JmqGHTnH5R4AvFAnI1xUqgNRxS5QFuMaNh0j+jh7zd26SjM3Lm6z7+H/qCj53xKuF8Dl7GVEFIcHzfyBdlrk6HFlaLXkoM/t1Dq2VbeBISs3Hpyr/jX0sypF5yv7fA8FBhpFKW07MV1JeIx4Ub+ucPAAnJt5tnqXAcfcu9E7BdZoS1oyvfeCcYsy/Miy/wgO3TjIOezIni+in1Y+6x3aqfEz1TqltHtd51mnL+ESqVRuc9+lJoD2hf6UI4WxrGtMZJDnlnvm0vpBbey3GgzrXtaUrNaVcVQGNdIKFRQH307tqtkQTyBAra3iNxAZUBoiHYMSZ8C46glx/nhxPXOyITLRcWA7xHOqGxt4N7b0+B7nhoWDgC6cPH0dEdjFHTAtGTIpbQ==","layer_level":1},{"id":"dfbca4d9-cc99-44b1-aa90-0d441840161a","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"I/O API","description":"api-reference-io","prompt":"Create API documentation for the I/O module in pyama-core. Document the microscopy data loading interface with support for ND2 and other bioimaging formats through bioio. Detail the channel detection and metadata extraction capabilities. Document the CSV readers/writers for processing and analysis data, including schema specifications and data type handling. Document the YAML serializer for results persistence, including the structure of saved results and version compatibility. Include usage examples showing how to load raw microscopy data, read processing results, and export analysis outputs. Address memory management for large datasets and streaming capabilities. Provide code snippets demonstrating custom data import/export scenarios and integration with external data pipelines.","parent_id":"854b94a1-116c-4589-aef1-8ab73760437e","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/io/__init__.py,pyama-core/src/pyama_core/io/microscopy.py,pyama-core/src/pyama_core/io/nikon.py,pyama-core/src/pyama_core/io/processing_csv.py,pyama-core/src/pyama_core/io/analysis_csv.py,pyama-core/src/pyama_core/io/results_yaml.py","gmt_create":"2025-10-03T22:09:29.8034322+02:00","gmt_modified":"2025-10-03T22:29:09.7935703+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg/Vvw1HKbbNq8k/0rWdjKWJpAr7td5V2kaOkM5GwjuaACLPTx3mrYGLWOvcRMnIkuqnV+wRH2Vwl+R2xkMbTsFXRVFfOc83CO5xXGKMyhY7Tj17OQIzCJPTzloMXf50Pec04P1/9NVDACnnt5ZcxgAushWAc8j/ze5mMCjRtWj7y1HX8SSnokjkufS4GXEwnidqeIAsbBPKfqO8nZBmWMPeAYTIy4yUkkJ6t5uBB6YAcLxVPwaZekJfqVpRbPFBLTCL2mypkAjivBfe38zL958DZUlGGrRU0oX2IJ/V/VFkk8faaPpp1zYXPNm1JrxNl8PQ+FBtOXhicqBPM2FTJmvH/hJD+d7c/XGc948jG+1CjSjpmAkJYsIdlKx+Nf+Tpl6yEHWJJIBWbGiWH2YnPnHg5rk6c2GatMN9Yilm2E7UH5OYT+zeIqryLUe/G4iu3GPGHsflMOnkzA/ClQSVV74Uz59CMajbXiR5SHUM1mM/I5Z1h3JVIp+ombOPQWBVn6uY+kmjyst7zRFYOs5bWyw9ngEErSEGHjECvWpCVtC0jtvDqqStcJULdOC2lmL85LUPwcGfVRTRFuxkMUxPX42n75h5VUCZqIQFlwLkX7zXkIQa6ssQkkcjzfTL7UEjORXOIugMThLiygr+7lvmGSRB1d5FceilZtfKCJy4cFqvXbbS0CiHS3B0OKIaQJ2kBbon2S5C+MiC57gJP6RevjYRKGg5U8/BYIIwxPjx/lpmHEhIHwVbwLJjGWAaoxbJiEuLABzci+8Sg9stGkAbmstatDy5O0GXCiCdR02MNhq47KXOIxesSWSx9BAu8bPzX9AoQPXJtZ2l27vxWMOweFrBW8O+AKCDYq8177+THmSxTnhoi3Q5Xk0bfOsM5dQiRz+J1JOp6rGUP4AFRheBzOgisZUOHZ0jEw0ZIXcQmjXDrNDNWWR10qaDRt0kSiJYBqlybaQePFmoH3G/cSRp5NJQB9HPRvpQSROVzDm+rcJ1clxBcD+vXpTbx0ZPyPPKMBF9FPLqzMckMLPQajCwCAAAzM+XFwudMOmOHCqmJlFJ4LhWQnFnien92BHW745xWMEy39ugIMpJepMiANr+4PDno5dHYp9DWdctuNNzcHCZJWkqb6AgZYGlLUrg1msC0zoYDejLN51MZcJGjwCWnaYDiKSTv6gp4c1VCurIUG2Z7S0UdAcPMCoKtf0ljiHIeSLAFr7Wy5SsC3v074nhs4Pvi4EGHQVExDVbDR3UD6RVCtRB3ihw81i0eENPBvMop9lfPwsJtwIrwVfZYHnmzqYLkc7uJUpNtXAWRPpS4MwbExDJuVPEn8+UDUPmkSOOdbdgCLKcfTrj2PcBY3t2EN05SXOsYGVyH/uKsV3poFl9EUqambgGFFCiJVPMp+yQvZ9DrmZU+hjKThHzT1uTJ5yOMeNg0+29ZH3ZnFmNqJkclTKdC7rwl1pomHSG4G8suq5HOrjAIUjX0iBOyvw8lGAy9WGsLauYyHGMWMj/3X9paOpZA4QqoiqUIlYp0iklVtw7ap/ph7AmQBR2U31xzVErpvY8+6/FjX1CcPXY/0Jrjoe+eA8BMrBp4E+IaFU/POE0gtR4JebXzHIKgQrtdoBr2c8+m5hM3Z+g328NtA+/FWLRMuHA2rgTSeG15ylCRVm/5kBhIFYKevwE/jRYTkJzpZEkWdIzZqYm9j71r/eABdNlbfO218+cO1z/LNgf3SeZzA09ORvyQtZxHYHWzxr4=","layer_level":1},{"id":"ff0d8b2d-a3e1-4a69-9d4c-bd7e63d57e0c","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Tracking","description":"tracking","prompt":"Develop detailed content for the Tracking sub-feature focused on cell lineage reconstruction across time points using Intersection-over-Union (IOU) based matching. Explain the algorithm for associating segmented objects between consecutive frames based on spatial overlap and intensity similarity. Document the parameters controlling IOU threshold, maximum displacement, and gap closing capabilities. Include examples of how tracking results are stored in the processing context and used by downstream analysis steps. Address performance considerations such as quadratic complexity of object matching and memory usage for storing trajectories. Provide troubleshooting guidance for tracking errors, including fragmentation, merging, and drift issues, with recommendations for parameter optimization.","parent_id":"5d24c078-02c9-446b-a192-57339f8294d1","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/tracking.py,pyama-core/src/pyama_core/processing/tracking/iou.py","gmt_create":"2025-10-03T22:09:38.1143259+02:00","gmt_modified":"2025-10-03T22:36:01.7779475+02:00","raw_data":"WikiEncrypted:P97OZVbWhePPYzoo65msXyN55DU+dljp6xx1psW//VcCzgmRIEUK1PwQyAHWFtoRDfLxy8x1scIUoYEImaWIeEq156yGmHeGpPxN5axPVN1BPIExUQZLRyEnvlL/Ao8FshlQwqgExcgNwXVGAImwmRvDuugdSap711h8hQra9kCsB+YnLfeVIKWA5PSBdLUTp9Ta2G0PBxmGwdI8Lf4+FheQeahArV2kvAdN9vdyjqvRbrPryTUtIwV8TzwlPdlYiegsNPrtY6fJZLoFf0RReDYM/azvH9/beJPtowiaQdmiGQ58cxfPbyZfIco8Ldz5p9Zm25d4BL4adySmWMK7+Nvt5xYbU2xEL3rzMUtdEXWIcwWg8o6daq5sIlv7bLYeNNzetv4xiH1S3HrRJpSv5TteuOcL35QLaBcK7JXqJ4N64rJCwOtToPEQrmlT5GDQTD8vTm/k6gJC5EM5GVupGjRA8Enm5rvckKQDfweDzhua6i6hFVl4VWkiVQFY1BW/MYXJxON4qRF0tqyFMDRsGfTy16UlwJxMQlFVErj3G/LGWgUlWTm7eALtXPPI9QlkKKIGPVnrUwWzWipaRE7AA3SVLFNeQlT2Tk6HdAvBvpnAIm1Tg5kkjf90z6F7JiOi4wVOqSNCP2Fh9oLuBBuxcno0XxzSfY/JqlE74CUlr+VJuz3ZUAfHkW85V8ys5+gCCi0WdVckMMyk72M1JSXDfbJ+Sio1qaYM/ti/Fni+zRYLbqOJjkdIhbYcoh3HP5rk1otq0G5Tc/G+f9CBpkuvZr+Mtg+LccLSfkX/CZj4eqU8SUnO8Rb92GBMSdm54l5p5yMszpPGNOBU3valkaYmskWFtalsJ7Jn1jZ7JrfHsucLFm5X68u2nZKswjsFdcseQuKx2J14Ym/U66eFltYrFWjVE5VLWQqXQaudU3oZvHvRCV5HS/aufbc4iq02BuXMLzBYnfCqfV1vi/2oaQT8hiX3w1r3dhbuxDGdDaOrHbBycBLXRPWMs8CGxxCtg0GBFID/f3xYvA/ey8Ok/BVBQUv3kOJbqi05c/lv8BJerjbhLr/LMQBt3gMmVmp2dkioPzYRr/g/bw7pEY2QdPjnEbbDejlq0kxRX0NYn/Z6feVseOjQ+gj3MAf8bCFxKtjVUxiKeY/4Hi1/MNfrjsXylURvo+MR5EJjQ3nj8xS841VV3uOe7TRTxmCDoXvgoiDwHX/avJ/FB8XlHS4ckqceKG5FqFCQ3l0iINCK1WkmLKbhJ8wWkPcDoYKw7QZLi7ifSl5rn5bPG8Un3efXH4tq2/J7flNFldjmRvr3GY14xSAa2iAEwi61Fj5vDO6CZWodgjJb32Hb4OSsM7Y4L/s0Wi6n4jj3hPWNPXUQ19uNCaLcNgLV6ax/JGOXAYKX543uf3dNobq5HI7IlN7TXxNIgovGyrExXXP7VTL360SzgpUazha06QOz4Xzc8eiIgoZGdFFEuxjZHIqy0dlNe7hykbYgqDWcNa25+EvSEw/KJXJs7YBpqyhD+f4cREhWwWS3","layer_level":2},{"id":"21dfbfc3-b94c-4f75-93da-a9b6cf5fa876","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Tracking Service","description":"tracking-service","prompt":"Develop detailed content for the Tracking Service implementation. Explain the IOU (Intersection over Union) based cell tracking algorithm used to follow cells across time points. Document how the service uses the iou.py module to compute overlap between segmented regions in consecutive frames. Detail the data structures used to maintain cell lineages and handle division events. Include configuration parameters such as IOU threshold, maximum gap frames, and track filtering criteria. Explain its dependency on successful segmentation and its role in enabling longitudinal analysis. Provide examples showing how tracking results are serialized and used in downstream analysis. Address common tracking issues like cell collisions and temporary disappearances, with solutions and parameter adjustments.","parent_id":"19f04139-24a5-4bdb-bd10-42130b293f6c","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/steps/tracking.py,pyama-core/src/pyama_core/processing/tracking/iou.py","gmt_create":"2025-10-03T22:09:44.0108103+02:00","gmt_modified":"2025-10-03T22:36:12.8532103+02:00","raw_data":"WikiEncrypted:P97OZVbWhePPYzoo65msX4S/SUfQqtxaGJ7q74f+IS6+l3sMufqhkx4dcD/L1sLJ8zNVeExeajUxC7TksCsuqgWWpWeH+aC2qcder96Ao3NFo8bHA1hJ4JrUTux8aEJ2t/SnqBXUOBPZntOcizN1z/+GS8pA8GCuaUOkDa53aEjhrCL7DC6NlOohRFLJxSeRXpyDvVigqrimNreR6Q5MzfJuiN1iuOcC+tkv8+n4LmQVJirXLc6L7EwkUeOcnaVH4ycL9njdq9vulJH61+XbnZrgQu0us5qsUvJddEdcVTfWh4URG5uCLkQBdHF95Fsf2XR5CIYr3cPhqiwfMyaOSP/65jzkygiMTXA18w0o2ScQ+za5iDXP9+E4ySl8tWym4P/Ck9S2LsxhUUZqP39ppRJrlKa1JhIeA8akFFVuPZbPGUClP+mgnVKnJZn+dkR3hEH+dYTb3UsgxDwLCC8BWM/jKfHNqFUXXAKOoCrHXBBEWKD5zQzT8+Yu5gxGtB9dEg36SqrTdwFt4UBIjevKs2zp32aAgUXWZ/BkxtfindxDRvbpcY546thzhJK/Pq91ZBfKrAdrBZLAAlxf1tifpPizFveQCRlBVWT3KLwJyb2fLhOgnZlUPCuhybU2L8H4rGtfq2qRCMCPQZLS8Cx2lsL1R6AxDDbQqRuBGl3tMVxW9FquSSzunzC8khgks4k/iarP93vP8zNg+tTLOPhVcqK9H5dgCd27Wnh1P6eR5RuG3whdnCyoXjELgQ+B4tfD/8HD+3qvi1K3kraeajtkbmMlxF7xjv+FfG4hQgMm3r05GY9OfxwaqHomFkUW444d2iQOMuIMpWzC/ECHiGzChaoKMj1CLtOrIFC+xCSvcxp4ueQNqSYi7O/Wm97yXRnc6TJuR5XiQCNkHVsl2wvBdg69t7dIKdqjwNELXdwF+mLChf50vw/8Cq4M6/ErhI+Ne8hFFuq9L4mt4BdLkDQb5RDqeRWnb2waezAp3j6Ii650PpNxrHc4l7x0TNool9/JAnQLzdKH1Jg1nSYECA6jC8/HW4GgP/ADy1K7YHsprPsOvCkr+0kwx53n26SirmzQUKwCO8+VG94c7qVERBQ7Wns2ZetRmjqQtkJSC71bo4Yno48k3cDxLrh2HzOqHGceBXQjy8LKARmNB1v/CxNfg6eQYotc5Vph0hl+UuCZCQvbDwsENQ1ot78wT3j5lQ6AZoL6ZsdJlJNAJJPUWTcLp/lqSWQjIfO3EcMPTZrvXbRidryaRiZM8Ts+wrqZ8cxrt5Dl3agFYLnu8bG538PvCN+7Xo9ppjzFmbwMA6hoQin4yxf2f4F1WQMI0yee8xmJHX6ecYhTPmL2ceKgEmTSEHo8U5B5H/LAFAb2sf1OyDppa/FDzOOpwx5xGHHkDsQoDwOa2mdx83J83+eARSWzfmdo5v4B7XCnIGdkXXIgyxHqTRKUcegFRBNI3+i6BsU66DIrBWoLXYJk7mRHNIJjBCGfRA4Jfxdj4I3nrBvuVrRvT66Yel8Ue1STCC8crSQFb2k+9hal12ZevLmIImFFAg==","layer_level":2},{"id":"e54a7c3f-b2e3-4064-8e3d-96cbb5000cf5","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Maturation-Blocked Model API","description":"analysis-api-maturation-blocked-model","prompt":"Create API documentation for the MaturationBlockedModel in pyama-core. Describe the mathematical model as a modified maturation process with an inhibition or blocking term, detailing parameters including growth rate, blocking onset, and suppression magnitude. Document the implementation of the differential equation or analytical form used, along with constraints and initial parameter guesses. Specify the fit method interface, expected input format, and full output schema including derived metrics. Provide a practical example using experimental data where maturation is interrupted. Explain how this model differs from the standard maturation model and guidance on selecting appropriate datasets. Include information on convergence diagnostics and performance optimization for this more complex model.","parent_id":"1176009e-a603-409a-8ed0-f6b6a262e450","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/maturation_blocked.py","gmt_create":"2025-10-03T22:09:59.8460123+02:00","gmt_modified":"2025-10-03T22:37:37.6874984+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQLIn7QdwuF39ULXmMp5SZ9izpjQyU1T4KX4Njf4R7JHn4QEPiMBcOjPg4tWQZvlR/KUa/Lx8qqXChnoxwD2x40F9Y7DZjX9IGnr4R6t2vKBz5FU5Jiy6a8MPrxpp2IyUsLucaiNbWpdrtN/Dop/6D4jy+KrXEAA9OukNGB7LQMzh1cy8tbkmMwdx0ufUIh7Xxd5RE63RV7EZhLTxwlPSfswRyj3fg50OGgKGP/PjfGXlgb4570q+ejjrJva1EuiCHmGdZYngUcTyiVmge1MttqZz93XgWHIfG2+FukT4XN+YJowlq/har7vJ0lxNfjXw3ZjEPhs1GRIvVXv3732cN5DfHBirC6wgKJlwVKyJOgXZ0pWS1yr79z3SzYDzTpyj6tRBQBUH5fpZKr+FFl3bSe6f/FFfevUQEHZ62UjJMK0cja2MWiODOwSE9s6i4lZk61+5hgEMwRVTVrNjtc83VL0CXehJ+VCmiOhrEhODCsxCB+FzD4+FNk1o0nu2mYSVv/nuk3phlVKqNUKp+EgdmJjGAhAMs0MM2nLGOXFLc170Ult98HgeSIbziTdP51WlF0rooj5tmGMSKRKSOkTuFI/pab9vp9epWlyFFu05cYM4MMbHBNEt+Kx5vUYMD//VXQPlBWAUIenHKdvKAgKkDj0L9Rr3iNRLgtQugKC75FnCpRv78zF6TduJG/4IDobZRq8/fhz15ZkRgl4bdNz5cgALVK2p/2m+4jU4NEH9/jDf9dUZ1hBUMYBwZbz6ubT93iu7VLvSw/OrT2dSIXP2MV9o0w0xiR8EejHUsChl3N20jE3bZJ+oOUyu3Ghi5fzNLxmo23adtYksNcG7izm5XPP/Kv+yYka0ddOM1ksEvnm0alm4Bus4Op6J45cKhY3sDLlief3Ra8CWPjpQWCV97O8E5JD5EmETE5KgcaxrzYjBqf0cp+ZTqIwTpkEPjrCL71brEMBP2jgxYincjfl38n76kqSKVImFt7Hcva6Zoj5i2/bYez1Tj8tC1cVmJ3K9nJTxeqiVK9YWgMH+tVB9u7/iynaQUSaF57AWQK/DHCyMoYPznbulK+tcQvm6/dAZzphHvpluAeLr7ojr/2GA+hNZA+fnnA6LCo1jRxk5yWMug8s2BBupn+UP42g7T61bZrvjTZZA1OAX+8x8Y2WYyILMimwHYpcGVdwJy5f8GH+HxIBYs6qadiP+S6Htsnpgyak97/JMRiLe9UlRTlwfke/RQQDoAtaytnTM9n+KszcyGlaM4CjMe1YpJE1J2rZnrmIm/Jmo2ezJJU64LHARF6Jmf2TMQ7hUUcEb9/JGxMWV38hEsGKDQJlNJvfMxaTbOQhrxBOqOJwpiWBpQjs0RpkNmoYNlx+2i8C3Ema12k2icNF2K2SqZyYaPQ7gGHes2mz408UxPHAWENJydaO+ODXrXNWzMDwRBXrI7i4P5YN52K9snWh7/j8Mb6s1i/YDEc3pSyQSeYytcqWi2cLnnME=","layer_level":2},{"id":"28147b1d-4322-47e4-b649-f63755579206","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Tracking Service","description":"api-reference-processing-tracking","prompt":"Create comprehensive API documentation for the TrackingService and its IOU (Intersection over Union) based tracking algorithm. Document the service interface, configuration options (such as iou_threshold and gap_closing), and temporal linking logic. Explain how object identities are maintained across frames using overlap metrics. Include practical examples demonstrating tracking configuration for different cell migration behaviors. Address edge cases like cell division, merging, and track fragmentation. Provide performance considerations for large datasets and high frame rates. Document the data structures used for track representation and how they integrate with downstream analysis. Explain how to extend the base tracker with alternative algorithms while maintaining compatibility with the processing pipeline.","parent_id":"63147ce0-0997-492a-97cf-4a038ad7300d","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/tracking.py,pyama-core/src/pyama_core/processing/tracking/iou.py","gmt_create":"2025-10-03T22:10:00.3817718+02:00","gmt_modified":"2025-10-03T22:37:40.5891607+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0FX6PpUJ/WvHCUWZC/NaYOODKC1cn0Th0SEiZRg35yRXd7dSbetGoWPYtesgML36WtBGC/CkevEO63TB72hpZJIkok0dp+Np+dyrxpjPAGsPojwChrsoU/+kpGajbqFf3fR6JxV7ESaFLx1RJunaLQ1dcV9DavYsGZpK2woxEgwEJTnbYDQ7jNnrkKmI+TpFTuHVcaq+c/L/mp3Q4wzTDBTDJkxMkpFZOIIru3krjDtH3OsyjIBtkrT9MV7W5di8rlhL4TUcb6oP/Daqr77EVhMJVNAMzSFs0v/KTEIyjhzrEqjpWI+N5qVX2yH6NB996GGYjdrroUp9ifJrv5soeY9iuJJu9yVhyW/vP+c8eu47peBS+qDdOT0vDHDX4cEwFfnDnRkgHsKtvsczEK7criX8sCAy8vkQZ/gzOfAtPEOR+WQ48ru7ezwoP/fgMi/yMlfzgyIdGHHHa6vJkpHmt3asQQej9iM2QK2GOkP2hBTlGDEHO1J2bwPXb1I3YclXE22aMqPHa/LCzF9+1sN4+bgWCzs3d2I9C64eyIzNJHxTAPPwqHMZtgJOG1X6/A9w+JJydSfq2+Fm6+mbsKIXxgjb81fRfwZZfV5AmH5cMPIWxKBDGtQxgx9mKLaGOsosTyMg6kRQrmwIB+5ycrp6to+6ZnAl4b8FudmbUjE1KK70Js7qYP1Fx5UEGYBfgcvX4U/azacqZd6mnDg8kqrS8/fCHZq0Qky/FoV/g/Tfga9S6WhZRfbGTIOkTlFiqFZoNlcsMsqEjLi8CEnCC9QuahMlMQ9uZ2GR07mplPE02O2FPyBkv9jebJ6GIHa0zrqgu9JoX9YkQYBQ5Wpw/GWAZtwTjsqhmcVJM1M8gIq+2OvchTXl5s7uTD6pmWnhDDOZ8Fi97Ew90g71dFOiotWXZeu/Ied2A/cVp6jvA51rfXtMpIGVZTfR+Vx5txdNtUxvpatMpVVG99kPL9X90exbui3lKrVCtxaYNOF8SJiHKt8EEDjVrWXbUUlaSDgesnki0ZywR5auWBzj+SruPa2mSThdbTPpDCy7FCyitp1gZt08yIitxJ5dfBt6QzYp0UieQlGgc8AbQSgOBSn4KTmK+ZHGyC+OGrWwesyMD5Dr9ZS2NWG06zhCE2t+n9aTwWnxYEYufT291YnLhhxptOoPZB3Mg+uza8ASVvR+9xlhA7kegAGTz/napyB7to+GXdx+mpenJ3V66gEuv2l9bVwx8fHIO8vmYMQFXPRVvmpf89YnlAXWmcqsl7UM8mIKxsT4aUvWXeweZ4QS1vBrPW3nm64q+6U+vaIPaNG4DCFEO7gNfO9wpAf8bRuAVS9jnaeD0En+mD7KWlb40a6wQ0dGBCi7cfB0ptmxRCH1eKna88+MTKe4VbQNAf07Vcj2ZIL8M0DGmSfFRylyOBcHfgC0Aw6kDOpM9/90M0e2DV1Gd5lr2hCknTRC7hCoka6v0oSPzSdTWFdkoo6boZfKqhtWfV3Y56eiPiXlu+8b8kDPN6H2JPBVY1r9mXvzBsqnJIG/6l6UGcazBGPter0NbTeyoUKKeP2J6gLZvjZEqhx4FCN","layer_level":2},{"id":"4ace7ee2-64d8-412b-8dbf-cfca5b52ad90","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Analysis CSV I/O","description":"io-csv-analysis","prompt":"Create comprehensive API documentation for the analysis CSV module. Detail the interface for importing and exporting analysis datasets, including fitted parameters, model outputs, and statistical summaries. Document the CSV schema used for analysis results, including headers, data formatting conventions, and units of measurement. Explain how this module enables interoperability with external statistical tools and data visualization software. Provide usage examples demonstrating batch import of experimental data, export of fitting results, and integration with pandas DataFrames. Include guidance on handling version compatibility between different analysis result formats and strategies for extending the CSV schema for custom analysis workflows.","parent_id":"dfbca4d9-cc99-44b1-aa90-0d441840161a","order":2,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/io/analysis_csv.py","gmt_create":"2025-10-03T22:10:03.1974641+02:00","gmt_modified":"2025-10-03T22:37:37.8925803+02:00","raw_data":"WikiEncrypted:P8CuBfZUIZRDFW/Lsksc1fKdCiAGimDnYpJvWHEpGFjhMeyVNxGi9CZTy0pSKhKP+BZIlTIBC0GUlGA4U1+mZvpfGlsFx8H70WwBv6Axu5NAs3mhbHjfKnVaHmvSVI7XN5wVCCFFjHSTOjmYy41XsCCn/oNVMopYRtGtwZWwHFjBG3QJvU5RV4RSpfoSFDFOHCDp9w+j2yu3Z0t1ZNk3LfbMBqEz1ywtzwF0fwzS4wJjG8q4gvDZ9rW9gYddd6Mlm03tr2y0FURWtX3yY3L2L7XT0o0bdiDoYwWhoNsn9D9qWDx1HdKeIWLNOl1rdJq5kxN53CUBiy9HJrMUhLmGV01BVAG3dCtvpi0mQ+ab2FO50alBMG3pkrBlj4x0AKfrrKWKMDtUK9ktG1/8s54BUIePbvAeEwT+wJCeD/5DdvVCeKmREnNeYowHQQSY5Q6vi4cNkR+SjmMlxHAJnnqQCDiVRFHcl3Qg8++7HV6lofbjix1J2E627yUIkwiZeJNTlMOMv3yYmnb4deRSQ0zrwQ6J+21Qk2qH+O/c6n1vg2eFqqLnNVSIzfwUjJa1oiNgd0NtHViOzPC4IkA6+yIKp0hpaxeCpSKxu1fvTSIneY6F47Jqwt7EynhJ3//Wj0kbZ8EQ28yiGE475Mx0V4Ccg9o8bhGQLzm6cfM/e5UB3/qYQXU+Y1TOLFsIiHb/H6PWRq+xqdhlOtdWlWwnt592pHlx4ZCh1y8fei+1XsXEvZABJRgw+YoCjSGRKrJZX3stxWQRoFy9ACA57Cup30MiOBtiufvkGBGBzTi2KpL+vqy2AQzkN+BAEuEt4KanZKrwi+R2B2+DORP3kMDAxBs6foI16KZKEiup2gfmtW8EtZ/I4+oHLqs6il9NeUeNcLLH9l/eyuaM/HURq6+30jMLGH7uv2Gt+z7dDZlcV8zLuULNnARlr1tzB2gdHVAeo0jTccw82RMua8fQ3WsVpqc9Mc9Rk78N2lEjvvRIzn5gE5TW9vLCEFVHxyGboc0Akfzahg0rOsrzpmAoz0H2noTlvDUlVkdHjUoKyfN9gbPmZ3fvUrYMXkR1IhVVqKU3l+DRicgxKYIVV7aCb4f3Q11juCrERjvVif0OXz2FuWp3gY23dr/EXAE5ElxHn59AhC4g6Ulp8is5wItaKX9MbT64D9LLkqv3Ra07ZxIi4Pyr7k0ZKw8fBgC9ZQfgtI84NRhnulMbZxI+PKtuMkWAIYDSiojFLN7LDWlxIrHtGZSCMqp9CsoODlnluW5s9EJYhQqn03hLM6VNj/d3DO3oqs5/isZbtlYw00eIeUyBFeaaydF0YsqjtOsuVuaRKZjbOPksdGEpsIT1lCcYVswyaafrzIR7g/5icfzpbCU4rTg7CPw=","layer_level":2},{"id":"e51c01ad-283a-4d22-b505-d0a31233178b","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Processing Module","description":"processing-module","prompt":"Create comprehensive content for the Processing Module section focused on data ingestion, preprocessing, and workflow execution. Explain the complete pipeline from raw microscopy data (ND2/CZI) to processed results. Detail the workflow configuration interface including channel selection, FOV range specification, and parameter tuning. Describe the execution model with background workers and progress tracking. Document the individual processing steps: background correction (tile interpolation), segmentation (LOG-STD), tracking (IOU-based), and feature extraction (trace and feature modules). Explain results merging and output formats (YAML, CSV, NPY). Include practical examples of processing multi-channel time-series data. Address performance considerations such as batch size, worker count, and memory usage. Provide troubleshooting guidance for common processing failures. Link to core pipeline architecture and individual service documentation.","order":3,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/processing/page.py,pyama-qt/src/pyama_qt/processing/controller.py,pyama-core/src/pyama_core/processing/workflow/pipeline.py","gmt_create":"2025-10-03T22:07:56.1224896+02:00","gmt_modified":"2025-10-03T22:13:09.0525039+02:00","raw_data":"WikiEncrypted:6B00hcaq6PQt9xxRHliSTqWsHpU88QLw1QbO4KbBYpldsrrF93Dg2JIQMuSF/sRcIRCoBmHXDrA5jjomTJpICgSzRQ7fFVHcxBeY9buTC1MGc2iRujGaWIZU1hAZavfRuja3HwjDgT23Ny5C/kXjx5DgPUKdebhLJXrkxM4QXqmPZ3UzN5IsRE0WZGty2AlakfqYHZ8r17NAanERqhIzUwg+OxPGlnRDTdTxZ3Gga//VAtT7LYONIp5A0vUoKfiwUo9a9vo+Nk7kpZZGRq1LyX+i1mFwkGft2Odje0Cc/3XjFRfCdLmAgwDElR8jmmeSoQ/T8+vPIk1fSMthIIYEOsvyTRp6psVanS1jHeVypclv12a0D10zgZKZcA5+FZi9BKcErql3Vih34iMZ1FZtXfT1pXv5wnkmr/rMLYnwNYQclBvlfQE0qsPAvU3tptW2HLxLbwjPOvuispl78dJXkMGQvhNzXNOqY8732ZUiUaoPZGc7CB6a+MXydEU/5Zi1CCRCDCiOhfYYJAbwfXrs7PPHphb779QxmofUVpWazSedCQwnZpJ4sNvIBlqV+9fBNFA5HvZbPxLAs/CIxDLNEw+jG7SJ9QEq/DKlgx8WcaCg+RV9tj6985cy0pB58l9il5eMBgdGOS/uxG7VnqTE/S0X9abJy8vqRSMFX+4lWf/LxTtLSHViNJ6OMzipcDA8uCRHcl8deD1y+Z2gDbMW0bWFxlDq6+EzbfmZpcwozgDdsndME5D6SUh1tgGhEuS+4g4wwITOIYEhI9LzUp/K8jYCPeaFSDU0nFvc3wbSuBUT6kCCy7d9YsZPM8luxZEpDdsf6Opm6X4z4NxU8M9ryq1b7jHDn2q41itvnrPhEI9osh5ngHZs9AA5WPksCp+FbXFGnBK1wsTptq2O9ksV8x9hZdomFSeDVixRSv7KYEXVJQJwV5I7aon7sF+1OTZSvJz6ddQsUCfOJgpMLaLXepdizH5NgtI8H0d7lQ3Hebo/d3T/9U354xf/8jBVIUOEAJfLTtpZT/PnC4laywvOn8YBavzTdbqN7w80SWuSgC4YvV9lBYyadTKVLMqaMBSy4HKSzWUftay40IO2gPwAur1pMueeJ1RlxOlZ79t6sYN4Tiw3Ohtb/36c9ZsMRHvQYXi+s6rMhKImDRrPG+AcDtkuCBWPtze7MoCKZPppCa+Lyg5uKc/Y/OUXhIL57hGn5Zk4zjFMB254CnFJC9ioWPfuCX2vbnDxTqd2RwzPs4MFtvByUIB/Vb92YUxokvvEzMMC05PsOHFbFZcWZ6CYNhn3rbojvTbEwxB3BvO6EeWZ7VXZRiE2FLH1o2TtP4pNBuRNUIefQXv/uMKuPJy9KNZPH0jZMCZ/4AkE8I92EfMUiH7JAwvVC3s6nk+ZtLmT2jrloVlnWAH/DVHpCjElvHAikTN0Jm8dGH7c3VYjex6VblPhfiuL3L279mGUvc9NdFFXWIGAgg3XjIOcB2Ok8FtKKaAHE4i3wv8VTDf1XrzFaGFqDgHO1Lq8K2I6EIfrT8eQT7dyUuSzpF+VwPl/4UvLXd0thxfjXM+YWLUMTwun9keBzsyik9R0kXM5jF5Ncg+4naPhJYVn9wPg11sZbZ14CG6rH3wajW3QrRZRrFnMCM1uomIx+rYF5CqsUPKn8lT8VsqBzfPha/67iJvV1kQBR3za84BwyycNhEbhs+36B1PDeQKk+QcSAmh6A8u8hGOZNQiUzaSVWjH21bWT5Gn/wTOv5UNjvIQvgyn1i/QDP6mALOLm0QMPx37o09kA0nUpK+mzZalhu+5O6nAiFRy/GtyxD9jJapLmEDRkI/NBhHY+u2rDh1ZHWQ4ZbSXt3lgLJ79xRlp05baaPEB+cO1jASakK4nneowEpXq8Qew="},{"id":"5454ec2e-8bd8-4670-84d4-ad281b3b5522","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Results Merging","description":"results-merging","prompt":"Develop detailed content for the Results Merging sub-feature focused on aggregating per-FOV outputs into consolidated datasets. Explain how processed results (YAML, CSV, NPY) are collected and combined across multiple fields of view. Document the role of ResultsPathsPerFOV in tracking individual outputs. Describe the merging logic for different data types and formats. Include examples of merged output structures used by downstream analysis and visualization modules. Address common issues such as missing FOVs, inconsistent data shapes, and file locking during merge operations. Provide performance tips for handling large-scale merges efficiently.","parent_id":"e51c01ad-283a-4d22-b505-d0a31233178b","order":3,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/processing/page.py,pyama-qt/src/pyama_qt/processing/controller.py,pyama-core/src/pyama_core/io/processing_csv.py","gmt_create":"2025-10-03T22:08:57.1271034+02:00","gmt_modified":"2025-10-03T22:29:33.1808028+02:00","raw_data":"WikiEncrypted:Epdytsif0BKqv6RSnKUYhy9ZzUA03pe0Hrvag27nSsRWCdw9xTJzDmD4COefcSYq7xp+1h2C8yC1n9H2Uzw8q2/XMf7ibMLTIsNK+v94oEVk/qxvSHKnQ02nm9eRynI4EyBCuLkgejXWoKgq7nQpA3LidjfzScfFb9dgr3b0LJBO49C9m8tc3pxiSyCde09wrkZkPmUJTT6iUt4Jsi7AqfMr57GTvdjHZD6/uMRPDFnxWdSRBh9zWkbctTllju+1e1bZqBOw5PXnWXtWtWESYRuFfGqleftTKh3iGxHvk0UhfpZDWiIvlmjdtHjPs0v/hAJf6CLoK0DirgHUi3CD7F2dG+/kJDr5B5e2C6EpUaez4Kg7IYaYHQ2UVdXNlO4X+v3alnsq30k2f2ny4txVEVpeAV66jtaNUnh8/CXohq/oA+K2Uwyuw5Adjd8NOhHoSFzuNNMVjn0N0xbIqQmWikT/YoNRvhcqZ8Q7XGGvStIu1JOJZZQDHoK3RCCf1Dn6d7zfEYnHb4m2Ob7nD0VZiYcpmp1McB1obxnDWFeDggf3HWQgqEi4hrRGsOG/o1XdgovAUMSrO3G8+RU/ylEt6Ts4Nai0ODiIDPPbBF0+G/CUoZdVpM9106L6R/e1PGAfQhJCpjCfL2vyEkIkLgHDFI0CxHcOXieU1U/3d9aCWFDo/O5CeX4FhIBGEQsCjrkopNzJd8vk3qCE4IbEZJGYsN9DyLh/S+adIjTWt/NuG5BncTE9i9mx+e1F72R4dsi5zOsa9Ah074xDygelAnwDbsf1Qx5X9/9IWCUgRHG1BQWed1yqSwfeCwQn44e6OIMqpgy6ApR75EDJS5rzt35GY0v5+5QHIJYqb+LaMir2swWhsv3N0/XynD46AXXlXvoxiakc4FZdAcdCeRqljqpaNBayvuZn1+xNrrz/Y4alexpt892VR02eLRemGzWFGvXfoBhdnZeluYDi8ZT752EhU2T98kXJzE987uHTX/ZtCXkwCf7741jSlYYeZzbd4CQ+MhE/+rVJ/7TM+NqoYlcPQLih4CoBAwlMEsqqJm60TsD2BNU5JirS6rH9JgEehyUpnz2fQ9hRAQvUlV1T7G/z8qtDUvUYo4aT7toPXnCLL0COszwegPEuEG+Dzxd9w2pQmM+PXmDi3uFO6Owvqk2pdxbkT4KaspQ15zE30uVjYRbMqeg1deJkJJdpGv+kK+ooRqL1ad1YbDgfOnMYZZ01EoYT0MY5soXQpV200e/k9zoGnzBSS4/qwE7lDt2XLWbOkvMTcVtSMxT79Q9I5kNfDrlk51Vzr+zGjorN3dJTMKzn9sIF3yiZnQ4blkjnFa5NQwBEJ/NfubT98OpLIJQj7Q==","layer_level":1},{"id":"cb515252-7491-41a5-beca-c8078e31b902","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Synchronized Selection","description":"synchronized-selection","prompt":"Develop detailed content for the Synchronized Selection sub-feature focused on maintaining consistent state across multiple visualization panels. Explain how selecting a field of view in the project panel automatically updates the image and trace views. Describe the propagation of cell selection from the image view to highlight corresponding traces, and vice versa. Document the role of the VisualizationController as the central coordinator using Qt signals/slots for inter-component communication. Include examples demonstrating the workflow of exploring a dataset by navigating through FOVs, selecting cells of interest, and analyzing their temporal behavior. Address potential race conditions or update conflicts in the synchronization system and how they are resolved. Provide debugging tips for developers extending the synchronization logic with new panel types.","parent_id":"88a939bf-eb4a-4be8-9c88-a3d1ca9f0754","order":3,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/visualization/controller.py,pyama-qt/src/pyama_qt/visualization/models.py,pyama-qt/src/pyama_qt/visualization/panels/image_panel.py,pyama-qt/src/pyama_qt/visualization/panels/trace_panel.py","gmt_create":"2025-10-03T22:08:57.330424+02:00","gmt_modified":"2025-10-03T22:30:32.7065356+02:00","raw_data":"WikiEncrypted:GmR04gMyYLtGTLY5rEmAwgIQDOeASBaOFZcSZqGOg012eYpGOeJHukQi/5x6JagVeyzoYqgtUhyyCFZUb2jrR6Rub/GQ7rk95jIZcdyAO/3zqtgijN6x7mScsQqEXT34GT/Jrca7pEEd830R27xAWLyH0QQYax2TrREfZ8yLuH0gAx0GxvwqYFEJ+7aXV4RN1Z2FBrQUTImcsLIgAdq/V/wdjmw9GSC4LWButEYATqr/jy02CfAk4OIorKBtHt1L0Qi3HPohXTVZWjGCXnKtw8s/gLIiAEQhGE7F8QgJ48i+20OcqPfWQYs3BYIFw1lgKuh2VCc3Hy0pQWrezKgKa4024l0ZK5TznCrmw3jFDdDTdXHq6xHrCqcKgN4NKyOHPY0wliVqTd0YoeYqPv0RH9z4oY42cZeQZvjCWvr+Jnr3DO86h/4g7rTtdw4yI9rhcDMCLewdqtDX/B59bHGqN3yCdpYI37bhzyUN5gq6S6tru7MWnFcMi1vOP89hUSa0GUviyxS29gWbIKDQUWP6E1JS/Onjmzixt89qQAL69z9qYLA+6C48EnksYa4FKbGwaYzzbynX+I/DlXCI9Ynn05kCU85VOotOK8KboUXFFTwxWZG8zWNpOv/rt8OH5GeWJwN/N1kNh0VzHShSfROQ7qC8YIhFuErQzdpaUoy4kd4BcZxxUFPuzmTAKhMlWYgZOsl7JujasjjBXpeESSPObxyNP8N5d8G4ug6fZGpsWqB0L+tWb1mzZX5GGb/gIhda0C3lG9U4aWNQj4YnvScmDlYqOwar/uLRnWBFA8eK0S8pkPgo+21s07CSX+k6dDq+feypPEurlSB+Hmq8M5n30e89JgyEC55OjJrmbZBLuTfusPDnxWVWftiFYfeX7nbtBaZQ6X/ouVrNXa5c5a5uJ/iQo+VZ389+YBUblXZjkZLNVDaa8cpvh5pOxYGQy9YYhym6vnd+ULma1jmGOeQ9kH50HvLDjVcZAHlhU12KGPMGktyxBzZ0m8H7UfBRrzAFpXGwp8Juy/qJ+PxTl7sRlqpW16BJZ9wAPRTeS6MrVXyF94FMFHjvov6rntm09kZr9nXKYiXIoeDuP7+Y2yc+SgALGWEu0IuJQ2xcQ43S+gFka0wQ2bE5oFpGkycrGtn3T7M0hZ5FqdrCVWg7oueBflDsmYHXJ6TAfXmK4LII53uOV5XBcr5ALtZfwogQEv4t3NQLivKvpS2+lFSD0Nr4cX2qlE0AAm9OXFZTO3uH/6Zo2aONavVkBTonJsKhy1RKGkpMF6B94XmHu4y02UVPqWRr+1AN8EKUQD0wlEeoF0FX35JX+f6sK10ZnPqC4pCOQbyD+WnB/6L2iyL5GZTgeUU1pNYtJQRKd9LiUC1XXurecVtwZ9DXu1ZqXlkxIrnSQvw6fsw1GUQNubpb40mN5Ryh8hqngbGZnPYr/YbBLJOkUx+G9aFt33MwtdbEg3HDdGk7ni0aW6m+B9uRJcEqVGsFyWanqTIbETNPmiOO0SrBRz2yDyfqskew+2FCYqI/JLspebVhruYs/cI0CYBSV7qYAmDv15FtnH2t8woLT3jnMhGGYMuxBOJgFKHBz6Lt7Msa7bgYbuhzMzgZXfMsPk0a5DmemlvE9jbEqpgCzndtbEeeOEEoYd/gwDlJ2CbUqYd0l0SSpX4YnMehd7cXXKGHRCtXbbhmyqOBNrzeqCuVLxb28fnjyclcsEYiFCKV67PJZTqOiTkk6HnYigycYxzncFR6ObEvFitP6xL+Hc8aEraohuOff8KiACYOXAmg","layer_level":1},{"id":"95174544-7040-4817-9db5-11aca4a670ae","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Batch Fitting","description":"analysis-batch-fitting","prompt":"Develop detailed content for the batch fitting sub-feature of the Analysis Module. Thoroughly explain how the system enables fitting models across multiple fields of view and experimental conditions in an automated fashion. Document the workflow from selecting multiple datasets to launching parallel fitting jobs and aggregating results. Include concrete examples from the codebase showing how the controller manages batch operations and error recovery. Explain the data flow from UI selection to core processing and results collection. Address common issues such as partial failures in batch runs and memory management during large-scale fitting. Provide guidance on optimizing batch processing performance and interpreting aggregated results. Make content accessible to beginners while providing sufficient technical depth for experienced developers.","parent_id":"971318b3-b951-4b95-914e-55ee91bb0a8b","order":3,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/analysis/controller.py,pyama-qt/src/pyama_qt/analysis/page.py,pyama-core/src/pyama_core/analysis/fitting.py","gmt_create":"2025-10-03T22:09:01.8191581+02:00","gmt_modified":"2025-10-03T22:30:43.5016547+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQIWTI91VCEh6PkQDCefCzM3w3/5kyOBwm7QcX9S3d650WLxA3DLE6wKSEomNuX5zojwgTGmRjRWaSkYFAZLcl75NQDhfzEcWgKS8iYgh/HAq2dV9S/bSCyUa7rgrcWn0qmbY8fOHfIjNLfZkJyhw48+k0eC1pgyRez7NDfzpVP12BEzVoN3DWmjCR+5Tae5PJTuP9CURKxRGfLXOvZGi96zG7l/erRREDhGJqh4Rhf74j4aGqmH9YQpwIv7MUm9xO2rWNFYLblR9iAfZ8u2A0lNWq5Qm6MendmpkRDRS1KbHnnQxtumlX7N+UEKQogosf+rLeMzR3yLiPyE998SX7ZrLX0085DbvzzbQ68dMVdrcW/iIYMAnO/sX7nQ88j/zCxfMD41DDRcEtoJXDXG2hfIk9+Et1JRgaqXM5p8QR1BSGIWxy3euO1wgMODSdp+qKTm92VC7ZrlHKiYQXcnPH8NviODQa3E5Bh6v0hDBbkBYCbQr6+IYwQ7tU+WaZThpAaEcLg/41V9AtZnlxt3sBvVk/PXpAy6U6CGki3zHUP1uD46uOsjncSS6sdlas8jyPQctChuu+Q7hXhe0iwkt7OswOK9+ru2PUKvXkkLqGARtL3nhGieKazb2RQly5ywiAnDnp0Gj6lCYkhmPoE3vRtYtnv6AjoUWcZS/RMF4Hg54YAKx4nqbqE9Ys1rx5Vh6n/SAvsQ/z12XerwhXprecYDV4wF1FQ/fILYmVpZS9iKQTFOV0jJW/tIjAsvVwYdECFktGaXSswle0gQMGN/XbJwveS2ia1P9SqMFgpwY+rJrKHomF3JxU5Mj48r1Pa3GmT08iJ6uXp17re4dbaVrf8YDfaoAvt8mm8wHrcQPk3jwASpbjPDaj4Cn+IfpH6XMmPtvRU27852uoTscAyijHRZPmhrCQAVjqc4fx5lBdK3RfYWYCUzpCQJVMxddvZXHjeUvCMJZhUfFELFYnS5DSF9zIDz0XaqYMg70gKfC8ykRt7/1v8x0BX2s+5O9qHm7zpzd1OjFqPY17ZmiMWHy1L4aXSJvBBvnq78pRhIFyg8Rjw+0KgWO4Aad+gOw+AH1CgRXBgO3AtmfalfL2Xh1RtyWnyUMKvUhrdgaUWT0HONmBb3zibrTvWCXXVhV8VKQ/8gOtYcqXyK2qsoy5Quys6cN6Rc79lOzqkTURPA0grBwGRFigGnVT3WaSugAPen3gWiL0d6T/XaH5JYUR+CMdzWvx/J7NBqMRNGBGUVMJDgmg07DNnT0SwikVTWrXdidLYj5G7qPVRglXNSS+4FjFmFzli9qFIE1UkrialjM3etdUuZfhgIqMxY5eAHYeuNXpzoxmY07s5nqqsm+NntqkNUnwVztRo7ID1xfeaGIWuHsJFGsnxPEq18+is4QPJRC+1oIAuIMuFs5EhlRide5pxwusTTz2F8buJESTOjQqYbhMkNe+LuOEv0+7NSLg6kr/FknUBBnj35vjfzhU8NJdGhH5/xFzHe1wm6+f9BacybMpMDeRZ8jsNHVK71M9hiZZ5IGhMHcg7u51BkrJTqTIH75I2tWQ65M6JT9LgOE7rS1Fmb35cPoBptE2k1EQfUrBmtBFuDcsO6u33FKqkdNeMA=","layer_level":1},{"id":"0962ee53-e1d4-4611-baaa-7c67f36cf5fa","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Feature Extraction","description":"feature-extraction","prompt":"Develop detailed content for the Feature Extraction sub-feature focused on quantifying cellular properties over time. Explain the extraction of intensity-based features from fluorescence channels and morphological features from segmentation masks. Document the parameters controlling channel selection, feature types (mean intensity, area, eccentricity, etc.), and temporal alignment. Include examples of how extracted features are organized in trace files and used by downstream analysis modules. Address performance considerations such as I/O bottlenecks when writing large trace files and memory usage for storing time-series data. Provide troubleshooting guidance for extraction failures, including handling of missing data, channel misalignment, and data type conversion issues.","parent_id":"5d24c078-02c9-446b-a192-57339f8294d1","order":3,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/extraction.py,pyama-core/src/pyama_core/processing/extraction/feature.py,pyama-core/src/pyama_core/processing/extraction/trace.py","gmt_create":"2025-10-03T22:09:38.1174704+02:00","gmt_modified":"2025-10-03T22:38:57.395194+02:00","raw_data":"WikiEncrypted:5RlNBsIi2/3o8ATlHuzaYKw+veGLk6je+zzy8B4d8Z+mfWZ5c62Omrb232lY/UGsrRAWL25B0y1dGf2h2URsUa2s01JecJDHDQ7ny+t1kWl48QJsHS/exkxwmo5lwHwSse6Tn3iwQGkhABKmXOfzp4z2FF2+igHlDlop+V1qatTEzc1xPqNW/C21lABnhhI04nP3bC3jfioIj3MGQBBuwfbGjhaePfnZ8JSaWgzh7o8rRrYdZ3qq2Bwtvuh8oEHQIj4N+UoVzGHd8slRZykm5djKevb2FpX+j93CHyb2GPigX5Ht33wrmW86V3U1UrMsUXREwYoLwFh8+jT82U8X+4uCwp6EuhrBbl+FZkW0/ksaWtLPq8SfcaMgLCQFKDZ/Ab+lJdvxE4kc9Me4funKmocyz0dDpzjC69/NkIdKubXzcMulk+hRltMYnyK1GAVCV0NlyhDd2B+KxIeWgd6s7BHLO5r3qwghL7fGV0j9rEMVIcq7QixWxkX6BiuVPFQ+UtVj3OxFozRem5r5Y/viJKpPwZZZJUG4fbvzq5BcN/VE7orG+8XkrRn8SECZgXlZJ20ucaN9O0h0Ma9CJZtyzxAlduIaIiw1Jh4Al2DiqSxbAzSMgBO0eHVmK4oj+BrzfbYGHYwI2QbQck+lC7/rRsoHuAtX5B8furS3IgO+4xvQZuCa3MqB3MhjMQZ4Y/C2NDsM3T403PD1pfw/C2WExqW84ZKbm4n174jSxz4sWk7/dHKk4/tHATzlbOXFeb7ZD6jM3SjyGBJrdJRLr8QnRpq77hW9xfHrKpkCeptMTT3GLGpABx6oA5DQ0pazLBLjvYMlA6kk3uuCCCeoZqJk1jVowGQliGQ7R9uCZNz9T/1aOaBdkVmUo211tzEzZKZPFcf3oJD/aSdbZjTNOAgkDXgGJJnpAxMaC1u9KgknWQCW6f5ESM704Ju4wRLIWm9pF7eVDUxT1cCPEab+8NB9EvXZa9CdsbyXczyz5wTkvgIawmkJJB3kI8soR66bXAscyHtaVeHSDBjvDfzIuo4nBvTLqjO58GZ2sFLkpLr3NZAe377IJqXvqK86y449JMdiqAfYwdLIUxTPfe8kEuO4iN6/ZpuILmiicKtfyEWGEjFGb5K7LGy3RMpgUsH27OnVgcHvmQmUXNNZSpcSabChL4JLcdDKh4lfC8a2KMKPmgT/xLDUiB0hQQANDBf4e3w0EtiqfwdBuNyosU1nt4Q/ULoaEqMFkGLBWyJvyKu1TTnDBHY0OCOqXnEOBsjSrrkIrfqH8/8X2Q78Dynf0fwydDPByxnevnPR64q+Xab2ghz6zo/iraHxG3G759eAhZMX8NDnLxv/VaVZp95WP0IByqOE9STuDwA9FJ4w6y89BU6pWus/wna3AwFK/YjOLTJx01ZBdKdXlksia+AqBWlyRAXMm2P0by4OKGyEZxw/fb9k4WddYXWIV9JIIsLr2fTfdEDZgIcQecSKTsC+F436IKgJGYfM7prY+5CsSPNoxKtz0SVv5yeYupqB99LbO5AxLSQXNp5GQEMQLv0XRTjKQ3QRxRiYZRkJ89zzQhG46twxQ6zoCUJKU/w7oEu6nG2rxj2XuVc0HrsdPtMpQ/sXRg==","layer_level":2},{"id":"e6b3c9d9-a8a4-40a9-b7f3-68f36951aed0","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Extraction Service","description":"extraction-service","prompt":"Develop detailed content for the Extraction Service implementation. Explain how it extracts quantitative features from segmented and tracked cells across time series. Document the integration with feature.py for calculating morphological metrics (area, intensity, shape) and trace.py for generating fluorescence intensity trajectories. Detail how extracted data is organized by FOV and cell ID, and stored in structured formats. Include configuration options for which features to extract and sampling parameters. Explain its position as one of the final processing steps, preparing data for analysis and visualization. Provide examples of the output data structure and how it supports downstream fitting models. Address performance considerations when processing large datasets with many cells and time points.","parent_id":"19f04139-24a5-4bdb-bd10-42130b293f6c","order":3,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/steps/extraction.py,pyama-core/src/pyama_core/processing/extraction/feature.py,pyama-core/src/pyama_core/processing/extraction/trace.py","gmt_create":"2025-10-03T22:09:44.0143915+02:00","gmt_modified":"2025-10-03T22:38:57.2983549+02:00","raw_data":"WikiEncrypted:6xmn2X85ZlcgfXqI+tJQn0qh31yebKie1UKxuBOHoF/9TvRxYgoD4gWB9MaOrUQDnTxBHMXZsI6PpQXSUkERiuSLtOe50y6wHj36mxB9J2aBm+rlMjZIqq7nmLyu6xLh8sGYuuh4mbZrfpnOtMr7s0644tGx0a7LdY16jLeweAdoFuqVV1SijX9YpOj0fGgTZwny56iRGlnpgLN45S6Nfeftcyr2iICfTFzi0KfEz6+k7doD8MfG6XC1GMvknVJnSIHh/owpCXZXhfQKn2BtqIQ44HEf0PcNnT6i8bXDBBSvWFM2BnBgG46/zLhoZspG5LwsKuFyDZEkNCQ6VypQ9BLuYg3Rb04RJLHJ0e2luiP+QrcKZ94SwI4+LA3aCBCr19vcS3QIL6WybSmMrxzJnv12Lt6V+P2g/EsZsk+qZcLImd4mNcUxJhuQJfTBrU1vjimNjGmGCJoq+Mf0azJtxML3N1Rs1j7/S0ZRPCM5Sr8o97nzA9AFSrWeiZyhwmTn1h115XOEvhlVh8mZULzDbxqk6BZzX5mNz/cMZfjqgUfoqmQBPU56azbmiRCau8wb81kpR76QwtUIBZvItvz0anLbA3tVca3pcth13doxrTma8f6ZSpEOsuq2jDuk7Irx70dU49EHYaltFh3zvk6ArjqvO9IejogdP3+7LbZT9yyg+8BiqB53BTtWY4V6LRtWsyxhY3QL8OMmCECnmKs81bVtF70KCv3WqikJgM+8U7hRQ+4Rr/13ba6GVPsKeEmfAErMqLIm4c9YH05Y0GAOfZT3Y3MvY69J1flV7mDFi2UaeQEb6VT2Fa738J9RIDGd8ZJjwGrIrXpESRTIu7KgrkK3lTU08KbaXxM+83pvifxrKKHkK7t1raZeA2FMyg1SjHa9jCXbbkdh92Z0tmcO2Xgb7K2eCKSZIDD7/bKq2fSwHmCH+du84/xIHRWi37g2Dqyu/oYVSq72JXiD+gGYYuZnzZE6u4lZPN+t+4uSEmZ+rlbw2MfInnGEC7stzLTF1GXhWvhncikZneX7QKHeL00Udv3lEVFQbUVRE6GP9wQIgnA2wo9t6fV1rDIoQmcvzMxdJb7YMs5Usmjl8qaCKaN3jMQSJIivzQaPrYaTQ6DzRRhmNWW4AL3ttSnZ2/PwBj8R40c/rWBzytDebAA850oq9ZN2DxK5EQUgUM8O092C8ouuZ3xpSd2IeY+1ZFF4283i/d9k37p/NO9zT7iTy4oxkV+qfa5KZ2K/ZnAz1oil/gy8OILCgNEoo7dT0AfHIsoE4Pg4hduIy3RvgGEyHtTGBBuLz3c2LMe4JEOAICMpksUVqFYm8Z3utChHZYgWFeduDMSVxzMAv2iBYbaOWRd3Mb84znVHP2UnQAfBFI3Z9O2k2Xxyb4UAN6FjKjGTJWJhgnRV1KxXRwc7pFxw4qT/+ZYrwwwjgNKD7r96s0sRIuHG2wDr3M3t9Try7STyFuDHbfLK9j3DT44LgIsghU3FI1WHs5It5v+SAgzXwSpqdTrKyD/mM7mVnvdRytrTayPS14mb/JOs8alU0NNFsPRLNTJtVgYHbz85h5ddVHePfGHJMv+EerKh/Ni+HBY9NQIIDw1FmbhS2KLJo4QE/pdMYd6TVnpx66+O96rxg52HgPUUY95IwMDBFS/XMmJ7","layer_level":2},{"id":"50af28d9-6592-41a6-8c53-0dac8d9e2267","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Fitting Engine API","description":"analysis-api-fitting-interface","prompt":"Create API documentation for the core fitting engine in pyama-core/analysis/fitting.py. Document the main fit function interface, including parameters for data input (file path or DataFrame), model selection, batch processing options, and result output paths. Detail the workflow of loading data, instantiating models via the factory, executing fits in parallel, and aggregating results. Explain error handling strategies for malformed inputs, failed fits, and resource limitations. Provide code examples for both single-model fitting and batch operations across multiple FOVs or conditions. Include performance considerations such as memory usage and multiprocessing configuration. Describe integration points with the results serialization system and how metadata is preserved through the fitting pipeline.","parent_id":"1176009e-a603-409a-8ed0-f6b6a262e450","order":3,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/fitting.py","gmt_create":"2025-10-03T22:09:59.8490789+02:00","gmt_modified":"2025-10-03T22:39:06.0991421+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQO5VLyvNBHS51kr39R0PBO+gkzu5N01xVEW9D96ZA3zqusXi0iEyZBTtgUftSLes6StKZPqIo7DuRhIRxGCx3yoo6AFTKqHtOcWvgNWxwYnHD5DWnJJygiOVrhDRJqHVvuDwGKof05buRUJ/M9R2Re+KhZGmimAWlKpIfyY2coz0PZgjGVDslnKeq+n4dfwSuzP85Opw7TYgUQ/4v3+fbiieuyrA1/qFEC+f9OJos+NmVFgCBeraENCyntTAhaTsYNkBMcrFI0OZ8Km0yM3so630asxacjtc2smo0FFkT5fNyRm4lgTPE8+Qs+JUDrS3Bf1aEUTqwWrGp1aNie1jN63JHReQCvykZDIUqq9pDmJ15qGzHYKCzAxxss8QrpDowphK4L7xP0vNEfVsR+8TFr5TwbRVBZfAIHf4BmQbArg/tU069b2Ez761F9TQv+0vQ/vmCw5lsnDXgB5lEyn//uVbxK0dmZxLOZOb5f6XhIOUGFIeBcGlRsSPwTFZbhv5+R0711MZyC8cZ/t94e8REjUJjFo7HUoGw87cMTFIh7qxVyFpnWpNqe5q73C4YEHdSnfYA98lKAzifldpvyvyH35ejycXr8hHB1wPNwYskXD+a6E6KVHPnW5e965SOj8czjf9cn0HLpji+zBoAF0wK8XV+mfkxWLQXJ14+TRzK7SsjDcWBYHypMLz8t+nvOAXTpzPE/x2eJPUcgf2rQIra/VLsFGtIH1qcQxIWwLQZ7DGpfliZGvPnyEr8kKcZdJVu76D03OVLvg6cNwj/k/1dIJIsb3kLsF2QMl/DiCARLcDYAuth8Hj1/aJCToJF2ij570iuF+A2Zl4uxlTUD8fEH9Nuwp8gR1GhTv1Beh8+mc/kdxV8hqJShpouOA40pEFCgipc2Qgf+ZSQf2nzD0r7XYm+75Ak6Pvd5d8K7oQc4zCE40PBF5sRjot/AoCjUsj9Rih1/G39G0ccNz/KfVKM0qTvdKNPBY++4WZXeFQZ4i4gdtp8o/vEpqzTbc+6+ORUeVFFqVoH2OEjB/J3+Yh1XGVAAXp4uMmA4OJaSrzDYunHrNWBRZwCvVL+MdUd9p11hviJyiHIzN/4gilKgB8xtZNhGm6ycPLSXUWQMYgu7t7yVoX3iKDeGJ5jexbc37L9VSo64Fd5qkW1wQVpZPrxaMr5PZn/1qTVvM4X7rDv6gHa6+Ast2aQTa3lztq0ZGBQmojFZKA6gTwfplUGsEVCghepWXi318V5AfeJhTYDCrSBwYDk/uqkbCmzgHZLx8TeDV6vBDrXXv8Q89cYniXKhlWAPisSooqbzZaTZgkdje4RIIZYttwdcLRoO3H+Qcx1A0pTo9Q1x5IDhYZV+Dci3UfdCI6afMtrhtVhkvscsWxPRtNAk/4+PYXE0Fv8Q+2UEFUF5l2AxX7/zYDvKsy/+LdKXEg269fb83vuKnqM5HV","layer_level":2},{"id":"bc10a71b-18a0-493c-9432-7527abe06455","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Feature Extraction Service","description":"api-reference-processing-extraction","prompt":"Develop detailed API documentation for the ExtractionService and its associated feature and trace extraction modules. Document the service interface, configuration parameters, and the two-phase extraction process (intensity features and temporal traces). Explain how region properties (area, intensity, shape) are computed per object and how fluorescence signals are extracted over time. Detail the output formats (CSV, NPY) and data organization per FOV. Provide usage examples showing how to customize extracted features and configure trace sampling. Address memory management for large time-series datasets and performance optimization through chunked processing. Document the integration between extracted data and downstream analysis models, including format expectations and preprocessing requirements.","parent_id":"63147ce0-0997-492a-97cf-4a038ad7300d","order":3,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/extraction.py,pyama-core/src/pyama_core/processing/extraction/feature.py,pyama-core/src/pyama_core/processing/extraction/trace.py","gmt_create":"2025-10-03T22:10:00.3848505+02:00","gmt_modified":"2025-10-03T22:40:22.022776+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0FX6PpUJ/WvHCUWZC/NaYOLvm/KdC6Oeg1ptUGEAvEM7TC/pp86P6avNpg6osNi2Sgrq7jCE7O6xnH5N099aw50MR4yjG2/JptCsbdAGdPdv63GmDYCoO8UiIVkQvo5I/UCa0npGzek104hfTsUjn4tlSic17mUrhd1txbK9BLt+RQa0H2o7/2kWFUz94qDxuKmzj0fVYYZuRvhJI8Zqw1Rd55JgC5zb+VYEyBiwBfhibLpHptIz1un6OJFWTRPjjwUmKPSum6VsqGEZS2J1u6A2dfkuyn70O+w5IHmkWYVfT0K4upP8z+Tpy6YPoMfl8GG50HX788xIghCFjpmJxM8z//nUrbXdWfhYF8v++YWhAUlTBvZMZGKafo+OrPUJODnanhMbZ1cRVu9ho+goNQ0zyszxjnHKNdWk/UdHQa46Dxs4XNOVwWzbthr2g/W11zrssd8MpsdvBxeTML84KEIWEmxfYJnVoN+Yu4o/ONVApaidhgrJWtVpIjk4qTvCKxmVcNTkvC/Z04Xb7Cok59+oucNIWYtTONOaLXr1lmSDCH6CbJf3AUZF8LtSk1DNhMkSjS0Sa5zldkAwQN/2uCmpro5wYoc6bDY4zk9yA4ZrklkF8CuWdlHuW5D7oS1pJatxEarQKZwt6NCNONZLM/qDzaY9afl6+3AfPDkTeLNrXJHyAx/KW2N/65M6tMyUnPCwoxc1xzNzBWtcBDh+M0bwjQBcMr1lZgFMQvaCx6To4lMxAHh8j+SH9BUZ4Q4NQF2yimvADiuJdhA3Y++eKZGxgyHxpPnWmcfrKoLNVHVL6uqqZG6Zj/5SZVoy8OaZm9q9HfLahfe/WcdX8K2w1WNWgZ6wZbe2ZHuiyN22HmsxLX6mtSlE1J61gPHZNLncz+vai3bTGi2oA84H1XKE8h/hMv3NrpVQtVySEFXZDroI1fqcxWaTKSqijtkQq0Gan5jD8qXTXRhgP5c4AN5YeIFqg9D1o78zV3Nel0VDARbSJKTxiJfQCZXkj06UErr2akVc9jnX7LMvUgd4Yv/VdXoLrQRdsMMCKLhHj0QM2NtkpCp59NxB7/3RU+QEmbpsYVj01yRI2iG7v4ZsXTu++jO1cWCl8N10FqvQntzXj18JdImvw1GiwtGGDrp0JESAvDiGmsWWZhyCaSXbkn504ltQ56Kku+NqIB26CTI0o8w67RaTnS425ZASNHEKKbRpUKbAEkZiOp7mnuPMvzVjMASkvvxRNsBuVwS1q7+I6L7VvRhvxNWe69+htGrM9UUbEsNNLLwP3Y7xviNsdHJvusEqwyAkr4mm1OaB7eu+8Ke2onEjHeqUjnSUWRwAwYBQ0pF0CYm6l4DZf215qe1EWUOjNP/1SdCanFTUSppITeTnREx8Mn7tkvNANi8DLI1kiUZTPvRSHC5hf8VXG05tk1GQzmBAmqJDZ1slWxJ9ebYiiObr/gMWUlMfeETRPeiloBEMkg23tj1VAhingLPBKbvElcyeE8QYEjuxPETVDqgeJGs8AxGyF0yP5cPRlRVU/pVQ49+2d1yU7c1odzEor3Vyz1nmtXFd5p3WR54d9CDxJX2BTbilKnhroD3K6L5q00JcK+ftsFyJqAmc77O9O8/j5fYPbpiPa8SuwtTHwdy7yRfvsMCkwfSmkU4fDcJ6Q==","layer_level":2},{"id":"943236ea-bb70-4e43-b1f8-403d4b306dc1","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"YAML Results Serialization","description":"io-yaml-results","prompt":"Create API documentation for the YAML-based results serialization system. Document the structure and schema of the YAML files used to persist processing and analysis results, including workflow parameters, file paths, and metadata. Explain how the results are organized per field of view (FOV) and across different processing stages. Detail the versioning system for result files and backward compatibility mechanisms. Include examples showing how to read saved results, extend the serialization format for custom data types, and validate YAML output integrity. Address security considerations when loading untrusted result files and provide performance tips for handling large YAML files with complex nested structures.","parent_id":"dfbca4d9-cc99-44b1-aa90-0d441840161a","order":3,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/io/results_yaml.py","gmt_create":"2025-10-03T22:10:03.2005463+02:00","gmt_modified":"2025-10-03T22:41:17.6279514+02:00","raw_data":"WikiEncrypted:EEupPrThc8nda14RIQ5D43GCDGfnh1IB9LJKpGqtipUJIf0oD+eplX0PyZ7NjJXyhrsJcqZ569+DGcf2kVfkC3S4S4P9ORe1LRScyZxf0ebpHhk6An2wJ0ttoDUZStm2T7QcIKA6NgOpE8WKJ25Kg8799RpDUr5p1/9mExUlGvCDxJihuZm2kN8rxgH8kGY580KejtDAHtDpBxg4cnlpyEbDLi9p0/c5TzwLuJyEEZpHvUxbO8zKRpfWwxSYpZkmMg7h9NXqTY0DligAaBCbg4VsjBZxA77i4wMhnr3dxQ3n2oHwEPQXD6J5ir0vw0gXHcasJDHZFikKzWNiBuXZ4k1TViahYLRCYaOCqOG3evtL3yoQHHttxCLor+HyDxKIXpCE2MAgU6AudiYzdy0gqufeLLVUqwuTD3GfO4IYK9Ld2DkZqh8WnzKaAGGclYsx0S7O/9Zgc4QUROpU9jwZIboO4UhWoKWCnZ/OTUrrHP11gyV5/RBoZga0XA6+4zv7DaFPRh3TE3pDa2kU/pQD0ehuAEzYGv1YAgYZ7q4N+17QK/ib1JLqOgagOtiZWEInYaMI4QO205QqmyZZ+GdSneH2oCpVGxdMJKk/PvVAICPQvGORPgqDpdD7udH7gPs6sATRJCKrtEmkP1TsiqqpvTEdMdg6lepL3ZfBsehyxxkh+LAzX0/+Pn4TgMvSeKK1uPRiDL6dpfonxf1dfjmeXwms25xOz8GN7svecChYrKURjcWPFPfudMNX6TvvAaMYOpIZQ2Tqj39StV8T8hsWctWx2vioJJnpUxPWi60MfERq1lXv967m/nGbnWaIplLdn+yQbotvhDggOJSiDWa9/ywFCP7cN2LqWWvS2tm23tVXUoZ69YpsdnjMC//VSx5bKQECRXZZRR4w9sXP8sa88RZjQkBGjyxXWohv9JhV0J1UMxy+7wXlVu5BlWhO9AWvPVdRxWeBXK5zRp9lBgFo0ThsSEXo+ht3Qn+/AoZQYSc3UndvHxqjaAa/M70x5f5kcwZ7JM2Hwr2Bed+OhfvkA0PVRWa0cGx7VueZMChpZKtBXxCePczrIzY9ai9LwBO6YfyPVNvEmUdkEuAoollO0R97XGoUZLagSysAQ7lPfUvMHzRV10dvpGIe8QGpF34SMUbMEq9SkAUVVkcIH573CKISxxPBsczFRMfZAsgnqczH8TLb2i0192AQKnU/e+DMj494YfR7fwPywgRlQEXhq+0FjYNuMf+X0ZkhYIfRIXirrXN63gZFxzocSeid5vjYiPCxdfDAunaJDocsO3Ygl9Vg4LKlE/7Po5MIeQhME/b9gt7ioCEQiWwEc5EFCCMF","layer_level":2},{"id":"971318b3-b951-4b95-914e-55ee91bb0a8b","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Analysis Module","description":"analysis-module","prompt":"Create comprehensive content for the Analysis Module section focused on post-processing data analysis and curve fitting. Explain the workflow from loading processed results to model fitting and result visualization. Document the CSV import/export functionality for analysis data. Describe the model selection interface and parameter configuration system. Cover batch fitting capabilities across multiple FOVs and conditions. Explain the results visualization tools including goodness-of-fit metrics and parameter distributions. Detail the integration between UI controls and core fitting algorithms. Include examples of analyzing maturation dynamics using different biological models. Address common issues such as convergence failures and parameter initialization. Provide guidance on interpreting fitting results and validating model assumptions. Link to detailed analysis model documentation and API references.","order":4,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/analysis/page.py,pyama-qt/src/pyama_qt/analysis/controller.py,pyama-core/src/pyama_core/analysis/models/__init__.py","gmt_create":"2025-10-03T22:07:56.1256096+02:00","gmt_modified":"2025-10-03T22:12:58.2725667+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQP4/jw+obFTSfBGda/GqU4r9oY7QZ53Qaon//nNG/lQ0gUFOf2PjadU+wy3m7rGFPAkeeAFRJjVQYY/UtSpVm3BuMGHCizpUZYg/ew5ikK17wgOOQXDDWPCof9c0hEN8FL7Gtc/i+EDIqicpbTNDRfWGlVwpLO36yw6PMtk10BBf6mXve3LpnX8zKZnrGyO3F5/jA2CFnw1wDJhEvwSb22fTfBq3XGnO2aIbfFtezZ+/2xlQkD3y+uoP1g+3KqoyveO0GzyQb7qeq0g6KdRxXslY+oipbjtFz7qnQ/Cw51sfIeUSyN8Y0E7lSIQnYwTLJENpxoaBmBhGUAMIPGstBFzgxUvDjutzxz8KZtdpg4p6IvMcAarb0VJQu2PKZVofhTCaEcNONfIRXKIC2KH0fTWbcuqiSzzs+yhdsYR93wQxOqI9uFNtr74XCzz1z3ArbXzO0iSLqJXkIvXGmjnnFAiqZyMtjmnmq8EF3rHh42zUz1dS7xNtR65Zu9EEw1e60jvedSzQQpcgwOx7gxf6a3vH5VnFypRHDbhnSGIBExMdQyiYvyFdazU2viz7s84tACglxHUvx6HanpRDLKQGXkyVpoQmrAYBuAGrYVCYuOcmGIUiClXwf0UTwcf7Q0nu4pMWI6wYjKM6cgFomQPy9zFAwbSSMd6w8v0YKckODR5gnQkD3WcPg8feOOicOhImkgvBrOvQug8sshi8jiy4CjgUdf8fruxSSL2vV0o5LjauFEUZSjVnOoQgi4vgQcJx82tPX3hF1MioWSq8pjvTcIG66sKfIFbTIUrlp8T7tK9Th8yzNMKDM3BYXTwF9APog3fHXiHXZ/VDxQLD1kHfSWcR/6AhLE+OsKFiR0wOQbBL5LcgTBJAixT4gXMqrf41qrXq9zi/qcJbvmICL5yJzdi689dMbfwaXvsnQbmQz0gR/+DdJdFnyQKw8v4Ja2qLR3nnxSph9x8FUn0Xt7D/XcyZrQjC2faP2RwUaIcICaedfUjQudFe1bxQ4LPLUPar+cFbGgWisYCIHSCJgftSkFzDLw6iTtyNTN2ylG6bJJpQoGG4TaHd1V3eKtp5/5kZVNxeX+RNbaBZVt7DiGcwzY1iqOkzyJd+S9PfM/vtbAutQZkIOi7psdwpCSUJtV+FysDBymtc1pcs5ger6G3yUrTu7JG1xvzZwrhRCu2ubCfXTohLksCkYUnd+eDlF9Ls0UfRsG3Uc3mjXshY3K9Ihh3QWu0VPD6FQ3fhXMRG0RMqWpqSZl7mb7nPIGo9aJ2gFxUlsJa41sfMZo/r2f9v0+gv7WmMEy71DFiRITXk0QPCTXLBqalRGhycSKNfjVrTLXBicDhpVWx+ZFwdWrh9PcKsi0tIgh9M6647616oog1X0tAicGG7HBTeKtpDCUzZzvn76uXqQNRPwiOVk4hce9qD2kzOit5s0zp+203Xvpg2cVkRi+1eQYi2oWbQrifX1SFWVMrt0aNEoyenkk0ZhrMUR2iZEm3QGqVjhulXrbmPajJ/FYxWGWymcpCIGa/W3/1ZoANkZRn29vjhJDJAy8UgC1UQP3J2Q8reySuh4vu+851KLzhcNFxaUFHPdnJRhWxdoAv4bkJhx19OfDRlAIhDbIvrbMlm5m6jXm4/whmVTmooXrpnTgyPiwAT1w2SakO8OrKjNBj8vwIlE5ShW080lxjkk4kUV1YDOMz3/+A/lJ/7urxqP/ZLKCwufpTqL8kMiTdHRjO6zDuiIFRurtrWRMc/ivvhe2sfXR6njCtbAVX8vSha8bvgUrTHPOKY7rcP70HW6VURIF2uLJOOSao="},{"id":"56dbfb81-7701-4a96-a25c-48bcb8d32353","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Results Visualization","description":"analysis-results-visualization","prompt":"Develop detailed content for the results visualization sub-feature of the Analysis Module. Thoroughly explain how fitted curves, residuals, and parameter distributions are displayed to users. Document the integration between analysis results and matplotlib visualization through the MPL canvas component. Include concrete examples from the codebase showing how goodness-of-fit metrics are calculated and presented. Explain the interactive features such as result filtering, parameter distribution plots, and trace comparisons. Address common issues such as visualization artifacts and performance bottlenecks with large result sets. Provide guidance on interpreting visualization outputs to validate model assumptions and identify outliers. Make content accessible to beginners while providing sufficient technical depth for experienced developers.","parent_id":"971318b3-b951-4b95-914e-55ee91bb0a8b","order":4,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/analysis/panels/results_panel.py,pyama-qt/src/pyama_qt/components/mpl_canvas.py,pyama-core/src/pyama_core/analysis/fitting.py","gmt_create":"2025-10-03T22:09:01.822825+02:00","gmt_modified":"2025-10-03T22:30:56.4494205+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQHGtY75oL8x3fUSMisQQuWYk+S39v3Cpi5ud9NEQev0/NNq+QGhOt/85ziyc/GX1FSOM9AJczwPtPGzjXf/pwH/IorfNhvCmvprcNZ7wFRM0HKXgQxBKQnGBHjTLpJoi0QplHGMiaR1hiNMmPuaC9vTc029sw7FH4u7ndU86SkwjnAFxQstic3S9FoJOFIRF+0mHa6U1qJJeXrE/x4+4MT9aoCrENPRvTqdXAf/VI/cxd1e2pPujqzUd+zqk3nQLiA0rn8JhJ7MSw+Z06A4h9CD7ml3gGfSBci721ish3oCG9455fXzNWAai2AselXIt5Lj42cnXnSl3wbzEhbUvaQ9CuTrR0WUQqwcFzWqw1a+Lh265CYFvbcNdUjSTeoHO+MJVT6EFSRQoiRORS6Pgww+EI5qJWiRrZNMGWkSQRZ9mX/9E4T5HcIAyTfP3iuhnxRDL1nMZFiuOc624fKprD2rMVY8nLl8xOBTY/ZXuz/ji/U5h2EKrKHNEpxVlJWDPF4wKInP7fLOFNHuXCjaK7wjHDLgBwvgtdyvTgBOzltlcvEqQrJkmKrtZ6OK/0F60QRjxZ5UM1k86LoHV92m/CPV7y3caHi8Z+uq0hMcrOXTgN0Pd11Nn4adyP8jqVrGpXWO8c6oXYnvQSpsV03ceet0i+EXlNlfcFJMKqfHLVoTbX4pWanmrJwoA5O5fz9RLLjRr4jHOhSEZ4Eb7GmTkDGbp+HEjPAKoRQUGDomyvA7ZrGzOKYSzsnu0rgTLdmpZ2n1aUaJlG7r2I4aKGdX/rd1T1D13aDlMkvw69LFTnxFe+47dCYo+lxp/BxBzRHACnM/yvOCaC+5QK/ST+JmdpGy0Y/baxrzfnnQQ6Jd5a2Y/CyjbzyzukWKUr+JmfL1uSlkSdia89w+u/UdRSQ8d0XGImvLZYRELFM2qXh5RDuyirBuNZh+qKCA0fCdkbCMZ7uHI+ReCv1th+832geYwG63dkAy+NZ3GfIGamk+HlW8Wn2mawAYROX5sP8bgspR0ZzaRSAkibJfRlplLx99lhY4bb+HplGfuwYBMlnWaUcgWBE1DRGVtaaph3aATe6dWDxQlXOl1T+ZFV7rRJilLmA4zQw1vEVnW66PFTVKBGmvLLuD0zwuO22i3j6RsUZkimt26pY2ioy6zn8oNRf74eilzi4gHXe9PE/RhsLvRYA+5TBYWzzBcFtwdWK1+BVq46C+rjrjdTNA0NTx+fQVJb0bRUsv8IM8Eer8Ly540qXE2a5yuQTsqAVDE/MPDtAziy56u5MZtPaw5PeeV5rJq3MgOFyhhF07R1UgMBl/ggtioCsEljsR1NnDiCiBSwsw72uFglzEeQ3bAp52hLO/xyuUWYc66ZPu6tcUF/dtl87qC/ZRJcqyB0whZ2Ezj7VpsmtrFIc+WxDPWzue2gIfgOTFvohD60ByPsSkAcIok9tQnTpyHgSwCWyEWbWTtrxvFfkKImqBHM8L70AekJeYxGdPYkYije05wRMSnKj2AXzcbMCj3jouobb0m2XrUP0Mc1tz/94f668KIok6dS9Fo/mQ2mWnnS4fkSVZAJL58lMn1kCM3igNjtrXh3D1+Zn3+yGYHtdngIlOmw7kAc7Tjcfg540GVfOgTsxm7N3nhvxYVkpG7X9u6I4NVZP8KCoRYkQ==","layer_level":1},{"id":"91540790-5797-4003-aaf7-48852cedb91a","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Copying Service","description":"copying-service","prompt":"Develop detailed content for the Copying Service implementation. Explain its role in organizing and duplicating raw microscopy data into the processing workspace with a standardized directory structure. Document how it parses ND2 and other bioimaging formats using bioio libraries and extracts metadata such as channel information and time series details. Detail the file organization strategy by FOV and channel, and how it creates the foundation for subsequent processing steps. Include configuration options for data filtering (e.g., specific FOVs or time ranges) and directory naming conventions. Explain its position as typically the first step in the workflow and how it populates the ProcessingContext with source and destination paths. Address common issues like disk space requirements and handling of corrupted files.","parent_id":"19f04139-24a5-4bdb-bd10-42130b293f6c","order":4,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/copying.py,pyama-core/src/pyama_core/processing/workflow/services/types.py","gmt_create":"2025-10-03T22:09:44.0179784+02:00","gmt_modified":"2025-10-03T22:40:39.5059336+02:00","raw_data":"WikiEncrypted:qoN8lDMElktsX3tyPln3EzoiJeMKVrO/GaNpNj7iLXibY/ATh4jx9YctTT5XS6/MzKZf/YoY7QlUERI81FnqrfDL4N3oJMAJ38Yg4kPalU9j26stmu+aDjW3vN/JteNgLbBMq0mCoh+ZvwQ+3bJboxsb2KgwpqvDaVmWB6L8KtnZqi9/B917fJQDBn/723bXIjZ4mzwUzG2h+ChbMnwQ9wVsrKM7w9rC8dl2FgNFetXgt2mHVxNjGrzIVMLbLNpo3c5j+81XAG6Shn723tCK4q6WXgrVOhf7ADyQX/z9nef7AL/PdanXzb9Mpce1/hROAzQmlhPdZIZGnAqNMe2mOMToqnebuDyIXz03jWtNlKYrNgClEr/Sk8cxewueaGUldkiayySZrtQKlUr8nHvVyc0fyMCbdeb6bYjm41IrzB+0YDqqd76ot2JWbv1w0S4QAJeo+GDscR5mx6my3XSbZqfj6sfcuScHp7UGE1hNFbh7rRLGiQrYk7gIKcW/R7h+rDX16mMPMqUAeB2TwouVSX9L1zEFNkBtglTF1lGhSIcxNRfA7tw8EMTrs/SmH953KxkSokvo0CIFxTad6XzA3ppmr0uTki89kNKbzIeBkpaKW5+fG3AHJmOiNC1Wut4r5myAwXqltZKmufAHjyhZCEQhWHsSEIoZ4ysjAWddCYYyHhJTS5/ZDFKRyOFwjouINtA/OfMcrL4pqWNr1vrYIkRa2oRUyn1NHfBJrRsfVmQQXoQmSZ1Z/q5FXLiSYLfHDVd0DhB6mdTgS/A6nRgLS8lQUNfik4aB79fhRuWtNuffPiKQDw58m/3R6qp5y7Eu49fDmim/U//K9hOtskS+j9oZCNPBUH+7GXIp2/0yJeZ6ywJYM0Y7Sze9ZiTtumxesTvMfKvEJ8/Nib++14e2Cw5+W9HzJHfFshBLTvhD+4vV8v/IuReXavwscScVv3YGjOOHBSsIoUu/75/YJtQ95xOK7NIZVV3299bhczLx5yxICyE4b8578TxG9cT+Rq6COKQglGRl0JWLO2RGUtZLfK6z6SSG8M7X9ODdXr8IUz8sz0FtfB//dgJDVImuc+BIDM6G+S4gfb+Vb4dJuUjVebeBfxLreGoZwl26T4CltfVig3cY+WipWJlgZ/rg46kaQeyibcZtLU3If131c2u26tIwDMR3TbHAR83Myo/aKKXojnZ2qAXfNBZ9ocEPLW7/Ni2ApLulLp3Wm4/WAzqOW+Jne6m4TSse0DOh2Z+PCaHTlWIrwoocII5sQAfP7bAwGfWmbA7vt1YlCg2JI2zq49Xq01G/bVGJmRMnmMozG05PjuPgKxeVUUi1SnqA676UeVp43fjS4D61WIq0C2aquwbib51hXpKNeoPmU1NZajblj8KOhtDOjbi2DGiOgYWgbmUxX2k0AHHGnGg1oauquVEITIdzapVblgwTu7z/oyxdeHny8zvgOCmBwVk3BWbz06qSW0XQqFxR03Wi3msOGN7Z8nFzN0rV60piYXq3OM79snbAL8YICOY8PvUHug5Say8hfsImrfSc2hF9j2uDVhzXxNxYiUdU6kIBaSk8Bv+lwIuhQMfz+z9Gei02LSQk","layer_level":2},{"id":"354f92cd-30c0-4ae7-91f2-68f5bfe40d14","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Model Factory System","description":"analysis-api-model-factory","prompt":"Create API documentation for the model factory system in pyama-core/analysis/models/__init__.py. Explain how the registry pattern enables dynamic model discovery and instantiation through string-based lookup. Document the base Model class interface that all concrete models must implement. Detail the register_model decorator and how custom models can be added to the system. Provide examples of registering a new model and using it in both GUI and script-based workflows. Explain the import-time registration mechanism and how models are made available globally. Address common issues such as name collisions, import order dependencies, and validation of registered models. Include guidance for developers extending the system with domain-specific fitting models.","parent_id":"1176009e-a603-409a-8ed0-f6b6a262e450","order":4,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/__init__.py","gmt_create":"2025-10-03T22:09:59.8516302+02:00","gmt_modified":"2025-10-03T22:41:37.5440899+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQF3fcvDhfK2iKSUdwA+8rGU+luOPTvO4LYP7kSS3PefduklLzysiqL4X+33gvOXFPQ2EEgwVxkIGkGyB36wsJ62yCYUSTZtvmLs/dTGaFyW6Y7/gvstZjAoow97lmeV5peCgyGcdJXb64E1toWD5qvpc5/obgNJrOBtgj2KZWt+crrp1r+4Orl/OBxxOIPdyNf7wn3jpT+0t17MpG7tkcpJF0Rm30tN0xTDssaqk9bUAuQGUIE7gVMAx0Yhg4kMB7aJyDkV+Sn9BMmdwhrf3ZkTnk84MFeacAMDeKVBDsop0FH52EbqUfJQrA61O/A2z1JlF+WvxFvenGpRJnoFUMnE4gGmWc1H+EpYyh3O+gkLkaPNAK2wj4NFPIyACoPAJxEuQWoUQph78GVMjz7TU7nGCSLBcCC7x0Ji40yGIHyNMYq8VnhKlGeZBxi3/gtrzFD1MwBLs2GznTHNttS/CIJ6uBr+MARNpKJ60SqaL9/IV8gVI4Hcuoi5YC+g2XDfFS8SucTWvmX7Y3z0cFubBz7gt1//KcD+OK/0qvtriN6R4KZnUqudOcSm2mrYrSqYEDTkD1EkwjxT5CzoDrblrJ+NvS8wruW77pankADAAewxtFGlt3by52XXE4iGv4+NxLL4apnG9tILtT7bpypnI1Pyesn42iZ4FiRHMfpyitLgiTL4qpnnOZp+YySkW7yMQPUPxdPwRpIpBA3xv/zhe6ZIEJxZxgKEqatspSVNythZGDpv1hiMo2N1On4cKU58WzDo79jUaoEymKHP1qpbao+J/W+mfPrJ0GU7KZXeX/0l67XPZsm/PDL1zNNDPmsvLDt+WJBlAh5c4JXeAYEChkTr76FFGdcePBUMJL43zOxg9tBATwPzD6jcLEwiQB9k865Ut7JpoTHAHn3IgbGgPin08BcJBB+QxVu9yUHU9fP8S9zsBZNK4DvY3f2MD4HwihGQNCa8kYg/kBXiDcK1EFzkarIzkwrcMA0QA0tmcxdH3jVq5W81t28Put5cW/AWBRj7ZA7wF/XY/AtfH69ySBUQ+RDAbIW3frm23s3W6spcvOoTSqfgNmqzij5SoLYMQY836NR2udNLQg2hBMdOJivmP8zUcZ2ioratIUJXsYLfONdzW6TlmlEllRZdoaPflGyyv8XTcVB6eqRKK49s3muNaokdPbEdxK5LrVJN+OThcnyyLbNXh1lgKPFgf6Sjr78Nu9KyrUhSdvKH6GTOfVa9QZiXh4jIqylvmJHVkLU/WtWhS70Zk4K0BQYfIcILB/6VEMEanNp6UU0AqmRa6gJXN9rLHkM5HT7iYMu63t9US7MdC/eCVK0WMe10rHeVf3eVfI4kMhx1teZ5M8CBerZ2gZvTARC+jzfE1sBW5xnCDN0pVdjcCpaywKnwPR51b0A==","layer_level":2},{"id":"4b4bfbfa-2bdd-4a4e-a4a4-cc84fa36b593","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Background Correction Service","description":"api-reference-processing-correction","prompt":"Create API documentation for the CorrectionService and its tile-based background interpolation algorithm. Document the service interface, configuration options (tile_size, polynomial_order), and correction methodology for both phase contrast and fluorescence channels. Explain how background illumination artifacts are estimated and removed using spatial interpolation. Include examples demonstrating correction parameter tuning for different microscope configurations. Detail the tile_interp.py implementation that performs polynomial fitting on grid points and interpolates background values. Address edge cases such as uneven illumination or damaged sensor regions. Provide performance considerations for different tile sizes and image resolutions. Explain how corrected images are stored and referenced in subsequent processing steps.","parent_id":"63147ce0-0997-492a-97cf-4a038ad7300d","order":4,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/correction.py,pyama-core/src/pyama_core/processing/background/tile_interp.py","gmt_create":"2025-10-03T22:10:00.3879366+02:00","gmt_modified":"2025-10-03T22:42:11.0857523+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0FX6PpUJ/WvHCUWZC/NaYPhi0KERVXIPJunX//Ji0EKG7biCRRHiaZA6VyCpm4WzzOMUl5y74UPXjhbW1CDIdBbVgD/fU1hlGO6I9IqWJ53WXcPjbtiGCQdI0Xz+GMYJVNpzDgZV+8G4K47zG5d46CiA2va0FrjL3iuoEDbBXY++/yksVBe0m3h1z3idAaURZWNoIxcHzx/CvkzNWtXBVBQ4EOUPuEiKgR6lOL1G8rkcyAVyK2P/VtP2VWVSsgxCd3/jHxGZwYtOJ/jm5mqu2bRN1d6BwG2LZAkvTkYDfqkESZDBor/8ijaB8/Xu/f6uRyis4XTdnw45XHgnJ5IhovFOKHzYc3B28HwL5RYyxeUsJb5ndsVw+sz6r80EBIr4HEhWa7JDa183yOLyAFIX/11ZdEDckcmALa+UvxRH7PQXYdChv0Tuw9+wvjdNmrUvz7OTsp633geYGhumvAPSXdn1bw9wWjqnHBefiz9069Dob8XFROHragB44zJSJrKPpC5zFnY/tbkw8DqGWZPIYJilPphcSIToDj/BTHBdtxSEBTIO8AQ2p0ZnWvZOeqIhOWXYiwbV6muTBMKz7ESeTbCp+JVeGS68/U7Ggtc5kzgeTQbJZVM/nKCUUZtS390hSHT3CqU6CzKY8TJQlcYIHOFNA69u9w7sijgC4ijRCTYt5IY0BS1PssXJrRdFTo6YNL48TPonpu9hPmRrUy8CEis51uq3l9pfxTG06nJktiAG0OHuqKWWvvjQqNzhjCY/xPsLaj5rU74096K3wlx2JhZRiRnoF9Xj0pOyABmBcrjR7HPEA2/s1g/+wMw2iymv5lIdrPeplzZojmtDpuGdSTIyTR41YoesWkeBFg3JxKWhNTy3gVOJEx0Ar/LoA3zpQyLJTo2yl/1oGHmL0EwmSUdnvASmip9QR3wFfneyxWh8IQGxJs0GL1gF7Dpu7X6dEgFONMZlkkVF22ZudRmr6m9SQmo8r9KXPQBCgzQ8DznHiLAMi+aOlWTo7s93LmAtjI4P+xyxE5QlR/7v2wvfrbXSQjaeOsPsOXWy6jLiBMSC+mScalP8UqslVbPByBKjCfB4mvA268M034sMhQUH0FWj1SdHfdSz0DVamAJaaWMlEKItYukiS66pJ6fUUmPPihDeIt09bZSl4DnoZE6wfuiCq5G4CCFbuxie9JK8oWwMXR2IlFfjpRprjfD9ow1lRQoHyWX+pvtrQQb1d0C4rQQlqfjFHGyeTR5+Yfx9/JF1ic4pJBuEwJjr6Y/hpX08EZT/V5a/Invuojhto2dXU3r7t2UoHmMRHo7kKhfDHcWEfHbb9jtHh71TezMCrfi9dL9BQ0K9tJsA11El9H8kTiHLO3LthL4ZvKBc2AcjQfq9/PVHyLEhVdFSVh7oT40lAWmvR8lWkmEY7a4mAsGX778tvXnuUBoAhmZ7OHETGKJvNbQSexYnnOvsHQI/KM7YN5GHRpxRprYYlXy6JYmaWoopBK/Crd8kc1h2YXrjMV+e7dj9RQZ2vtz0M0/znMYty8VNMHlyJPTw4hDNjSaFUX0e+iUj8G7XdiKVcHq8sgXc6zgtBBHAtPSaQN1yGU/DwALiLDtKEcpxAGVF4WaEI/jb2zM3WPImw/FTczDcrTb","layer_level":2},{"id":"88a939bf-eb4a-4be8-9c88-a3d1ca9f0754","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Visualization Module","description":"visualization-module","prompt":"Create comprehensive content for the Visualization Module section focused on interactive exploration of microscopy data and analysis results. Explain the project loading mechanism and directory navigation. Describe the multi-channel image viewer with time-series playback controls. Document the trace analysis tools for examining intensity dynamics over time. Explain synchronized selection across different views (image, trace, project browser). Cover the visualization of segmentation masks and tracking trajectories overlaid on raw images. Include details on zoom, pan, and contrast adjustment features. Address performance optimization for large datasets and memory management strategies. Provide examples of comparative analysis between different FOVs and conditions. Explain the integration with matplotlib through mpl_canvas and custom Qt graphics items. Make this section useful for both data exploration and presentation preparation.","order":5,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/visualization/page.py,pyama-qt/src/pyama_qt/visualization/controller.py","gmt_create":"2025-10-03T22:07:56.1286989+02:00","gmt_modified":"2025-10-03T22:13:25.8525364+02:00","raw_data":"WikiEncrypted:iRwwdaIwaxjXYwUFfgBjqKfSOxiGm7khwtLAUy0NL9zsUp1+qMfCnScsJzP0uvkZ9FOavy1IdLsM18b560Bs0jS+8PjfmxnCnHfqWiiFOFuOjzollw+Y/83nUIhlRUS6LIK0Ut+L0AuVQMd9qG/zZY+4rx6+ONMHl+UDDtHo73eI9+2XrP6f/fVAqYu7UyMwqVZStzCY8H6dC3UX0+vu9+alBSOltkCWDY0LpVLd2CwIsHVSFtn3qwF7msbq+tYoh3WwMQGYHpmMqB3siDgcuCTxqLCIuaqQa8tJJ8PKWVhmX/cQyza9+tGZBzwqlJSS4J6VeH7u1CshrGJqq2QiIxQHBNiehVTC2G/aKp0AmNfnbUlpzauaohZpzhVglSZ0fwj9xG4FtCX3zrg7JE8eEkJ90MEg+/WcPJz6VP71hp4wlfyAPAlG1grPzl9m/xfWPPuWXUraOyx2Jc+xFIgvJWXhJ7KpgY7DyolP3SjQNdPkrtFCwIzQiCmfIrZ36DvPPkdH3SMTOx2B7NOpUCmLGTankkZTPTW+SK5r+wCUPrCn6sQREqFp25eXiLNAg8QMKm+33nbmf7WeEaxKeQuR/8JBBUu617n4Pb3GplF3ycyE1uqgRpAWoIN5UNf6LG8GQjhoIRI+HupC/8MxCT3PdBxvbXwGU2eBhOUuj88hH01dPMI4rPHrhGg/IcPeS1aREp4gwG/XYluuOIzvfneZ1pV/2kD484d4OKfwEyjfxCvcIq+OHDlYQdy1Vqz1TjQnwH/FL5s9gUBB5Wly7n5g18paiMhMa7DZeu5Uu9u+tmQ7iIZ34wNIyhXUEqhBWaZahV6a+jMS6zsCwCx9KtNjtu255T50PVLRbWXJX9X4olidIikKeRwEbwQJg4RshmjTW4ameuMe6ESh3vAQ5x19xuv87NO12sxr+e1B9q11BV+Y6kS6lVeyTlMFRUVnTD2QS3oSsUNAkx9s7hKG6SyypMFWRhrCvg0nu/4Gmh2wiZT1DTBr/5ooHwebW+8ZtwolFCFVRdDGSBIj50WP6ah2i0IDXxQTZ4Dg3+TR4yS5i9rOKUA8mJJMpS05Lqr0H7W1pO2LXqQfoX35Z80NqUy2sHi77JBpgwDb+KIk3z2BgKlJvWFD7NMwYc1IiUyNUzKCmdUH9sRtluraRDcsdBeiSaybYdOrTbz6AFZQeZ0mNYlMTK42wwEG9tgCunzxDEH5fvcShgiCQsR4GhvUxp2MDbHmj41fw4FZEDeAuHQWgUVA6+bzlFHKhS+f3OI52g2302GaBT/Iymcdrp33mMk51W2Hf8DhbCkBPVYjgjK97NBUAVd8vFLVEBRLGlj+c6lXjITEcs3p5OasAuY1+YIlVAqj+m29QghCmtc9dbCqGB4UIScnO0uRWKl+d/j5GxLv7WQRWrAMjkMvBweDwWTM2MNHhlIqJKW6Wa5FzmoZELzOK4sUuCJGOaVIG31aLlVUOxQ0d3q3CxapimZ4ReRTbstSCqHcsRwyPnzrIGIYcisY78rGxWhXvSci4RW3/N9fCnRukZ/iirWWfFwfneM2Yo1gCcWbQ7AakFNyqYitQUwCcO3NwzHKQQIohcdxjNr+NGVTBcs/kIhtx4mHYeLRZ/9ikdXllTDOPPNHOLbGNrZyJ1hjxjtlJz7f+hKD+W0rC4q6Pe7O3VPLuuHR3TVaNUc2S9ATsoodq63rkELkwYNgwqV+mUhmgi0K/oE9fI0X+Xe5tOkpG4aphMPKHKe0l+n9V6XzcNQH69IF6SxKzzP2uO62CyXXINs+vjl6EXN1WzSDaoBplplFU0pmt0KSzg=="},{"id":"2faa90dd-fb04-46d2-ae38-63e83fe9ac58","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Service Architecture","description":"api-reference-processing-services-base","prompt":"Create architectural documentation for the processing service base classes and type system. Detail the BaseService abstract class interface, including setup, execute, and teardown methods, along with the service lifecycle management. Document the type definitions in types.py that standardize data contracts across services (ProcessingContext, ServiceConfig, ExecutionResult). Explain the dependency injection pattern used for service composition and the error handling framework that ensures robust pipeline execution. Provide examples showing how to implement a custom service that integrates with the existing pipeline. Address thread safety considerations, resource disposal patterns, and logging integration. Document the validation mechanisms that ensure configuration correctness before execution.","parent_id":"63147ce0-0997-492a-97cf-4a038ad7300d","order":5,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/services/base.py,pyama-core/src/pyama_core/processing/workflow/services/types.py","gmt_create":"2025-10-03T22:10:00.3904787+02:00","gmt_modified":"2025-10-03T22:42:27.5335486+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0FX6PpUJ/WvHCUWZC/NaYOQ/qQYMiVeRBO3U1kb42Xz8Y516bQXICkRYGG2ScTN2tGcZn7fHFop0OQwfqRXZlXaUnQ8WUajtUtZt9XUgZ1kwwtn0QQdAWINNSyVv5GN/UwxmlODX6ytJbexd6ifkmZOQHmT4YSef9PfPLRAKLidcFWVQBaWOsOg74Qrj5pG8zRIE07pqmNQJJfmcNhAwv5cOJX3yaMd/82CHXoqjp6Alt0/tjF0Gc4uTw13emHHMIIw3zbaRp5Kt80ceicXltQyt2KV5inSQP9ZW0bDMtVRTJ4mgIKNC0BNDfQDFtek2wI7JBel6KU8Wprih5zfPBT9vV9Cwau1tbi7/srTt55WfLQLMU8+efaFKlQYY6QftuprvotBFgiYUNaayQ+a7q0+SL+kmWtz5xPKQRD1ANAGAq6jRr+ojdLble4jLtbDhuM1o+Lu7JpENSFRZzjY284SeBjrtKk5EHywwZu/l4IEVaXnjF1QzlbC17NXFqGMuK82avNmedumuD6XaWSTh5P1L2IbgzX3bxgIspMR3WOk1cxq6m+ZlIkOeI+SEQXOywfpJLocBAjYwBIrt3kDj4DATSGFQdkG89Eq7r/2quwxYWt0dWZMKoAV861epP3Ue8s0pSJnym1Dnr/fJGwtp9bG1VODaOGkKXz1YrR0HcDPDMr8fZO1cSxUIlMjQIwp4qFoC4rGeqE+GkmQBQBlX9RqI2EpzcCgk6/+LZpcDiA36YxcM49MfSyMak0Pv2DL+kErLMtyFhsNfBDBoGdcSYDP35gDMVPjofGtRdwVRqwYKfyyT3vRWgaR5pNHIIKDgPQT69w2OTN47LyMVaO4jC+eCHsGyHmtJ5ro37v5zJXMv8rmBIqeedB28oObGdOSEq7bFSRyzyPFpJ6JYfWvnyyDmfT0icNrQBu7botPPdBLLiegrDinMV5mlT71tMhCndvckpcPqiEa57X7hvaPIf/rEaxEvrtIUkF4buQ+XDH3acVdO8hUpIAqMOl4Ifd2vgzlPcInrGV1NpBIX3MxTfAHSpcf2J0Fqfn8QI8F6/45gqRLAxHT3wPFP5H/IQH/owehrOmzk7jLqJOJ3RZ7i7KPgb2Kq80H+qZlFglN+hDA8gZMEWDBzdn1lHRFHK6Tg/188nGP8UjbzGSNE/iGSvenBEBjcuuxmTiRv/9qbEIOVqti6sPSawu8106+E6vYXmLz2xdNh9gN0fcRBqhu8CTl52pNK6x29HHS7GRGNQa0msj8MejZHf47SRWD7gCUFYIOTCvbxrBDWWj+j06KlS/82/S+zO6lTL/1y0Fy9ECOcbgE70YtKur8TLp1z7pLhExRVVZl5R/129bIFQ3XmN6cHkVGT32kn7p5L1M6j8PxLzmfxWCbE5c/fK8YTEzptrGw/0G0htK/7dC7O+SktKgClR6ZLCDwmEHPORffmZr6hcigcaEsby29q1Y+kEnb3JNYXOTlFNUn+ygNDvebOSRQMu1dTYMDgg3P/MOO5l85ZeFk/Ce7Vij7QDs7VPKYFn9BCLa9nnCJePCjvRfql1Q=","layer_level":2},{"id":"d84c9a8e-53c1-4dbd-abc0-9fd2f8d4e5e5","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Core Processing Pipeline","description":"core-processing-pipeline","prompt":"Create architectural documentation for the Core Processing Pipeline component. Describe the service-oriented architecture where individual processing steps (copying, correction, segmentation, tracking, extraction) are implemented as independent services. Explain the pipeline orchestration mechanism and data flow between stages. Document the ProcessingContext data model that carries parameters and file paths through the workflow. Detail the error handling and recovery strategies for long-running operations. Explain the parallel execution model using worker processes and batch processing. Cover the extensibility mechanism that allows new processing steps to be added. Include system context diagrams showing the relationship between core services and UI applications. Address scalability considerations for large datasets and high-throughput processing. Document the testing strategy for pipeline components and integration points with bioio for format-agnostic data access.","order":6,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/processing/workflow/pipeline.py,pyama-core/src/pyama_core/processing/workflow/services","gmt_create":"2025-10-03T22:07:56.1317836+02:00","gmt_modified":"2025-10-03T22:17:00.2856752+02:00","raw_data":"WikiEncrypted:790qD04ogdwUnmLrnj2+cXmudBA7gewmF0dAr8qoSCxq0lg0of45AUQ5ooirYisZeTGyMxM/l+3kP4O/GS6SUCJieoayfXun/bVkqVWg8cMVPBHLHHUdoOTF0Esn3lUgtCnCo2CIfW8bdE4IQks1Vdc6GYT6JxKmyVWDYxlJo6vnwIjBKvXqjUT4qKQCWd1A1AN6ivfQCWLTTiKEOmIF6GbsZArrcqJl8R/XU5xM51IJ6hiT+5fZzs6erWwOBKS5047LUBHuOKnL9yTkw42GBxDJx39+ZrJuVrz1xV7187CK5bNkr1lj8eD0bnu1BM/yOYdCFUV/uVfsu9r/bigAJiZVHM7Aapd33jQQZNAmk+onKUvxA1CR6D+lMyUxKN/9gqG+cV7kQYRYdfb1pQmnjKK6SUUjdn9Ci5CMpueELCArV7A6vT4YTL0xYTqYXmmW4CUtLODUySY/fKMkWFbNvfFz/DdIaZTQlathwemfgMm+W44rnQKp4ExIOtEiC2X4y6BXJqwi+wCtw/imVpeKERItO+ku3XOIe8/avmEVN9DzecGR1GowvWVNfbTJDQpZIMumO3vX2KkrHYsKDPIUZEetPNdk3aBSXuYteq4N1ybvmtkIg6Y/XLa5LyOzOv3cMCgv9jzDMEjsIFswxGuAwxyf1cXv0pl9aznuRXLfBQzuJun04ck02lX9bf1wi4cItyr5plTaS7qa+qi2DzA+bbUGoJKYW9OurdNgIN1osL8UzmGYIrY6prRHZKBVkhqM67f5PDo1T32iZhc2MgMg6iNm87+129q8ZxFO5UdfyWOOSYgyZOq9ZeHHNVoe7ciRKHATvk7MvMRUStGUT3i7sQvIgvkhrhuVBJC1TnPfgbt6SWe/w0bpbJnHfnMu8tPr435DUeOENQvR5CZrkEjDpnTH394gNbgvcX2yH0NpsY1F3Etr2HnrgM0V5yFF1keaPSNKXiwus3lLR6RnjCgHjx/Qtduz+Gh+seiTHSD6jWT2/vRO19qKlneqPMWgp6qhOV+pMe4NjyUnRJOHxCDYvNYPIMkXdZ0gSv0LNtFt3ArG26hiyKg+lbldMMlaQi+zHw2FFP1SaSm4maRVmSD4t/b441Jcl78twmSWsXhzN4HzEEQ2dQciMo8/ANwNyZYAQa+YAWENkUQPhCjDY5ZZpN1vNZ4HtTBgPEGqBjBUYfuJ3YwKVwYgSg1hFIknbB3iD6/y5HVgMWz6KH8oXxWRUtahbc46rqK+5qnW2KxNO+nAbMQmmHdtJHKJb9wFwXT32+neqqL9hQDw1qP075tJIqkiOkl6CZ+TomTVieQoPVKTWYHAJDVQ9DKsX+HzLypRAwH1Y4fCcCmSEaXNiBG/7/mFBX5WnE69hlQWAItyVxDGunGSZOIailg90RZMeDngYBSwSVx+PpzzYtqE5z5Jg4xCoIeSoOwtsuf4XnC2N+fmS1FM27MyuGZFbSp/xNnDR+wuGFJSa+eqlJhGOyqjHXwzEznhmDlQe3f0mEYDCjeYDyOZhB1YxGdrtYV+Zyu0a2V5zdI3/36uPKHQnH2XlHGxSfx8Pal1TolE9Zk+CDPMk1Q6zBLteYZxzKpN5+oeZyzkyCO6XiKCtq+idmeDJojmvrx78ayC23oqJ8ULTFA39FpTUOR4vouKaob7WQgrwzXlA9kYqWSJDrC0YmmcW3rKHQI88IGJ8oE/SD9oeomHxuhrcvN9DI3HiPBj1qqTMGg2uuXKUJLkpf0iDUU997Rsa5DxYLGbb4ScWazPQhjlPU23jNY6xmk55wi31TjWQ0paDgMO8UBuMJ7jwg1TutIHp/VBFQBwsMoltYYNgPG4zbl7lh7KB9lOBp3N/8oj8QyLiGcXzdxfB8QHNXylvPVCGvzva1xp2y37GP7SZ8gzp2yg6/6y6x3OOwAMY4VGV5xJMfjWejz7uiB3LGGh8MLVZ+Rsrqglt8Ui3Fv403f7KgtMgjUPSuCqjgxuSuXJWQr4EgBqfW7CXfvfSnpTug=="},{"id":"1ec773ca-65a6-41ea-975a-2587d075b5a8","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Configuration Management","description":"configuration-management","prompt":"Create comprehensive content for the Configuration Management section. Document the configuration system that manages data directories, results paths, and persistent application settings. Explain the structure of config.yaml and programmatic access through config.py. Describe the configuration loading and initialization sequence at application startup. Cover the user interface for modifying configuration settings and validation rules. Detail the fallback mechanisms and default values when configuration is missing. Explain the separation between global settings and workflow-specific parameters. Address cross-platform path handling and environment variable overrides. Provide examples of custom configuration for specialized workflows. Include troubleshooting guidance for configuration-related issues such as permission errors and path resolution failures. Make this section useful for both end-users managing their data locations and developers extending the configuration system.","order":7,"progress_status":"completed","dependent_files":"pyama-qt-slim/src/pyama_qt/lib/config.py,pyama-qt/src/pyama_qt/config.yaml","gmt_create":"2025-10-03T22:07:56.1348519+02:00","gmt_modified":"2025-10-03T22:16:07.9139839+02:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllPgfgMGT84WysP5aU7jVGgMURpRhjB/o43lFEdLq7azq5hkAT2OZJVBYtbtiDOaDkStDglSf7DvfXFp1mHf3nKLDFfJGzzyBLvsnvDERXwbMobx5inqzGkVbn71hLaXQK2pOGA2x8jfwc+DrNEWxghoCQEKrjbJBjnmOkzgy27XVzdZZMbmV5SbvOzD/brT6U/QArycwXIwUMZnkfx87N7YGsigjstHUzTGponW5TlHT8LvMbwOhC5rlJ+Rwl63dl/uC4J02Z7bTEmuDIN5aInRUJpnGStn8Pt4YAWl/Vrkn1J4MhOxKB5VDe9S+OS6mPcdVVqTI4L6QlCoQmrgDIdun8jvcv3sPsZDUpPeaoDv2OZmKMvSIrgkIaX3Y4vrtKN89kMIDEspz87UxPrxlw9ARB0XJqeTGdiRpJJF0O5FqK3shv1obYKAqycBjlnM8n4vUir67y0kMZikoa12gSYCYJUUonRG6VnIokIn5SqcJ1rMqeXKIXdeOZmlbc7cwJ4lH64fjla/JaDERaXKkpFOiNW3h7EZzKG6AIPwxPDTGT7PbKGT0LP9qAmwUUVPWIwgKFEASHhwV93cMDdWgGosyF6N3fqiA0LVtyVREJa75wfl+W06HCmTKBw6ftiJw5W3kfsT2rwBu98YrC0rrwNVkaDKDrT5lljpl2Ng1+rlVZs07QOJO2z1fM3822KxBm6w25+8o5F3Ze+PBJCw9XB2ZZyk0CHWMbQpKCoaRwkj+S2iE/n+IVTysnM2odxz/Ru+1d1mpOXbgXSB0QBeVEyxWG30E51jQe0vckiTU5Uhgm2hUNfc4zQEhQLUa7pZ4sxMvvWhPK5YZjdnkSASU/m1Xj4U7iYx/RaGdA9u/7vequpNQk4LEro6KB4fq1CibUNlTVxQd0tZK6NlrhwmiYadp4Kd0oWz9cygyufOsfroqtW5XRswQ7PAUWBpzYHKBC24Z9+mTOdOpZdE8Twey1ACPDv4MW04za0ewzhhUeIR6Z1XH9TlJOQEaK0kLK2ZuCXwm8Yygwhgw+QbNosym5qRNKindPRJtMuqULqTZ13Mm0661Ev4WJ/y9iNzRww94Oe9e10yRJX+NGr+GuLLHs6AnAEQjEJTNH06KKQHLT/gJJwT5Va+YS96IoUryWT8TVPAxIq8+2QkTjN3OYTRbQRHVU2X50rRn/ETI1LaOPmd5dG+4RgimVBG4FV7P06bzdBf+YVPPItr3fwHuHNNnhuBnyEvWatLyFbip1pDS96lWGbvOF57X/bksp4D8j36p/ga0HSf18n3W8/4mu1umIuctMbu19o9IAKJAucfwrGsJn7up8+w89RihAq1eEKSziLlvQLSxe93FhTr4pNArUomYv2723ZLzowSC+wndgxD5kXIo57uqdcvISTugAnsfpUIblGwQDj7es//TAG5G+GMnYCxiudu+jW26YI83wW2z3+Vc6fJD6hhUpv4R6PMSvN/wMO0vzY5goownpAtA50DPeW1cIPoGO7J+88HM5YzNUuqhXtbL1uGBFOIQNDDSJGWFKI5cN6OAAfa8o5+9hh7rtd7V6FwkJrCezv0PUtuskJN3BdU3WfzmakPRsTUeBUmLApjkodCIIblY4MG0fWG9Z3wa8804HI9UnzSllaPuJtEMcn0ofDDBuwf6Jf60JK6HmO+0LQYQkvS0VZK0Sp9izd2qr1OeWzXwh6VbN3afe93hdOXhWAQL7JR0wBMoiG3JbGVWesIdiRdPqcbZmMQ="},{"id":"4ccba304-272c-40d3-a267-299f6b637bde","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Analysis Models","description":"analysis-models","prompt":"Create comprehensive content for the Analysis Models section focused on the mathematical models available for curve fitting biological data. Explain the biological context and assumptions behind each model: Trivial (baseline), Maturation (sigmoidal growth), and Maturation-Blocked (inhibited maturation). Document the mathematical formulations, parameters, and their biological interpretations. Describe the implementation details including initialization strategies, constraints, and optimization algorithms. Provide guidance on model selection based on experimental conditions. Include examples of fitting results and interpretation of parameter values. Explain the extensibility mechanism that allows new models to be added through the models package. Address common fitting issues such as overfitting, convergence problems, and parameter identifiability. Link to API documentation for model interfaces and fitting utilities.","order":8,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/analysis/models/trivial.py,pyama-core/src/pyama_core/analysis/models/maturation.py,pyama-core/src/pyama_core/analysis/models/maturation_blocked.py","gmt_create":"2025-10-03T22:07:56.1379233+02:00","gmt_modified":"2025-10-03T22:16:11.229181+02:00","raw_data":"WikiEncrypted:tQBPcXM7MY1NSrvR+X2SQEPGCN03Aqc4Sl6ac0AhQqcglHvGPwoSiM/QQCWXtIOHCEz8cE92zGqMzbNyUkXFRlnidOl3yVpOAIj6BmEvVzcWdkE4E7utJ9HlA1cAON+cCx0YZhBq79Dr8r2NV46lvapTXOhBI76vBMYGWJJEjqBLCTLAih0YYfd4jh8pyBijuUOveQypTkcWZYoneEDaJHJugyHg97B3Y0WlpJ9fXXJUK/O6xskiZm6YqXIyZX4w7tyO38Xm8RbkrN11PymoXhhWtepWXDFVLUqP/NRenSBB+ySRiVazu1WOJHaS6e+9wC0tqeqFzNR3viZbZjJFjmcEM8Qf9TxPozWLJXbIJx/3JI9+vansV/DgFeW8EtmnyKqDonAzmWjS0E45UunnsslGeuah1ceDAnJgU/vrudGli622Q7G6tutUOH4IazxSNqfbTqzPmiyXR+8AHdBm9AbHuzhzqo0ADds/dlUxfumHaZx3YQdSCFG5Eer+76UnyrEEX3V18Qi+LKLLaFf2yDkIsA1+W7626YFku1/QS0dfoXWcMFlNR5zhX+ryEUDsncA6mq4A0FhgYJ9COwuDOopNBevOkerbbE+89bijouKMrgqdSqDAmyU1mFxg0PqgOsH9aI0OFQD8JlwEnl/x5qMG5PO6Vyvj75KD05zLm8HMZm52chqomeK9QCBq7KnxIcEDZammQEOlKzhYVNNsVn0L4EtaNYK3KEIePfKAxy0N1abJooaxEoFfVkoL6oQJXDZ8hIEEkn1DXurI2ilnJHujEB+nS5GVtFMzszntmwPT85dBdi5fB2AWGl9f/Gy4POKkAy3ZdJDbJd9OUo9gZqeXGpJ3NXr7k6EL0090W8DwdG/BHNdlQQoQugVcQ4ODNvGFG1xn7HVn81aT7PZ0M8dVVH7p3quB2gyvF47Kjd7g80drJQFYrKsA0IBt8iDNFoEvjKQpy2b4P7SSeD+7+VKopXBVw30jWKIlGUTQo0EShvpEQ036wEfcfO4qQlBm3zkOg6TlYwGywML3YKmnY/QBi5wq9KiLoqxwNH4Jlf+EFMLWdY9i8keNv3UMY0m+eB+JNy5J2l9EBz7TdYMos7QLtK53XjnKWTrDn/skKk/Yz2umL9FCm+9d0Vbco2n5v/67SATeN/Vitpog9/Y9nGnUQts3IZea+bGEIt/CIzK/MZ/MGB78TxYXUWW7iZlNcrNB0XfyR2/EMwdQzR3BZkTwFslFWFR6QWsrUy0eiHKAgQl77rh3B0bQM2tIk97O+7bz4+ICISi0xT9fEUMhWCuzRpomRVg3JL/DpasGs36O+9tHLcBp9jVjDLCzGrnZXCELxzXZWvlU/iPX/mp/fwPz7m/m/uYZzAtWwNjItbdntlacH/ncd2x2v+nv3+MH1cz0KHUfAKqSfqp5dO68uQZLo0s2AXWSbPGr9XKwY+DYUeaNB1Gj4za87ceSvdSyb5Rx04lKg6ZQ0C+FUnl0IfosxYV4hqgX9vIoQQLMwJVcTF1wgyzHqqxUa6iJtyHF0jRkYK8C4IK+DS7ru4itsOtq+KrPweCC4dLJ5PrH45wnl5WeIS2lTcRxpE05NOQOHjllM6aJDmvQhCQHl3Ruov0oxblS95W3wtg3WcElA/DApAuP5WObsiSZf6Nfgt4Oe8PD1afpxwe1wGZxtajOnS6FN7Bq7JdF4JYwg/khu03b9QIoJIGmyXV6qAH1wRWNS+NYe8Fo0A5vguYDtvHAjz9XhElx6X8N2NFZ9s15NclF2xgOFj7L+dTe5DI46sCwmtFvmGyH5NQHoDj27ACjTKRslZuXgyAOVTPmyQVdepYDQZqE2/nQEmHf0OS/VvVr+S77/Qb0Crq/6NlnI4dlsQ=="},{"id":"0dd33875-1369-42e6-8e74-9b4136d237e8","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Advanced Features","description":"advanced-features","prompt":"Create comprehensive content for the Advanced Features section focused on high-performance and specialized capabilities. Explain the threading and worker pattern implementation that maintains UI responsiveness during long-running operations. Document the parallel processing architecture including worker pool management and task distribution. Describe batch operations for processing multiple datasets with consistent parameters. Cover custom workflow creation by combining processing steps in non-standard sequences. Explain memory management strategies for large microscopy datasets. Address integration with external tools through CSV/YAML interchange formats. Provide examples of automating analysis pipelines through scripting. Include performance tuning recommendations for different hardware configurations. Make this section valuable for power users and researchers processing large-scale experiments.","order":9,"progress_status":"completed","dependent_files":"pyama-qt/src/pyama_qt/services/threading.py,pyama-core/src/pyama_core/processing/workflow/pipeline.py","gmt_create":"2025-10-03T22:07:56.1399771+02:00","gmt_modified":"2025-10-03T22:17:34.8654528+02:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd4e+ZlhOlcU0FTi9snO9I333hGFp1gmtcga/bpsuJGAo9fOYhg6U+uv5xd/Jo0u9Ej4qEnI2B5Zk/+PPKxwF9hkCAne1KLRi8XI2uht6LgvIXCcx0w0Sc5n5vjXvEj6wYKg3xyr3j/kFEEx773MaY3MZqGKYpl8oymMzCD2MKB2NBfjSxVmdAv02IDduaWrxh5s5pLv+r8zxqhS5WM/yoev7zQYg8fBCMOVQSFFrnb2SsG4O77dxUwBJcAbnUjVuEa7hznq74XHS8vIYtDBFw2WCK9BbVFFpnrVLy9SJRBOItMCmPW3BXZylzCP2sUjdQIkWALfHFvwXQx/3/jeRJSPalgnjE4zwH6gaYd6bzyh2OUsHBs+yBpvdGsAxEviOMnxhaapOUOr1/a9af+JoxfFbgZucticeM7ZuDdlQSA5tf05zOr1zudj37Tamh64XL2uVnlx7wT1jRtxt1RjYA/IZ1aX/592c06m7WctfZrUL2UkFHdklW5ehNG/PubwmGoYXJeP9+pfSWWr389TCzSVnIuDAUP0Fu7i1DEWqSQx8vK/qdwkSDt8/YXIhXQOLvwiepx/IgSwkZyV40l7OCrx2qLxfbqN7TkFGrN93G1kF+Jrlt2w/c7GMpM48qbL+k9igOp/JA76VXm9tDSorkLcXK29c3sjOnpo3i3Gh+qPcX5gfbxE/IZ1KvD1wKWfHcs7Z/DnseUxGipyjkcR/L70OL+idN0URfTfAdmmcN/HU2bV4aQtq5kQmGZwLhrh3f6dJjlzHh1NIp9D2W7lwmAQW+ZOm/wu3vuqLBgWXiy3luJVbHR2IjxdLhP5xAozPx1y2sBWz26LexTIGVvJgBC7t3zT47zdPyWb+J8txDjLfWIWIzJHqgyREPC5pW38rSeHnr1MnvoahHS2zNmqu5Ymysi47LqftZfXB8cGLVz9dVhs5P/FMpvyD6LTmFlFFuFZZpbL45S7PNUYlZGlsIkY9Xxv2JPtyMEClMwSsKmR/FS/ZlTjEzIfweoqk7fRXP/qSspIWPMbe1I5VMgMY9gvB95Y/JIEhivFc+VpyD1m5LWVW9AzxEc80IVeKTTPGTTSDJ3+dnCKKJUQenR7RdJeX9g9YFVbe8r8b9oQ99by9VKSXyuKEG5avlg6s2dzmtGKtT2YsmZxY4YcQDBwT1fnjsOG7RzCV/o/hn6EKY8K725J1JXT0Np1UpSLLUCJAsbKxQnRL65fp9GQJGO454AxbIb1aFT5egR3PZ4cbsHAHGGHiWLTk5qvxE4qgUZR/luqzsScEtOXYBviLK0LuO23GEpYya3x34ALCXBlsduhcghyfvsflU40AgpKILk8Spwpc+374ZMgcmO7oCcQtBAYuoa/jlcc9mvD2P4+zlDAeLNO01xFrAInkrC1wIfLYpS3C3BRCALf9etcbbJ7lrTWOgsdRXhFAY84rzCz+UyMS2WwHD6pX/Drn8gQjs9Q7xaDecENBrFqol45Mp5/wnRe7oZCOMgpce6b3Rn8WbuDx9vDm8DgaKctvDHjRLiTKaqbEw0x7oCRT0dxCUoDMWFBkEMALM7IDtmI4Xk9LD+HbyYodrwYJrJ1oDWZ4OoLtMAOguV5N9+uyW1LQTvJI2KYbaKSM/tKLNBixzxqwptrtKpiKAGgTb7/9U6ojxzDKMklMzS17iKFnlHQwALOHt/EgG2D+WwX31JuXOl9XGsjE8lDv2DZ79GtE1CKh0lAS0Q=="},{"id":"ae6bd138-634c-4e8c-ada9-7b6ffa97e6ca","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Troubleshooting","description":"troubleshooting","prompt":"Create comprehensive content for the Troubleshooting section. Document common issues encountered during installation, data loading, processing, and analysis. Organize problems by category (file format errors, memory issues, fitting failures, UI glitches). For each issue, provide clear symptoms, root cause analysis, and step-by-step resolution procedures. Include diagnostic techniques such as log file analysis, test script execution, and configuration validation. Address known limitations and workarounds for specific microscopy formats. Document the testing infrastructure and how users can verify their installation with test datasets. Provide guidance on reporting bugs with sufficient technical details. Make this section actionable and solution-oriented, helping users quickly resolve problems and minimize downtime.","order":10,"progress_status":"completed","dependent_files":"tests/test_workflow.py,tests/test_nd2.py,tests/test_bioio.py","gmt_create":"2025-10-03T22:07:56.1440739+02:00","gmt_modified":"2025-10-03T22:17:32.2735924+02:00","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0hGGy7zXJE5t3XZJK+9x87U7MbBuSJQZj5VKy37lfAZW3q2vRlHn50goW+5RwQbDeh+zv9O0CoDah5Ls/oHRJGXDHpuZyd+oU9YTyAoGfJxiTNHcvSBqKeylNEqv1wBvyRG+OR3bDyif6vSl/USinlATSqSQc7jaowctS5uYJBGxnsFDMYbSjmk/SlknUbYgZDobzqGI9nH8LR8e+ieLqewOKLh+/p7F7yE7nniV3suuDw8gMWrPN2mWaVZkqgDVcmCA0+esP3PxUaMHxH+W1UBNABt57mwRv4vYlRSpJNRcvv8dYYmGaT3EmfwhLxHKvjx4g6oe44cOasDgWVXSm1za6DiaAqkgm+xmGT3dX2p7ludCYVjrrd46RlAE4YP92d7wPYCtA6ZAmx9TCq1dfs8Uu7igGRnxPr4wRKzgmeZrbMKR+SnliDCBTDxuCxHEISWml0jOf3LxDxasM4qd1DXO8G+wAQoURsS6Ky0OSv/BTN/hSFT35U90QgYj4HRpsT8+ugg0IwGevD67yqUbQBQg/KG9xz2H94Qnrn3iqlIOAsdR7dUj5fF42p1joFGRsKFjuUxTRDczwmeKDvL95GBr1RH6Ifc1Xp37oTKbyn2LI7+pM81CYhLjYu74BYOnSD0njoSL+GDlx3YqToN8uocXUEAgYRRoH7WQ0EmcdipvsgJojOiMzTL9ahziOd71DClq8Eb9x5No3zI0dmb28D/5feD2+8WY9DyyI64tlk2AE6wYL9yMCMOP9X7uddAvCmJgHQQYGh9K2Z5cp+cLeBidpys8PYpDaeH7DQyxMKUCvmXMmdz6izxD9I6lQFEgtDoO5Nn5mC6HjMpLWsDIo06VFBqZGOifUvEXFBdGxB0o3R389mt+FrEsg5eXq11FRnwKkI2f0cD0h7G/vQ6ubddijxDu7NcaZ1itfru8+pqhPdV41KGla8lqFD42BMsyMkpztTVRyiMpcFAP8YA8xMIruEZ1lcbqm50COEMAGGnfLw8SUydR8GYY+7U6tlbO18H9DrEgXs3quELdC5K2dwphNeoOyeoKTiXn9exBslFB1SqDdvAv0ojyiw3IYS8D4mjMVooyp3EbZOu7L2HYA+UQb0TEeaBcV+2ggpTckvyahciuSjHjkzT1IZuH+oMIx6fs4S7bebnLvF/oD2cky/d4vq2/N92n30ce4BKtKZp9YELcfJXhzLt9eIQG9E9WBnimGNg3z0BtFm558u+bT7zFM4r4wnPamPxvGrwIS9ZYd5Bj8bp6V7KNJuBOIMWMHoJf+ZGewpKkGDqc03HVo/WFHKzCfWn9FewJU46RREBGAzfT8/+TXOfxcF5dwWM1s6DLTbZ8BLV1n/Sf82/ZoPggRAMh5CXz2Ej1edbOKLQdLX83k9PCwMmMHugmqIY1vQhLUisT3nxq8yFmgrFbKUQRnycS2E7dq8lXwMVxJmPZ"},{"id":"854b94a1-116c-4589-aef1-8ab73760437e","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"API Reference","description":"api-reference","prompt":"Create API documentation for the pyama-core public interfaces. Document all exported classes, functions, and modules in the core processing library. For each API endpoint, specify parameters, return values, exceptions, and usage examples. Cover the processing workflow services (SegmentationService, TrackingService, etc.) and their configuration options. Document data models such as ProcessingContext and ResultsPathsPerFOV. Include the analysis fitting interface and model registration system. Address versioning and backward compatibility guarantees. Provide code snippets showing integration scenarios, such as calling the pipeline programmatically or extending analysis models. Organize the reference by functional areas (processing, analysis, I/O). Make this section precise and technically accurate for developers building on the pyama platform.","order":11,"progress_status":"completed","dependent_files":"pyama-core/src/pyama_core/__init__.py,pyama-core/src/pyama_core/processing/workflow/services/types.py","gmt_create":"2025-10-03T22:07:56.1468717+02:00","gmt_modified":"2025-10-03T22:18:56.4603052+02:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPlAbu3AvGLNlwH2YbJEsK2ZFah4wHB5r1ikrL2gZxnF1Odfu62tlEJ3MBPJ7633/MWh4nEFbLKb9BIDgnA9KT71dI+Um6KWhlcqCRV2Bvq/BY9zXzanp9jwi9PTUm23DQkwuPBpAeMAIzeWr7EOceMXPXdJcivQQH1NTWwwV3/j6EWlILEcghma9i7IJlkdG+CSyERyNk/1aXudA8ybwfmFfnOD9tf8K06twlD0/mwBfaqd+xkMn+7s+vG6gFzGqbf32yLZ5tG1K+57HKnxRUeCP9GDvdwPUaZubQ1dDGXUbAivpBDXZJHbyl8tv9SawgO1ePezofy8S/8ToFLUWeJMKgkBYkzyWgQRmRuEnDNYhz3iRt5AW+y8v49uBFOC2KB0e6Evt0o+WW1Ct5jGBaCnDg+RyOPH6PlSaqckoGTNzGl4l+uuBJHOT6pk+XlTmgj8OKhdPVYQWHtCcXMi9ZCHd55DA0OfoKVs5yYyW00+CQa8fnKhbZSHNOsEKPJPGENjaf7efNOiA7Lw30mT/oVGoWCOxQWLU1jXbGjhgKsZq8fIHdMSk6Pp9vXndYtbYMbp7gQHtBZ8bAkzCiLwAlf+xv9gqW3ubBvqTgaRXh1yDmjlwG4qr4XZmDgJrxnoVMvyoSmP5zknBYAA3Wo8bOT7O5mtMbyLQ1LTyn69piNjnwlZ5Sx+gmtIZZqckAVGbMx0FjoSWwUAS/kRnnVjgY56YSVeJR2gWgJRwtIYQtId/j/GiZv/ONrr5iTLDQvAsQ+esCPHjE3TpbsQlOSgBxGnp5bFsiv/pdWZXuqVTaL3YmEY9xdhKYZ74KqOCpx/0x9zHbZil+QkekoHM9kv5Y5i46lsS1qW5Pwk9GdXm++99FlwGG7Xz2CPT2A4mlAzDJDZ8Jq2So6W81j33cGF2oLTK4UyDxcahdx4x9kgvLYdgap4/F7qUsH9xZ7ERctEX74CLA01Ub4KjDCbi9a+shSh+Q5XNhyhDz8T3Te3UgzOxmSPY/K1Jx7klB1yHA6Q5Z98jQxa53gVQXzGP8OgPFOFIxScf1S71aY3M/9JPjF3OJz75vCzrE2fwksoSR+hexjD0LMad/dEJp5Sxkc7OfojDMM57m4yIfiZbe/kvCKinGPU+bhdmw7CvRNRIPN4wk6Vo8bm7/nLiVkLf6wDbq+wfE/4d3QPvWWpdNqIl0GW6c8N6p46gyZDBOJRl/rMynAGFwimfO10p167eoF41GIWCNrtx/RXjQl/afgxID4QzxrH1JHbr6NP+UEbasHueloKKJg3BtIdYgRfrjuyPOS8XUyYfeKuC2S27uv9g0N8XxNY1CXUXNV5Xj6QNfBVct2dh4DlbdOjY9Ljexz41qZRJ+eYZ41pf38vqy3MMIpEGwUMD7rHT5CoTqsiMDRGE8hGkoW2eheRWt4Uhzy5WACf613C5M8B1Sat+fdfeWRge1ocRZjQ5hHkU+EKkUZcej3lu1W+QUeLakOdYlbBaqXAAiid10uMgsE5vy/hqpokimervCdtVkbHkWuYw6VSBuhMowhWNKjtFCSYzocDp0e3nzadS/zWAysGpYzvI0xofn0SyApFHWAAQIpSHG7UPOpEyyoEcykWkmW2gkEIe4jd/WX4RMApZxtybn9UnRUgKDQwJe+sCiXameT1oq9n2JHDtvOzBhfgwrFcU1yNV0tuf8Wqv8Si4qCSIb6T8k6+ZkBN/DNPhgonpX09QpJBq4hbg3PwfCeSZQs7UHb7TNCh"},{"id":"ed1218ec-ad9e-41c8-9029-cc8e38fe8f39","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"Developer Guide","description":"developer-guide","prompt":"Create comprehensive content for the Developer Guide section. Provide instructions for setting up a development environment, including dependency management with poetry, code formatting, and testing procedures. Explain the project structure and contribution workflow. Document the build and packaging process for all three components. Cover the testing strategy using pytest and Jupyter notebooks for algorithm validation. Explain the architecture patterns (MVC, service-oriented) and coding standards. Provide guidance on extending the application with new processing steps, analysis models, or UI components. Address cross-platform development considerations and Qt-specific development tools. Include performance profiling techniques and debugging strategies. Make this section essential for developers who want to contribute to pyama or build custom derivatives.","order":12,"progress_status":"completed","dependent_files":"pyama-core/pyproject.toml,pyama-qt/pyproject.toml,pyama-qt-slim/pyproject.toml","gmt_create":"2025-10-03T22:07:56.1495004+02:00","gmt_modified":"2025-10-03T22:19:31.026033+02:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C5IaSqlGa9MAZLOFAWytoRNMybnI1ljYEEif5toDwhEQ3OcIFU7EdxlfsxvLQBZG18EvYRX1eVG4iHGm3jG+Onz4vC52GOL0jNmuRZ/V2c6uBVf4gCNBMuX7e8D6A1N4Pj2lHcOwp+l+2/CWLBZqbGjP8qzw3u7ZnY+JQEoGXCIzlzvaqnU6yB92PmGC88+cabn2hjI/p5zoag8+dHgr19HOCwLyY5uyGhjr9s1RwRS6PgUE8brVaQPaILEAYxkd/ifTvxCpu+DSvVueF6H25jEc4303qq/w8rqc5c5AohOs4QR1JVNgRRjy9VlNyavbqnzNBDBP6vD2U1Mcc1bnboCLLSfWH9HAq3FV5mHYI0JwiGC2jA9SaNEUHxjrggW2fsNRwsEPAOq629F41YejJAJBVsxXYDBOM4rVX2iVpBliTVYXMhJC0gBmndYqg8I+jNCpqYf403aKMxKHtbdaB4QQqHnrZnkqH67T3a4NaKPMGG07ws+KzELyqLVd4tG+iigF/nkCq3TR/4XzL2xXpL0Jkb8Saz9oiDs8NDHRUJ8xNeTvGWNKiKxafdh9hggkJs+NOaLDTLXQCek/3ARZsNDQCfF9E4Vk2hSoQbvBFV6biiAljRy6+hGFCm5TGIkTy5TmbdP0fh60npe3TEm2HVpcgaCkUsEw9lAtrXb4ftPzk3oDZCeDG7ozQ6EO5+v9iBk6iNp8FI6669aXzCUM/NVXUikSKKXu63zpDEzPWI5JrXTh08vlznUCo63QEXVm+uMBdAS0W8NrvTQFIOdUeRcjU7Lt4EltcDxZ+YbSKl6ePra0HMLDtMHBQ913mmVnvG0CGN5kT3jpH57VkjLFBN+479TocYKKoXRCxWOJgQlEfUHZ0ctHlEiNNve2Ip9ciX6HTc2urt+5QMPxpxow/znDVvplR2zHUFaIjHwkr/pHBgKkYAS3HjHIPBFtxcTJB7vDNsr+DMs1LLLY4HLbs0TOOA8Qim8/UnyTciooDbQaPB73YaxDFkZua+9KqnHhrAj5WKAeEv+3KcEL5GospH4O9I61cnp9BS0tub/A4zvW5n/ApWOxz0Yb+XH5gMEkeegZEYqk+EY7JHoM/YWVVrT4zmnsYe+zR9NIYki4fiNP7csZGQ6A5y3QvIlC6YZb+oPI7sxu8fvNXXVOljWibn9j43EjFRd5Zm7IqWtBI1pbD8J5JcmAJDf76nV8etROj85caE8nVzBWEcvsxoYcskLbVYNAZloDb+KkxFwAntBJoAwtpfy+HPBQlaGAK3CcNSclbSftWwsYdZ9c4uDDWjxHBmQrVa8jJVDB8A02WWum0nNAkdbDQ1Epx5DdWJTZWvquWSCOO2+Q0nzzDuRFTUAFhgZbyCK9Gikn/VKhr25ALtVEgK0BhVcB/D5A0vE05YKQe8zrgRu2tX9+DG+ZkRzQSI1geQNCw/g1mD0QOu9hPsYrAmRLTsQUci6oH3cCNe1olEIXuk9mUfn2x1/ntOysYkgqgvxrXkmS/4yqF/Bs6VfEDsui00QkqWxvfgTKheGxGbfPSOltDdSPwqAnpGJ+LRazscq3AiiGXurQngV9S2Xo8vRL4J2HzQvD9E3KgA=="}],"wiki_items":[{"catalog_id":"20c9e0de-be63-4ea7-969a-774669aa760c","title":"Installation and Setup","description":"installation-setup","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"37977cd3-f04c-4f05-8004-14194d44121c","gmt_create":"2025-10-03T22:11:09.4482221+02:00","gmt_modified":"2025-10-03T22:11:09.4543806+02:00"},{"catalog_id":"f1770889-5a8f-4023-94a9-dc28dd55d95e","title":"Introduction","description":"introduction","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"d5ac7676-3e2a-4019-a596-979ce719812b","gmt_create":"2025-10-03T22:11:24.9743822+02:00","gmt_modified":"2025-10-03T22:11:24.9849511+02:00"},{"catalog_id":"4aecb941-332a-4e57-97c5-ea1dba05f437","title":"User Interface Overview","description":"user-interface-overview","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"a900df0f-c685-4b51-bef5-341fa592c526","gmt_create":"2025-10-03T22:11:52.5619583+02:00","gmt_modified":"2025-10-03T22:11:52.5685857+02:00"},{"catalog_id":"971318b3-b951-4b95-914e-55ee91bb0a8b","title":"Analysis Module","description":"analysis-module","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"d40a3658-5bc6-4fe2-8ec9-3963bff3e184","gmt_create":"2025-10-03T22:12:58.2659098+02:00","gmt_modified":"2025-10-03T22:12:58.2725667+02:00"},{"catalog_id":"e51c01ad-283a-4d22-b505-d0a31233178b","title":"Processing Module","description":"processing-module","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"9184d7c3-d68b-4aba-8078-a229c6203c42","gmt_create":"2025-10-03T22:13:09.0453142+02:00","gmt_modified":"2025-10-03T22:13:09.053016+02:00"},{"catalog_id":"88a939bf-eb4a-4be8-9c88-a3d1ca9f0754","title":"Visualization Module","description":"visualization-module","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"f2c9d8ee-e1cf-47ad-b78f-f33d71207500","gmt_create":"2025-10-03T22:13:25.8443464+02:00","gmt_modified":"2025-10-03T22:13:25.853046+02:00"},{"catalog_id":"1ec773ca-65a6-41ea-975a-2587d075b5a8","title":"Configuration Management","description":"configuration-management","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"bfe3f66d-3352-4e59-8999-cf6a7a07fc2d","gmt_create":"2025-10-03T22:16:07.9037042+02:00","gmt_modified":"2025-10-03T22:16:07.9144968+02:00"},{"catalog_id":"4ccba304-272c-40d3-a267-299f6b637bde","title":"Analysis Models","description":"analysis-models","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"dcfc393e-ddaf-4422-bb46-37c119272738","gmt_create":"2025-10-03T22:16:11.2230279+02:00","gmt_modified":"2025-10-03T22:16:11.22969+02:00"},{"catalog_id":"d84c9a8e-53c1-4dbd-abc0-9fd2f8d4e5e5","title":"Core Processing Pipeline","description":"core-processing-pipeline","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"f7bfca94-3657-4a74-8214-a6d7e6c54125","gmt_create":"2025-10-03T22:17:00.2774289+02:00","gmt_modified":"2025-10-03T22:17:00.2861867+02:00"},{"catalog_id":"ae6bd138-634c-4e8c-ada9-7b6ffa97e6ca","title":"Troubleshooting","description":"troubleshooting","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"e72bd163-d654-4508-b0f8-6d073108e8f3","gmt_create":"2025-10-03T22:17:32.2679729+02:00","gmt_modified":"2025-10-03T22:17:32.2741027+02:00"},{"catalog_id":"0dd33875-1369-42e6-8e74-9b4136d237e8","title":"Advanced Features","description":"advanced-features","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"df29b954-d017-4e2c-9528-3632385b5526","gmt_create":"2025-10-03T22:17:34.8592653+02:00","gmt_modified":"2025-10-03T22:17:34.8654528+02:00"},{"catalog_id":"854b94a1-116c-4589-aef1-8ab73760437e","title":"API Reference","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"3548cec8-3320-4bf1-be0c-17712fbac556","gmt_create":"2025-10-03T22:18:56.4490376+02:00","gmt_modified":"2025-10-03T22:18:56.4608162+02:00"},{"catalog_id":"124d3a1a-3657-4cf5-8491-4c9e541429e2","title":"Data Loading","description":"data-loading","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"04c216f8-be79-4879-90be-c708ebf959c7","gmt_create":"2025-10-03T22:18:59.9639593+02:00","gmt_modified":"2025-10-03T22:18:59.9702367+02:00"},{"catalog_id":"ed1218ec-ad9e-41c8-9029-cc8e38fe8f39","title":"Developer Guide","description":"developer-guide","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"432ec625-3f36-421f-9d60-209f9741bb4b","gmt_create":"2025-10-03T22:19:31.0166092+02:00","gmt_modified":"2025-10-03T22:19:31.026546+02:00"},{"catalog_id":"6d143b2b-4f5d-402a-86dc-131073e11363","title":"Project Navigation","description":"project-navigation","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"cdfa8d34-b329-4a22-939e-9a39190ff174","gmt_create":"2025-10-03T22:20:24.4262014+02:00","gmt_modified":"2025-10-03T22:20:24.4370143+02:00"},{"catalog_id":"c45d74a6-adf0-466d-b366-098d9225fd0e","title":"Data Import and Export","description":"analysis-data-import-export","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"41d299f4-982e-4c99-a126-2a735769fb3a","gmt_create":"2025-10-03T22:20:24.869416+02:00","gmt_modified":"2025-10-03T22:20:24.8770991+02:00"},{"catalog_id":"b69c42a4-8454-415f-b1f9-c03dfd8a8c58","title":"Pipeline Orchestration","description":"pipeline-orchestration","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"2cea136e-1270-49d4-9b78-3cab16c1fdf5","gmt_create":"2025-10-03T22:20:52.0901218+02:00","gmt_modified":"2025-10-03T22:20:52.0967901+02:00"},{"catalog_id":"9c6916bc-e8bb-4528-8d69-2d95eaeda25b","title":"Trivial Model","description":"trivial-model","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"7264b7c7-9d19-46be-9ef4-ff1cbccbc7a0","gmt_create":"2025-10-03T22:21:52.708415+02:00","gmt_modified":"2025-10-03T22:21:52.7193866+02:00"},{"catalog_id":"43245262-889f-4f7f-a2ec-c7da0c7eed83","title":"Parallel Processing","description":"parallel-processing","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"9e74d125-a684-4682-a19a-a672ca298256","gmt_create":"2025-10-03T22:21:54.2744337+02:00","gmt_modified":"2025-10-03T22:21:54.2858548+02:00"},{"catalog_id":"63147ce0-0997-492a-97cf-4a038ad7300d","title":"Processing API","description":"api-reference-processing","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"77e00b46-c029-4b07-b863-97e1d8f7d163","gmt_create":"2025-10-03T22:22:48.3674199+02:00","gmt_modified":"2025-10-03T22:22:49.320794+02:00"},{"catalog_id":"b9f6face-df3b-43b8-a135-f9cfc287f9f9","title":"Workflow Configuration","description":"workflow-configuration","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"832f34f1-774c-4a5c-bd18-4978366f1a2c","gmt_create":"2025-10-03T22:23:16.2763346+02:00","gmt_modified":"2025-10-03T22:23:16.2871443+02:00"},{"catalog_id":"97160f14-68b3-4a00-bd6f-ff852ef69834","title":"Image Viewing","description":"image-viewing","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"b3f363d2-2c8b-4084-bbc2-b245c6edc487","gmt_create":"2025-10-03T22:23:32.4728682+02:00","gmt_modified":"2025-10-03T22:23:32.4790375+02:00"},{"catalog_id":"ccdad9e2-7e33-4520-ad6a-bdc40fd027f5","title":"Model Selection","description":"analysis-model-selection","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"d23c65a6-bc7c-4776-9e89-e8f41a1a8b22","gmt_create":"2025-10-03T22:24:28.7265521+02:00","gmt_modified":"2025-10-03T22:24:28.7349304+02:00"},{"catalog_id":"19f04139-24a5-4bdb-bd10-42130b293f6c","title":"Processing Services","description":"processing-services","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"936e0b53-6022-4ffb-be0a-8a76b0385868","gmt_create":"2025-10-03T22:24:41.2955311+02:00","gmt_modified":"2025-10-03T22:24:41.3079536+02:00"},{"catalog_id":"423095d9-64aa-4ef0-a6de-4192c54fac95","title":"Maturation Model","description":"maturation-model","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"03cd6b2d-4d5a-4826-b8d1-b0269fe8a936","gmt_create":"2025-10-03T22:25:05.187155+02:00","gmt_modified":"2025-10-03T22:25:05.1927712+02:00"},{"catalog_id":"7bdb35c7-5588-48c1-b99b-606cc1e82237","title":"Batch Operations","description":"batch-operations","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"17209690-54b9-4cb9-8851-603ab343e803","gmt_create":"2025-10-03T22:26:07.8710126+02:00","gmt_modified":"2025-10-03T22:26:07.8824956+02:00"},{"catalog_id":"1176009e-a603-409a-8ed0-f6b6a262e450","title":"Analysis API","description":"api-reference-analysis","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"7333f24c-d4fe-4292-b04a-e01c4252837f","gmt_create":"2025-10-03T22:26:20.4412312+02:00","gmt_modified":"2025-10-03T22:26:20.4464283+02:00"},{"catalog_id":"5d24c078-02c9-446b-a192-57339f8294d1","title":"Pipeline Execution","description":"pipeline-execution","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"98b6e891-06fb-4cbc-a218-a32daecbb8a2","gmt_create":"2025-10-03T22:26:55.8238721+02:00","gmt_modified":"2025-10-03T22:26:55.8307396+02:00"},{"catalog_id":"462724e4-58cb-41ef-9fc2-e4e085ad453e","title":"Trace Analysis","description":"trace-analysis","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"d05b66f0-38a1-46ca-8aee-5de480b8e9ef","gmt_create":"2025-10-03T22:27:47.5208984+02:00","gmt_modified":"2025-10-03T22:27:47.5380517+02:00"},{"catalog_id":"b54e78f2-eb40-4ec4-9254-2bfda2166461","title":"Parameter Configuration","description":"analysis-parameter-configuration","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"7ac06806-7587-4603-aaa9-ba91be0a2aeb","gmt_create":"2025-10-03T22:27:54.7829015+02:00","gmt_modified":"2025-10-03T22:27:54.9500114+02:00"},{"catalog_id":"66150031-b3c4-4cfc-90ee-cfa9c51ccca1","title":"Maturation-Blocked Model","description":"maturation-blocked-model","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"09c4a730-144f-49ee-a816-0a3c26f9b61a","gmt_create":"2025-10-03T22:28:16.2442472+02:00","gmt_modified":"2025-10-03T22:28:16.2560733+02:00"},{"catalog_id":"dfbca4d9-cc99-44b1-aa90-0d441840161a","title":"I/O API","description":"api-reference-io","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"66ab362a-2eee-4a25-9ab2-cff29e68e39c","gmt_create":"2025-10-03T22:29:09.7867324+02:00","gmt_modified":"2025-10-03T22:29:09.7959929+02:00"},{"catalog_id":"2375f829-83c2-414f-9042-266cf285716c","title":"Custom Workflows","description":"custom-workflows","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"07c45071-c051-4c6e-8e82-61ff7828096a","gmt_create":"2025-10-03T22:29:19.8323234+02:00","gmt_modified":"2025-10-03T22:29:19.8410484+02:00"},{"catalog_id":"5454ec2e-8bd8-4670-84d4-ad281b3b5522","title":"Results Merging","description":"results-merging","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"b98f44db-de73-44d8-b639-a4daeb8f0521","gmt_create":"2025-10-03T22:29:33.1709396+02:00","gmt_modified":"2025-10-03T22:29:33.1813142+02:00"},{"catalog_id":"cb515252-7491-41a5-beca-c8078e31b902","title":"Synchronized Selection","description":"synchronized-selection","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"676fb1d8-8e5f-48b8-b90a-d00580d53bdc","gmt_create":"2025-10-03T22:30:32.6956189+02:00","gmt_modified":"2025-10-03T22:30:32.7070462+02:00"},{"catalog_id":"95174544-7040-4817-9db5-11aca4a670ae","title":"Batch Fitting","description":"analysis-batch-fitting","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"54082136-12f0-410f-9342-009de6934793","gmt_create":"2025-10-03T22:30:43.4960027+02:00","gmt_modified":"2025-10-03T22:30:43.5021808+02:00"},{"catalog_id":"56dbfb81-7701-4a96-a25c-48bcb8d32353","title":"Results Visualization","description":"analysis-results-visualization","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"8a664e6b-d292-4417-bcec-28fd9b8f791a","gmt_create":"2025-10-03T22:30:56.4432269+02:00","gmt_modified":"2025-10-03T22:30:56.4503791+02:00"},{"catalog_id":"69a0015a-1bfd-4e24-b90d-0d8ef44097bd","title":"Background Correction","description":"background-correction","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"e5a25236-7c62-40bf-8ead-7b7b54996b57","gmt_create":"2025-10-03T22:31:51.7864149+02:00","gmt_modified":"2025-10-03T22:31:51.7969611+02:00"},{"catalog_id":"6e34e6de-e4f7-41d8-83eb-57cbdd38e33b","title":"Correction Service","description":"correction-service","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"239f81a0-854c-412b-91b6-7c698a6e0b4e","gmt_create":"2025-10-03T22:32:02.0892565+02:00","gmt_modified":"2025-10-03T22:32:02.0950678+02:00"},{"catalog_id":"f9234b44-c58a-4d8a-95a6-32aee0a4e67a","title":"Trivial Model API","description":"analysis-api-trivial-model","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"92b13bd0-b8e1-4e74-9d9c-c74239a0a949","gmt_create":"2025-10-03T22:32:18.0642908+02:00","gmt_modified":"2025-10-03T22:32:18.0746038+02:00"},{"catalog_id":"9b96ff5a-acda-4222-bff8-90d6044c8d7f","title":"Workflow Orchestration","description":"api-reference-processing-workflow","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"7b609a6d-07fd-41fd-91ba-4e7fab78d7c9","gmt_create":"2025-10-03T22:33:25.3233264+02:00","gmt_modified":"2025-10-03T22:33:25.3296782+02:00"},{"catalog_id":"4d3a3898-df8c-4852-8dff-7626e5aa0ce9","title":"Segmentation","description":"segmentation","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"dfc220f6-3ce6-4519-9ef4-d9251b940d5d","gmt_create":"2025-10-03T22:33:27.4394854+02:00","gmt_modified":"2025-10-03T22:33:27.4498693+02:00"},{"catalog_id":"01710c97-6a97-4fda-9e40-76be2969c7b2","title":"Microscopy Data I/O","description":"io-microscopy-data","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"18a9fa57-3c29-43c0-b18c-176a83734a76","gmt_create":"2025-10-03T22:33:29.6270513+02:00","gmt_modified":"2025-10-03T22:33:29.6373445+02:00"},{"catalog_id":"b9aaf1aa-3c8b-44c4-9306-eefbd8d69d04","title":"Segmentation Service","description":"segmentation-service","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"d66886a7-beb2-4ed3-83a0-c348f8dc8f51","gmt_create":"2025-10-03T22:34:47.5235274+02:00","gmt_modified":"2025-10-03T22:34:49.0045628+02:00"},{"catalog_id":"1e1a8c69-cfa0-45e6-bcab-8ec89a3307bd","title":"Segmentation Service","description":"api-reference-processing-segmentation","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"fcd6a43d-4b78-4f0b-bc4f-3b6fea29e87f","gmt_create":"2025-10-03T22:34:57.2073099+02:00","gmt_modified":"2025-10-03T22:34:57.218107+02:00"},{"catalog_id":"ff0d8b2d-a3e1-4a69-9d4c-bd7e63d57e0c","title":"Tracking","description":"tracking","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"7b8f3459-dca3-477d-84fc-f64cf96f0c9c","gmt_create":"2025-10-03T22:36:01.7680826+02:00","gmt_modified":"2025-10-03T22:36:01.7779475+02:00"},{"catalog_id":"8aee56e2-2343-453e-af67-892aa1de4590","title":"Processing CSV I/O","description":"io-csv-processing","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"e438d169-d5a2-4ccc-b7ef-0cf7f2b277e2","gmt_create":"2025-10-03T22:36:12.5609408+02:00","gmt_modified":"2025-10-03T22:36:12.5718215+02:00"},{"catalog_id":"21dfbfc3-b94c-4f75-93da-a9b6cf5fa876","title":"Tracking Service","description":"tracking-service","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"55ddf84d-8dd8-4e1f-8f99-be503a8a39ee","gmt_create":"2025-10-03T22:36:12.846691+02:00","gmt_modified":"2025-10-03T22:36:12.8532103+02:00"},{"catalog_id":"e54a7c3f-b2e3-4064-8e3d-96cbb5000cf5","title":"Maturation-Blocked Model API","description":"analysis-api-maturation-blocked-model","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"12cd291b-babe-4f85-ba55-4c915412bae7","gmt_create":"2025-10-03T22:37:37.6772272+02:00","gmt_modified":"2025-10-03T22:37:37.6880108+02:00"},{"catalog_id":"4ace7ee2-64d8-412b-8dbf-cfca5b52ad90","title":"Analysis CSV I/O","description":"io-csv-analysis","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"b5abdb0a-131f-4e3f-a899-25607bc6dcb8","gmt_create":"2025-10-03T22:37:37.8863714+02:00","gmt_modified":"2025-10-03T22:37:37.8930924+02:00"},{"catalog_id":"28147b1d-4322-47e4-b649-f63755579206","title":"Tracking Service","description":"api-reference-processing-tracking","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"f0abc051-fafa-49f2-b805-be390c823186","gmt_create":"2025-10-03T22:37:40.5835302+02:00","gmt_modified":"2025-10-03T22:37:40.5896745+02:00"},{"catalog_id":"e6b3c9d9-a8a4-40a9-b7f3-68f36951aed0","title":"Extraction Service","description":"extraction-service","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"3462dea4-e0a5-4f41-94b1-b68ba7b1c5f7","gmt_create":"2025-10-03T22:38:57.2885949+02:00","gmt_modified":"2025-10-03T22:38:57.298868+02:00"},{"catalog_id":"0962ee53-e1d4-4611-baaa-7c67f36cf5fa","title":"Feature Extraction","description":"feature-extraction","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"fa9579bb-34d8-4755-aa1d-18f0551b2c01","gmt_create":"2025-10-03T22:38:57.3906716+02:00","gmt_modified":"2025-10-03T22:38:57.3962388+02:00"},{"catalog_id":"50af28d9-6592-41a6-8c53-0dac8d9e2267","title":"Fitting Engine API","description":"analysis-api-fitting-interface","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"980f60f1-5785-4969-aadc-4e4c63fd7582","gmt_create":"2025-10-03T22:39:06.0916671+02:00","gmt_modified":"2025-10-03T22:39:06.1001713+02:00"},{"catalog_id":"bc10a71b-18a0-493c-9432-7527abe06455","title":"Feature Extraction Service","description":"api-reference-processing-extraction","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"0ca74f1f-6ea3-4c43-ab14-0f8128636638","gmt_create":"2025-10-03T22:40:22.0176599+02:00","gmt_modified":"2025-10-03T22:40:22.022776+02:00"},{"catalog_id":"91540790-5797-4003-aaf7-48852cedb91a","title":"Copying Service","description":"copying-service","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"449ef855-f521-4215-8ed4-40784fedfc4d","gmt_create":"2025-10-03T22:40:39.4954017+02:00","gmt_modified":"2025-10-03T22:40:39.5064426+02:00"},{"catalog_id":"943236ea-bb70-4e43-b1f8-403d4b306dc1","title":"YAML Results Serialization","description":"io-yaml-results","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"8869432f-2874-488d-8384-5f3ff2bd6f89","gmt_create":"2025-10-03T22:41:17.6160759+02:00","gmt_modified":"2025-10-03T22:41:17.6284852+02:00"},{"catalog_id":"354f92cd-30c0-4ae7-91f2-68f5bfe40d14","title":"Model Factory System","description":"analysis-api-model-factory","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"118f608f-3fa9-4930-902f-f78c1a3f7be6","gmt_create":"2025-10-03T22:41:37.5383775+02:00","gmt_modified":"2025-10-03T22:41:37.5445985+02:00"},{"catalog_id":"4b4bfbfa-2bdd-4a4e-a4a4-cc84fa36b593","title":"Background Correction Service","description":"api-reference-processing-correction","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"187c956e-2de6-466b-ab33-af9e191bce02","gmt_create":"2025-10-03T22:42:11.0801038+02:00","gmt_modified":"2025-10-03T22:42:11.0862809+02:00"},{"catalog_id":"2faa90dd-fb04-46d2-ae38-63e83fe9ac58","title":"Service Architecture","description":"api-reference-processing-services-base","extend":"{}","progress_status":"completed","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","id":"3c6dbe52-21db-41f0-a3c5-509bfef06ae4","gmt_create":"2025-10-03T22:42:27.5215099+02:00","gmt_modified":"2025-10-03T22:42:27.5340854+02:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# PyAMA Project Analysis\n\n## 1. Project Introduction\n\nPyAMA (Python Analysis for Microscopy Applications) is a comprehensive software suite designed for processing, analyzing, and visualizing microscopy data. The project consists of multiple interconnected components that provide a complete workflow for researchers working with advanced microscopy techniques.\n\nThe core purpose of PyAMA is to streamline the analysis of complex microscopy datasets, particularly those generated by ND2 and other bioimaging formats. The system enables users to process raw microscopy data, perform quantitative analysis on cellular features, and visualize results through an intuitive graphical interface.\n\nPrimary objectives include:\n- Providing a modular architecture for microscopy data processing\n- Enabling seamless workflow from raw data to analyzed results\n- Offering a user-friendly Qt-based interface for interactive analysis\n- Supporting extensible analysis models and processing pipelines\n\nThe target audience comprises researchers and scientists in life sciences who require robust tools for analyzing microscopy data, particularly those working with time-lapse imaging, cell tracking, and fluorescence microscopy.\n\n## 2. Technical Architecture\n\nThe PyAMA project follows a monorepo structure with three main components: `pyama-core`, `pyama-qt`, and `pyama-qt-slim`. This architecture enables code sharing while maintaining separation of concerns between core processing logic and user interface components.\n\n```mermaid\ngraph TD\n    SharedLib[pyama-core] --\u003e pyama-qt\n    SharedLib --\u003e pyama-qt-slim\n    pyama-qt --\u003e MainApp[Main Application]\n    pyama-qt-slim --\u003e SlimApp[Slim Application]\n    pyama-core --\u003e Processing[Processing Modules]\n    pyama-core --\u003e Analysis[Analysis Models]\n    pyama-core --\u003e IO[Data I/O]\n```\n\nThe system implements a Model-View-Controller (MVC) pattern within the Qt interface components, with clear separation between UI elements, controllers that manage application logic, and models that represent application state. The architecture also incorporates a worker pattern for handling long-running operations in background threads to maintain UI responsiveness.\n\nData flow follows a consistent pattern across components:\n1. User interaction through UI panels\n2. Signal emission to controller components\n3. Controller coordination with models and background workers\n4. Data processing through core functionality\n5. Model updates that propagate back to UI components\n\n```mermaid\nflowchart TD\n    A[User Interface] --\u003e B[Panel Components]\n    B --\u003e C[Controller]\n    C --\u003e D[Background Worker]\n    D --\u003e E[pyama-core Processing]\n    E --\u003e F[Data Models]\n    F --\u003e G[UI Update]\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\nThe primary entry point for the application is the `main.py` file, which initializes the Qt application and creates the main window with tabbed interface.\n\nKey relative file path: `pyama-qt/src/pyama_qt/main.py`\n\n### Core Modules\nThe project's functionality is organized into three main modules accessible through tabs in the UI:\n\n- **Processing**: Handles raw data ingestion, preprocessing, and workflow execution\n- **Analysis**: Provides tools for data fitting and quantitative analysis\n- **Visualization**: Enables interactive exploration of processed results\n\nEach module follows a consistent pattern of Page-Controller-Model architecture.\n\nKey relative file paths:\n- `pyama-qt/src/pyama_qt/processing/page.py`\n- `pyama-qt/src/pyama_qt/analysis/page.py`\n- `pyama-qt/src/pyama_qt/visualization/page.py`\n\n### Configuration Approach\nConfiguration is managed through both code and external files. The application uses a YAML configuration file for default settings, while runtime configuration is handled through dedicated model classes.\n\nKey relative file paths:\n- `pyama-qt/src/pyama_qt/config.yaml`\n- `pyama-qt/src/pyama_qt/config.py`\n\n### External Dependencies\nThe project leverages several key Python packages for scientific computing and GUI development.\n\nKey relative file paths:\n- `pyama-core/pyproject.toml`\n- `pyama-qt/pyproject.toml`\n\n### Integration Points\nThe system integrates with various microscopy file formats through the bioio library and provides extensible points for adding new analysis models and processing steps.\n\nKey relative file paths:\n- `pyama-core/src/pyama_core/io/microscopy.py`\n- `pyama-core/src/pyama_core/io/nikon.py`\n\n```mermaid\ngraph LR\n    A[pyama-core] --\u003e B[Processing]\n    A --\u003e C[Analysis]\n    A --\u003e D[IO]\n    B --\u003e E[Background]\n    B --\u003e F[Extraction]\n    B --\u003e G[Segmentation]\n    B --\u003e H[Tracking]\n    C --\u003e I[Models]\n    C --\u003e J[Fitting]\n    D --\u003e K[Microscopy]\n    D --\u003e L[CSV]\n    D --\u003e M[YAML]\n```\n\n## 4. Key Features\n\n### Tabbed Interface Architecture\nThe application provides a unified interface with three main tabs for different stages of the microscopy analysis workflow. This organization allows users to progress systematically from data processing to analysis and visualization.\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Processing\n    Processing --\u003e Analysis: Complete Processing\n    Analysis --\u003e Visualization: Complete Analysis\n    Visualization --\u003e Processing: New Data\n    Visualization --\u003e Analysis: Re-analyze\n```\n\n### Processing Workflow\nThe processing module enables users to load microscopy data, configure processing parameters, and execute workflows for background correction, feature extraction, segmentation, and tracking.\n\nImplementation highlights:\n- Integration with bioio for reading various microscopy formats\n- Configurable processing parameters through UI controls\n- Background threading for long-running operations\n\nKey relative file path: `pyama-qt/src/pyama_qt/processing/controller.py`\n\n### Analysis Capabilities\nThe analysis component provides tools for fitting mathematical models to extracted features and visualizing the results. It supports loading existing results and performing batch fitting operations.\n\nImplementation highlights:\n- CSV data import/export functionality\n- Progress tracking for long-running fitting operations\n- Error handling and user feedback mechanisms\n\nKey relative file path: `pyama-qt/src/pyama_qt/analysis/controller.py`\n\n### Visualization System\nThe visualization module offers interactive exploration of processed results, including project navigation, image viewing, and trace analysis. It supports multi-channel visualization and frame navigation.\n\nImplementation highlights:\n- Synchronized selection between trace and image panels\n- Status messaging and error reporting\n- Dynamic loading of project data and FOV-specific information\n\nKey relative file path: `pyama-qt/src/pyama_qt/visualization/controller.py`\n\nSources:\n- [main.py](pyama-qt/src/pyama_qt/main.py)\n- [config.yaml](pyama-qt/src/pyama_qt/config.yaml)\n- [pyproject.toml](pyama-core/pyproject.toml)\n- [processing/page.py](pyama-qt/src/pyama_qt/processing/page.py)\n- [analysis/page.py](pyama-qt/src/pyama_qt/analysis/page.py)\n- [visualization/page.py](pyama-qt/src/pyama_qt/visualization/page.py)\n- [processing/controller.py](pyama-qt/src/pyama_qt/processing/controller.py)\n- [analysis/controller.py](pyama-qt/src/pyama_qt/analysis/controller.py)\n- [visualization/controller.py](pyama-qt/src/pyama_qt/visualization/controller.py)\n- [base.py](pyama-qt/src/pyama_qt/ui/base.py)\n\u003c/blog\u003e","gmt_create":"2025-10-03T22:05:49.6198347+02:00","gmt_modified":"2025-10-03T22:05:49.6198347+02:00","id":"ff12002f-e8e1-454e-aba1-a67218d00913","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-10-03T22:04:55.7060221+02:00","gmt_modified":"2025-10-03T22:04:55.7060221+02:00","id":"594dbfe7-57e4-4d56-a81d-ccc58d020e44","repo_id":"a6edc798-0fbd-44e2-aa40-2c82e162e120"},"wiki_repo":{"id":"a6edc798-0fbd-44e2-aa40-2c82e162e120","name":"pyama","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── pyama-core\\n│   ├── src\\\\pyama_core\\n│   │   ├── analysis\\n│   │   │   ├── models\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── maturation.py\\n│   │   │   │   ├── maturation_blocked.py\\n│   │   │   │   └── trivial.py\\n│   │   │   └── fitting.py\\n│   │   ├── io\\n│   │   │   ├── __init__.py\\n│   │   │   ├── analysis_csv.py\\n│   │   │   ├── microscopy.py\\n│   │   │   ├── nikon.py\\n│   │   │   ├── processing_csv.py\\n│   │   │   └── results_yaml.py\\n│   │   ├── processing\\n│   │   │   ├── background\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── tile_interp.py\\n│   │   │   ├── extraction\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── feature.py\\n│   │   │   │   └── trace.py\\n│   │   │   ├── segmentation\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── log_std.py\\n│   │   │   ├── tracking\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── iou.py\\n│   │   │   └── workflow\\n│   │   │       ├── services\\n│   │   │       │   ├── steps\\n│   │   │       │   │   ├── __init__.py\\n│   │   │       │   │   ├── correction.py\\n│   │   │       │   │   ├── extraction.py\\n│   │   │       │   │   ├── segmentation.py\\n│   │   │       │   │   └── tracking.py\\n│   │   │       │   ├── __init__.py\\n│   │   │       │   ├── base.py\\n│   │   │       │   ├── copying.py\\n│   │   │       │   └── types.py\\n│   │   │       ├── __init__.py\\n│   │   │       └── pipeline.py\\n│   │   └── __init__.py\\n│   └── pyproject.toml\\n├── pyama-qt\\n│   ├── src\\\\pyama_qt\\n│   │   ├── analysis\\n│   │   │   ├── panels\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── data_panel.py\\n│   │   │   │   ├── fitting_panel.py\\n│   │   │   │   └── results_panel.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── controller.py\\n│   │   │   ├── models.py\\n│   │   │   ├── page.py\\n│   │   │   └── requests.py\\n│   │   ├── components\\n│   │   │   ├── __init__.py\\n│   │   │   ├── mpl_canvas.py\\n│   │   │   ├── parameter_panel.py\\n│   │   │   └── sample_table.py\\n│   │   ├── processing\\n│   │   │   ├── panels\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── merge_panel.py\\n│   │   │   │   └── workflow_panel.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── controller.py\\n│   │   │   ├── models.py\\n│   │   │   ├── page.py\\n│   │   │   ├── requests.py\\n│   │   │   └── utils.py\\n│   │   ├── services\\n│   │   │   ├── __init__.py\\n│   │   │   └── threading.py\\n│   │   ├── ui\\n│   │   │   ├── __init__.py\\n│   │   │   └── base.py\\n│   │   ├── visualization\\n│   │   │   ├── panels\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── image_panel.py\\n│   │   │   │   ├── project_panel.py\\n│   │   │   │   └── trace_panel.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── controller.py\\n│   │   │   ├── models.py\\n│   │   │   ├── page.py\\n│   │   │   └── requests.py\\n│   │   ├── __init__.py\\n│   │   ├── config.py\\n│   │   ├── config.yaml\\n│   │   └── main.py\\n│   └── pyproject.toml\\n├── pyama-qt-slim\\n│   ├── src\\\\pyama_qt\\n│   │   ├── app\\n│   │   │   ├── analysis\\n│   │   │   │   ├── components\\n│   │   │   │   │   ├── __init__.py\\n│   │   │   │   │   ├── analysis_data_panel.py\\n│   │   │   │   │   ├── analysis_fitting_panel.py\\n│   │   │   │   │   └── analysis_results_panel.py\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── page.py\\n│   │   │   ├── processing\\n│   │   │   │   ├── components\\n│   │   │   │   │   ├── __init__.py\\n│   │   │   │   │   ├── merge_panel.py\\n│   │   │   │   │   └── workflow_panel.py\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── page.py\\n│   │   │   ├── visualization\\n│   │   │   │   ├── components\\n│   │   │   │   │   ├── __init__.py\\n│   │   │   │   │   ├── image_panel.py\\n│   │   │   │   │   ├── project_panel.py\\n│   │   │   │   │   └── trace_panel.py\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── page.py\\n│   │   │   ├── __init__.py\\n│   │   │   └── page.py\\n│   │   ├── components\\n│   │   │   ├── common\\n│   │   │   │   └── __init__.py\\n│   │   │   ├── ui\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── canvas.py\\n│   │   │   └── __init__.py\\n│   │   ├── lib\\n│   │   │   ├── __init__.py\\n│   │   │   ├── config.py\\n│   │   │   └── utils.py\\n│   │   ├── __init__.py\\n│   │   ├── globals.py\\n│   │   └── layout.py\\n│   ├── README.md\\n│   └── pyproject.toml\\n├── tests\\n│   ├── test_algo.ipynb\\n│   ├── test_bioio.py\\n│   ├── test_nd2.py\\n│   └── test_workflow.py\\n├── CLAUDE.md\\n├── README.md\\n└── pyproject.toml\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"676c109a799e58767c41512f562928101f2588d0","last_commit_update":"2025-10-01T09:54:35+02:00","gmt_create":"2025-10-03T22:04:54.7286559+02:00","gmt_modified":"2025-10-03T22:43:49.782014+02:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"0.2.4\"}"}}